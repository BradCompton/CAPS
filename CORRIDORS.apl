    ∇ A CORRIDORS S;buffer;B;X;Z;T;bandwidth;E;D;O;I;J;K;L;R;density;Y;byiei;G;search;multiplier;maxsel;Q[1]   ⍝CAPS Corridors metric--score potential corridors among reserves[2]   ⍝⍺ = (landcover grid) (settings) (result grid) (buffer) (include grid)[3]   ⍝Source:[4]   ⍝   reserves    either binary grid marking reserves, or quantitative grid of inclusion frequency[5]   ⍝   IEI[6]   ⍝Parameters:[7]   ⍝   bandwidth   bandwidth of the resistant kernel (m)[8]   ⍝   multiplier  multiplier on resistance[9]   ⍝   maxsel      maximum value in reserve grid, used to scale selection frequency from 0 to 1[10]  ⍝   byiei       if yes, each resulting kernel is multiplied by IEI at the focal cell[11]  ⍝   window      window for tangent curvature (m; must be an odd number of cells)[12]  ⍝   search      search distance, in s.d.[13]  ⍝   density     kernels are built for every nth cell for efficiency[14]  ⍝   cellsize    cell size (m)[15]  ⍝Result:[16]  ⍝   corridors0  raw corridors result, ready for tangent curvature[17]  ⍝B. Compton, 6 Aug 2012, from CONNECT[18]  [19]  ⍝Note: this doesn't really do what we want.  See Reserve Corridors for LCC.docx for details.[20]  [21]  [22]  [23]   READPARS ME[24]   buffer←B←4⊃A[25]   X←0 MVREP Q←READ 1⊃1⊃A                                     ⍝Read reserves[26]   Z←(⍴X)⍴0[27]   →(^/X=0)/0                                                 ⍝Bail if nothing interesting in grid[28]   Y←0 MVREP READ 2⊃1⊃A                                       ⍝Read IEI[29]   X[((1↑⍴X)⍴((density-1)⍴1),0)/⍳1↑⍴X;]←0                     ⍝given density option, only build kernels for every nth cell[30]   X[;((1↓⍴X)⍴((density-1)⍴1),0)/⍳1↓⍴X]←0[31]  [32]   T←⌈bandwidth×3÷cellsize[33]   E←SPREAD (bandwidth×3÷cellsize) (T+1) (T+1) ((2⍴1+2×T)⍴1)  ⍝Maximum possible kernel given search = 3[34]   E←(E≠0)×ZDENSITY 0⌈3-E÷bandwidth÷cellsize[35]   E←E÷(+/,E←(2⍴T-B)↓(-2⍴T-B)↓E)÷+/,E                         ⍝Scale to search = 3[36]  [37]   D←(⍳1+2×B)-B+1                                             ⍝Maximum radius possible to travel[38]   O←1E6×B<DIST 1+B×2                                         ⍝Circle mask for search < 3[39]  [40]  [41]   I←B[42]  L1:→(((1↑⍴X)-B)<I←I+1)/L5                                   ⍝For each row, -----[43]   BREAKCHECK[44]   →(~∨/0≠B↓(-B)↓X[I;])/L1                                    ⍝   If empty row, skip it[45]   J←B[46]  L2:→(((1↓⍴X)-B)<J←J+1)/L1                                   ⍝   For each column,[47]   →(~0≠X[I;J])/L2                                            ⍝      If we're doing this cell,[48]   K←I+D ⋄ L←J+D[49]   R←1+multiplier×1-Y[K;L]                                    ⍝         Resistance values come from IEI[50]   R←1E6 MVREP R (X[K;L]=MV)                                  ⍝         Missing cells get resistance of a million[51]  L3:→(search≥3)/L4                                           ⍝         If search < 3,[52]   R←R+O                                                      ⍝            Restrict to circle[53]  L4:G←SPREAD ((X[I;J]÷maxsel)×bandwidth×3÷cellsize) (K⍳I) (L⍳J) R  ⍝         Build resistant kernel, with spread proportional to selection frequency[54]   G←(bandwidth÷cellsize) 3 CONNECT_RESCALE G E ((⍴E)⍴1)      ⍝         Rescale, but no edge correction[55]   G←G×(byiei+1)⊃1 (Y[I;J])                                   ⍝         If byiei = yes, weight kernel by focal IEI[56]   Z[K;L]←Z[K;L]+G×density*2                                  ⍝         adjust for density[57]   →L2[58]  [59]  L5:transparent←2                                            ⍝Write transparently/summed[60]   Z WRITE 3⊃A[61]   →0[62]  [63]  [64]  what:auxiliary[65]  type:standard[66]  info:('reserves' 'IEI') '' ('corridors0') (⌈bandwidth×search÷cellsize) 'reserves'      ⍝Source grid, settings table, result grid, buffer size, and include grid[67]  check:CHECKVAR 'multiplier bandwidth maxsel byiei window search density'    ∇