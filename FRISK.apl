    ∇ FRISK;I;Z;W;B;P;E;D;X;M;Q;R;Y;warn;T;G;V;fn;S;C;N;K;F;dot;O;futuregrids;futurepath[1]   ⍝Check parameters and inputs for current CAPS run to check for errors[2]   ⍝Logs warnings and errors, and stops execution on errors[3]   ⍝Also logs start and end of run, and creates .zip file of all parameters[4]   ⍝B. Compton, 22 Jan and 2-4 Feb 2009; parameter revolution 25-26 Feb 2009[5]   ⍝Changes for watershed metrics and other improvements Aug 2009[6]   ⍝7 Mar 2011: frisk for include grid[7]   ⍝16 Sep 2011: don't frisk for optional grids (those with * in name)[8]   ⍝3 Feb 2012: check settings variables against scalesettings.txt[9]   ⍝13 Apr 2012: report grid server extent[10]  ⍝28 Sep 2012: allow runs with no metrics (POST only, presumably)[11]  ⍝1 Aug 2013: if tilemapinclude = no and no mask, give error[12]  ⍝3 Jan 2014: new zippars and checkalign options[13]  ⍝13 Jan 2014: Make sure we're not trying to use landscapewide grids when landscapewide = no,[14]  ⍝   check for bad mosaics, use IFGRIDEXISTS for all grid checking, make sure no input mosaics if mosaics = no[15]  ⍝27 Jan 2014: use SETTILE instead of noread←1 nonsense[16]  ⍝6 Mar 2014: don't frisk include grid = '*' -- this means don't do TILEMAP[17]  ⍝6 Mar 2014: don't check all grids in inputs.par[18]  ⍝1 Jun 2014: give error if mask grid is named but doesn't exist[19]  [20]  [21]  [22]   ⍎(0=⎕NC'warnings')/'warnings←0 0⍴'''''[23]   W←E←0[24]   Z←''[25]   →(0∊⊃,/⎕NC¨↓MATRIFY 'cluster example blocks')/L2   ⍝Have to bail if any of these are missing[26]   Z←Z OVER warnings[27]   Z←((~0∊⍴example)/'~> > > Example facility is ON for ',(⍕.5×⍴,example),' cell',((2≠⍴,example)/'s'),' (or ',(⍕⍴,example),' item',((1≠⍴,example)/'s'),') < < <~') OVER Z[28]   Z←((~0∊⍴blocks)/'~> > > Running for ',(⍕.5×⍴,blocks),' selected block',((2≠⍴,blocks)/'s'),': ',(⍕(8⌊⍴,blocks)↑,blocks),((6<⍴,blocks)/'...'),' < < <~') OVER Z[29]  [30]  ⍝Make sure all paths exist[31]   X←MATRIFY 'pathI pathG pathA pathM pathP pathR pathE pathU pathN ',((⊂'scenarios')∊metrics[;1])/'pathD'[32]   Z←Z OVER (W←0∊B)/'~Warning ¦ Paths not set:',,' ',P←(~B←2=⊃,/⎕NC¨↓X)⌿X[33]  [34]  [35]  ⍝Create result paths if necessary[36]   →(0∊⍴X←(0=P MATIOTA X)⌿X)/L1[37]   →(0∊⍴X←(~B←IFEXISTS¨⍎¨↓X)⌿X)/L1[38]   Z E ← Z MAKEPATHS (B←~IFEXISTS¨T)/T←⍎¨↓X       ⍝Create missing paths if necessary.  (Note: model and run paths will already exist anyway)[39]   Z←Z OVER (1∊B)/'~Note ¦ paths created:' OVER ' ',' ',' ',(B⌿X),' ','=',' ',MIX⍎¨↓B⌿X[40]  [41]  [42]  ⍝Make sure all parameter files exist[43]  L1:→(∨/0≠P MATIOTA MATRIFY 'pathI')/L30[44]   ⍎(0≠T←⎕NC'noland')/'T←noland'                  ⍝If noland=yes, don't check for landcover.par[45]   X←(T,0)↓MATRIFY landcoverpar,' metrics.par parameters.par'[46]   X←(0=IFEXISTS¨(⊂pathI) PATH¨↓X)⌿X[47]   →(0∊⍴X)/L2[48]   Z←Z OVER '~Error ¦ Missing (or locked) parameter files: ' OVER ' ',' ',' ',(⎕PW-3) TELPRINT X[49]   →(E←R←1)/L30[50]  [51]  [52]  ⍝Check general options[53]  L2:warnings←0 0⍴''[54]   →(~CHECKPARS ,⊂'CAPS')/L3[55]   E←R←1[56]   Z←Z OVER '~Missing or incorrect general options under [caps] in parameters.par:' OVER warnings[57]   warnings←0 0⍴''[58]   →L30[59]  [60]  [61]  ⍝Check for optional input tables[62]  L3:X←MATRIFY synonymspar,' groups.par'[63]   X←(0=IFEXISTS¨(⊂pathI) PATH¨↓X)⌿X[64]   →(0∊⍴X)/L4[65]   Z←Z OVER '~Note ¦ Optional parameter files not supplied: ' OVER ' ',' ',' ',(⎕PW-3) TELPRINT X[66]  [67]  [68]  ⍝See if mask grid exists[69]  L4:B←~0∊⍴Q←1 GRIDNAME 'mask'[70]   :if B[71]      :if ~IFGRIDEXISTS Q[72]         Z←Z OVER '~Error ¦ Mask grid ',Q,' does not exist'[73]         E←1[74]      :else[75]         Z←Z OVER '~Note ¦ Mask grid = ',Q[76]      :end[77]   :else[78]      :if tilemapinclude[79]         Z←Z OVER '~Note ¦ Mask grid not being used'[80]      :else[81]         Z←Z OVER '~Error ¦ No mask grid specified when tilemapinclude = no'[82]         E←1[83]      :end[84]   :end[85]  [86]   →(0=⎕NC'exclude')/L5                    ⍝If any cover types are excluded,[87]   →(0∊⍴exclude)/L5[88]    Z←Z OVER '~Note ¦ Excluded cover types: ',TOLOWER exclude[89]  [90]  ⍝Make sure all grids named in inputs.par exist[91]  [92]  L5:V←0 2⍴''[93]  [94]  [95]  →L9     ⍝We don't want to do this--there are a ton of grids in inputs.par, and this takes forever; also[96]          ⍝if a grid we aren't using is getting updated, we get errors of out of date mosaics               THIS CAUSES PROBLEMS WHEN LAUNCHING E.G. CONNECT ***[97]  [98]  [99]   →(~IFEXISTS pathI PATH inputspar)/L6[100]  G←1 0 TABLE inputspar[101]  →(~G≡1 1⍴⊂'')/L7                      ⍝If inputs.par exists,[102] L6:Z←Z OVER '~Note ¦ Inputs.par doesn''t exist; default grid names will be used.'[103]  →L9[104] L7:→(0∊~B←⊃,/IFGRIDEXISTS¨Q←1 GRIDNAME G[;1])/L8[105]  Z←Z OVER '~Warning ¦ Missing grids named in inputs.par (some may not be necessary for run):'[106]  Z←Z OVER ' ',' ',' ',(MIX (~B)/Q),' ',MIX '(',¨((~B)/G[;1]),¨')'[107] L8:V←(⊂inputspar),[1.5]B/Q           ⍝Later we'll make sure the grids that do exist align with the reference grid[108] [109] [110] ⍝Make sure reference grid exists and read grid info[111] L9:Z←Z OVER (R←~IFGRIDEXISTS refgrid)/'~Error ¦ Missing reference grid: ',refgrid←1 GRIDNAME 'reference'[112]  E←E∨R[113]  →R/L10[114] [115] [116] ⍝Make sure all metrics exist[117] ⍝Make sure all metric parameters exist[118] ⍝Make sure all metric tables exist[119] ⍝Make sure all input and settings grids exist and align[120] ⍝Make sure all input table values exist in landcover.par[121] ⍝Make sure all scenario result directories exist[122] L10:→(∨/0≠P MATIOTA MATRIFY 'pathI pathG')/L30[123]  fn←'settings'[124]  warn←1[125]  warnings←0 0⍴''[126]  I←0[127] [128]  →(0∊⍴M←metrics)/L23                            ⍝If no metrics, skip all of this stuff[129]  Q←(T←⊃,/'@'=1↑¨LJUST¨M[;1])⌿M[130]  M←(~T)⌿M                                       ⍝Don't worry about @-directives now[131]  →(^/0=B←~(TOUPPER¨Q[;1])∊⊂'@WAIT')/L11[132]  Z←Z OVER '~Error ¦ Illegal @-directive:',⍕B⌿Q[;1][133]  →(E←1)/L30[134] L11:→(~(1<1↑⍴M)^1∊B←(⊂'exclusive')≡¨GETTYPE¨M[;1])/L12    ⍝If exclusive metric selected, it must be alone[135]  Z←Z OVER '~Error ¦ Exclusive metric (',(⊃B/M[;1]),') run with other metrics selected (need to turn them off):'[136]  Z←Z OVER ' ',' ',' ',MIX (~B)/M[;1][137]  →(E←1)/L30[138] [139] L12:K←'~Note ¦ Metrics called:'[140]  K←K OVER ' ',' ',' ',(⎕PW-3) TELPRINT MIX ((T⍳T)=⍳⍴T)/T←M[;1][141]  F←1[142] [143]  →(^/~T←3≠⊃,/⎕NC¨TOUPPER¨M[;1])/L13            ⍝If any non-existent metrics called,[144]  Z←Z OVER '~Error ¦ Non-existent metric',((1≠+/T)/'s'),' called:'[145]  Z←Z OVER ' ',' ',' ',(⎕PW-3) TELPRINT MIX T/M[;1][146]  E←1[147]  M←(~T)⌿M                                       ⍝   Drop bogus ones[148] [149] L13:M←M⍪(∨/(⊂'watershed')≡¨GETTYPE¨TOUPPER M[;1])⌿(1,1↓⍴M)⍴'watershed' 'yes' '*' MV '' 0   ⍝   If any watershed metrics called, frisk WATERSHED too[150]  Q←(⊂pathI) PATH¨(Q←(~0∊¨⍴¨M[;5])/M[;5]) EXT¨⊂'par'⍝Get scenario files[151]  Q←((Q⍳Q)=⍳⍴Q)/Q[152]  →(^/T←IFEXISTS¨Q)/L14                          ⍝and make sure they're all there[153]  Z←Z OVER '~Error ¦ Missing scenario files:'[154]  Z←Z OVER ' ',' ',' ',MIX (~T)/Q[155]  →(E←1)/L30[156] [157] L14:→((1↑⍴M)<I←I+1)/L19                         ⍝For each metric,[158]  →(CHECKPARS M[I;])/L18                         ⍝   Check metric-specific parameters.  Don't do more if any errors.[159]  →(~M[I;1]∊'connect' 'aqconnect' 'sim' 'linkages')/L15      ⍝   If connect, sim, etc.,[160]  →(0=⎕NC'resist')/L15[161]  →(M[I;6]←0∊⍴resist)/L15                        ⍝      and using resistance table,[162]  K←K OVER (F/'~'),'   Resistance table for ',(⊃M[I;1]),' in use (values take precedence over settings)'[163]  F←0[164] L15:G←1 2⍴⊂''[165]  →(0∊⍴⊃M[I;5])/L16                              ⍝   If using scenarios,[166]  G←1 TABLE pathI PATH (⊃M[I;5]) EXT 'par'       ⍝      Get scenario stuff[167]  →(~0∊⍴warnings)/L18                            ⍝      bail out if errors from TABLE[168] L16:→(R←E)/L30[169]  X←1 GETINFO ⊃M[I;1]                            ⍝   Get metric info; don't suppress * in optional grid names[170]  →(0∊⍴X)/L14[171]  ⍎(2≤≡1⊃X)/'X[1]←⊂(⊃,/0≠⍴¨1⊃X)/1⊃X'             ⍝   Drop out empty input grids (happens in LINKAGES)[172]  X[1]←⊂(~'*'∊¨1⊃X)/1⊃X                          ⍝   Drop optional ('*') grids at this point--we don't frisk for them[173]  V←V⍪M[I;1],[1.5]⊃,/(GRIDNAME 1⊃X) MAKENAMES G[;1]  ⍝   Add list of input grids[174]  V←V⍪((~'*'∊5⊃X)^~0∊⍴5⊃X)⌿1 2⍴M[I;1],⊂GRIDNAME 5⊃X  ⍝   And add include grid--unless it has '*'[175]  T←(~T≡¨⊂'')/T←⊃,/(2⊃X) MAKENAMES G[;2]         ⍝   Settings table(s)[176]  →(0∊⍴T)/L17                                    ⍝   If any settings tables,[177]  T←(⊃,/IFEXISTS¨(⊂pathI) PATH¨T EXT¨⊂'par')/T   ⍝   Only care about tables that exist[178]  →(0∊⍴T)/L17                                    ⍝   If any settings tables,[179]  S←(1 TABLE¨(⊂pathI) PATH¨T EXT¨⊂'par')         ⍝      read grid names (missing ones get added to warnings)[180]  →(S≡,⊂1 1⍴⊂'')/L17                             ⍝      skip out if settings table is empty[181]  →(~0∊⍴warnings)/L18                            ⍝      bail out if errors from TABLE[182] ⍝ T←(0=⊃,/⍴¨((⊃⍪/S),⊂'')[;2])/(⊃⍪/S)[;1][183]  T←((~(⊂,1)≡¨⎕VI¨((⊃⍪/S),⊂'')[;3])∨0=⊃,/⍴¨((⊃⍪/S),⊂'')[;3])/(⊃⍪/S)[;1][184]  Z←Z OVER (T←~0∊⍴T)/'~Error ¦ Missing or non-numeric weight for settings grids:',⍕T[185]  E←E∨T[186]  S←(⊃⍪/S)[;1][187]  T←(MATIN pathT PATH scales)[;1][188]  T←((T⍳S)>⍴T)/S[189]  Z←Z OVER (T←~0∊⍴T)/'~Error ¦ Settings grids and ranges missing from ',scales,':',⍕T[190]  E←E∨T[191]  S←GRIDNAME¨(⊂pathN),¨S[192]  V←V⍪M[I;1],[1.5]S                              ⍝      and add list of settings grids[193]  T←((F/'~'),'   Settings grids for ',(⊃M[I;1]),':') OVER ' ',' ',' ',' ',' ',' ',(⎕PW-6) TELPRINT MIX S[194]  K←K OVER (M[I;6])⌿T[195] L17:→(0∊⍴⊃M[I;5])/L14                           ⍝   If using scenarios,[196]  T←⊃,/(3⊃X) MAKENAMES G[;3][197]  →(0∊⍴T)/L14[198]  T←(~0∊¨⍴¨T)/T←(-¯1+(⌽¨T)⍳¨'\')↓¨T              ⍝      Find result paths[199]  Z E ← Z MAKEPATHS (B←~IFEXISTS¨T)/T←(⊂pathR) PATH¨T       ⍝      and create them if they don't exist[200]  →L14[201] [202] L18: Z←Z OVER '~Error ¦ Problems with parameters for ',⊃M[I;1][203]  Z←Z OVER ' ',' ',' ',warnings[204]  Z←Z OVER '   (skipping check of input and settings grids for ',(⊃M[I;1]),')'[205]  warnings←0 0⍴''[206]  W←E←1[207]  →L14[208] [209] L23:Z←Z OVER '~Warning ¦ No metrics called!'[210]  K←0 0⍴''[211] L19:Z←K OVER Z[212] [213] ⍝Now we have list of metrics and all input and settings grids used for each[214]  N←((N⍳N)=⍳⍴N)/N←V[;2]                  ⍝Unique grids with name replacement from inputs.par[215]  →(0∊⍴N)/L21[216]  →(0∊⍴Q←(~B←⊃,/IFGRIDEXISTS¨(⊂pathG) PATH¨N)/N)/L21[217]  N←B/N                                  ⍝Grids that exist[218]  E←1[219]  Z←Z OVER '~Error ¦ Missing input, include, or settings grids (in ',pathG,'):'[220]  Z←Z OVER warnings[221]  warnings←0 0⍴''[222]  S←⊃,/⌈/⍴¨Q[223]  I←0[224] L20:→((⍴Q)<I←I+1)/L21                   ⍝For each missing grid,[225]  T←((T⍳T)=⍳⍴T)/T←(V[;2]≡¨Q[I])/V[;1][226]  Z←Z OVER ' ',' ',' ',(S↑⊃Q[I]),' (',(1↓⊃,/' ',¨T),')'[227]  →L20[228] [229] [230] L21:⍝Make sure we're not trying to use landscapewide grids when landscapewide = no[231]  :if (~0∊⍴N)^~landscapewide[232]  :andif 1∊T←0=⊃,/⍴¨⊃¨MOSAICINFO¨D←(⊂pathG) PATH¨N[233]     E←1[234]     Z←Z OVER '~Error ¦ landscapewide = no, but these grids are not mosaics:'[235]     Z←Z OVER ' ',' ',' ',(⎕PW-3) TELPRINT MIX T/D[236]  :end[237] [238] ⍝Check for mutilated grids[239]  :if 1∊T←MULTITILE¨N[240]     E←1[241]     Z←Z OVER '~Error ¦ Multitiled ESRI grids:'[242]     Z←Z OVER ' ',' ',' ',(⎕PW-3) TELPRINT MIX T/N[243]  :end[244] [245] ⍝Check for out of date mosaics and those with missing source grids[246]  :if mosaics                                        ⍝If mosaics,[247]     O←FRDBL¨(⊂pathG) PATH¨(¯2×(⊂'_m')≡¨TOLOWER¨¯2↑¨N)↓¨N  ⍝   Originals of any auto-mosaics[248]     →(0∊⍴O)/L61[249]     :if substmosaics                                ⍝   if substituting mosaics,[250]        T←0=¨⊃,/⍴¨⊃¨MOSAICINFO¨O                     ⍝      those that are grids[251]        D←T^0≠¨⊃,/⍴¨⊃¨MOSAICINFO¨O,¨⊂'_m'            ⍝      and have sister _m mosaics[252]        O←((~T)/O),D/O,¨⊂'_m'                        ⍝      names of original mosaics and substituted mosaics[253]     :else                                           ⍝   else, no substitution[254]        O←(0≠¨⊃,/⍴¨⊃¨MOSAICINFO¨N)/N                 ⍝      inputs that are mosaics (they were supplied)[255]     :end                                            ⍝   Now we have a full list of mosaics[256] [257]     :if ∨/T←2=D←FRISKMOSAICS O                      ⍝   If any mosaics are out-of-date,[258]        E←1[259]        Z←Z OVER '~Error ¦ These mosaics are out-of-date with respect to source grid:'[260]        Z←Z OVER ' ',' ',' ',(⎕PW-3) TELPRINT MIX T/O[261]     :end[262]     :if ∨/T←D=3                                     ⍝   If any mosaics have missing source,[263]        Z←Z OVER '~Warning ¦ The source grid is missing for these mosaics:'[264]        Z←Z OVER ' ',' ',' ',(⎕PW-3) TELPRINT MIX T/O[265]     :end[266]  :else[267]     :if ∨/T←9≠FRISKMOSAICS N                        ⍝Else, mosaics are turned off--make sure no inputs are mosaics[268]        E←1[269]        Z←Z OVER '~Error ¦ mosaics = no, but input mosaics were supplied:'[270]        Z←Z OVER ' ',' ',' ',(⎕PW-3) TELPRINT MIX T/N[271]     :end[272]  :end[273] [274] [275] ⍝Use GRIDDESCRIBE here to make sure grids align with reference grid[276] L61:→(R∨~checkalign)/L24[277]  D←5↑GRIDDESCRIBE refgrid[278]  T←5↑¨GRIDDESCRIBE¨(⊂pathG) PATH¨N[279]  Q←(~(⊂¯1↓D)≡¨¯1↓¨T)/N[280]  →(0∊⍴Q)/L24[281]  E←1[282]  Z←Z OVER '~Error ¦ Misaligned input or settings grids (in ',pathG,'):'[283]  S←⊃,/⌈/⍴¨Q[284] [285]  I←0[286] L22:→((⍴Q)<I←I+1)/L24                   ⍝For each misaligned grid,[287]  T←((T⍳T)=⍳⍴T)/T←(V[;2]≡¨Q[I])/V[;1][288]  Z←Z OVER ' ',' ',' ',(S↑⊃Q[I]),' (',(1↓⊃,/' ',¨T),')'[289]  →L22[290] [291] [292] ⍝Make sure all values in landcover grid exist in landcover table[293] L24:→(R∨~checkland)/L27                 ⍝This takes a while, so only do it if asked[294]  LOG 'Checking landcover values against landcover.par...'[295] [296]  Q←landcover[;1][297]  Y←⍳0[298]  I←0[299]  C←ifchat ⋄ ifchat←0[300]  BLOCK 1000 1000 0[301]  SETTILE[302]  D←TILEMAP refgrid 1000 0[303] [304]  I←0[305] L25:→(~D[I←I+1])/L26[306]  DOT[307]  BREAKCHECK[308]  X←,READ refgrid                ⍝While there are blocks to read,[309]  Y←Y,(~X∊Q,MV)/X                ⍝   Find bad values[310]  Y←((Y⍳Y)=⍳⍴Y)/Y[311] L26:→(NEXTBLOCK≠0)/L25[312]  ifchat←C[313]  ⍝∆CLEANUP   ⍝I don't this this is safe here...[314]  →(0∊⍴Y)/L27[315]  Y←Y[⍋Y][316]  E←1[317]  Z←Z OVER '~Error ¦ Unknown values in landcover grid ',refgrid,' (not in landcover.par):'[318]  Z←Z OVER ' ',' ',' ',(⎕PW-3) TELPRINT MATRIFY⍕Y[319] [320] [321] ⍝Report all ⎕STOPs[322] L27:X←(⊃,/0≠⍴¨⎕STOP¨↓X)⌿X←((⌽RJUST ⎕NL 3)[;1]≠'c')⌿⎕NL 3[323]  →(0∊⍴X)/L28[324]  W←1[325]  Z←Z OVER '~Warning ¦ ⎕STOP set in functions:'[326]  Z←Z OVER ' ',' ',' ',(⎕PW-3) TELPRINT X[327] [328] [329] ⍝Zip up input parameters and save in results\[330] L28:→(E∨R)/L30[331]  :if zippars[332]     D←(((D≠' ')/D←(¯1+NOW⍳',')↑NOW)),'-',,'ZI2' ⎕FMT ⎕TS[4 5][333]     (D←pathR PATH 'CAPSpars',D) ZIP (path PATH pathdir),' ',pathI[334]     Z←Z OVER (~Q←IFEXISTS D,'.zip')/'~Warning ¦ Unable to create ',D,'.zip (bad path or 7z.exe unavailable?)'[335]  :else[336]     D←Q←0[337]  :end[338] ⍝Write start of run, parameter zip file, and successful completion to results\CAPSresults.log[339]  X←'[',NOW,']  Starting CAPS run'[340]  X←X OVER Q/'[',NOW,']  ',T←'Parameters saved in ',D,'.zip'[341]  Z←Z OVER Q/'~Note ¦ ',T[342]  →(IFEXISTS T←pathR PATH 'CAPSresults.log')/L29[343]  X NWRITE T[344]  →L30[345] L29:X NAPPEND T[346] [347] [348] ⍝Report if unable to continue[349] L30:→(~R)/L31[350]  Z←Z OVER '~FRISK unable to finish because of',(W/' warnings'),((2=W+E)/' and'),(E/' errors'),'.'[351] [352] [353] ⍝Report everything in log[354] L31:Z←Z OVER warnings[355]  Z←(∨/Z≠' ')⌿Z[356]  Z←(~0∊⍴Z)⌿T OVER (Z⍪' ') OVER T←(⎕PW⌊1↓⍴Z)⍴'-'[357]  Z←('.~.',⎕TCNL) TEXTREPL MTOV Z[358]  LOG Z[359] [360] [361] ⍝Finish up[362] ⍝ ∆CLEANUP                                ⍝Release local grid server - NO! this trashes current window![363]  →(~E)/L32                              ⍝If any errors,[364]  LOG '*** CAPS run cannot continue because of errors.'[365]  →(~1∊(~1∊(⊂,⎕SI) ⎕SS¨'CSE[' 'POSTCALL['))/L33    ⍝If called by CSE or POSTCALL and found errors,[366]  ⎕ERROR 'Errors launching CAPS (See ',logfile,' for details)'[367] L33:→                                      ⍝   bail out completely[368] L32:→(~friskonly)/0                     ⍝If only frisking,[369]  LOG 'CAPS exiting.  (friskonly = yes)'[370]  →                                      ⍝   bail out completely    ∇