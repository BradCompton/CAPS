    ∇ S CSE_MODIFY P;D;K;G;O;R;T;L;Q;W;B;N;H;head;J;dev;C[1]   ⍝Modify landcover and settings grids for scenario #1⊃⍵ in path 2⊃⍵, settings control table ⍺[2]   ⍝Global:[3]   ⍝   csb         scenario table[4]   ⍝   smeans      settings means[5]   ⍝   landgrids   grids that are treated as landcover rather than settings[6]   ⍝Set changed for text description in report (most items are set in CSE_BUFFERS):[7]   ⍝   changed[J;7]   approximately [n] miles of modified roads[8]   ⍝   changed[J;8]   [n] acres of landcover change to [x][9]   ⍝   changed[J;9]   [x] (new landcover type)[10]  ⍝B. Compton, 15-20 Aug 2012, pulled from CSE because it was just too unwieldy[11]  ⍝6 Jun 2013: update include grid[12]  ⍝14 Jun 2013: translate postland → land where necessary[13]  ⍝17 Jun 2013: write mitigation grid for SCENARIOS[14]  ⍝27 Jun 2013: when modifying crossings table, also have to modify bankcrossings[15]  ⍝11 Jul 2013: for lands and postland, streams trump everything else; 12 Jul: also preserve centerlines for land when landcover change[16]  ⍝1 Aug 2013: don't replace culverts or dams in land with roads[17]  ⍝24 Apr 2014: aargh! name collision when using 'row' - go to cellrow, cellcol[18]  [19]  [20]  [21]   J P ← P[22]   LOG '   Modifying features...'[23]   D←(1↑⍴csb)⍴0[24]   dev←(0 'groups.par' LOOKUP 1 2⍴0,'developed')[;1],⊃,/LOOK¨FRDBL¨↓','MATRIFY exclude[25]   landcover←¯1 'no dam' OVER ¯1 TABLE landcoverpar[26]   K←0[27]  L1:→((1↑⍴csb)<K←K+1)/L10                                        ⍝For each feature,[28]   BREAKCHECK[29]   LOG (6⍴' '),'Feature: ',(⊃csb[K;2]),' ',(⊃csb[K;1]),(~0∊⍴⊃csb[K;8])/' - ',⊃csb[K;8][30]   ⍎'G O ← ',(csb[K;csb_ COL 'feature']⊃'POINTGRID' 'LINEGRID' 'POLYGRID'),' ','⊃csb[K;csb_ COL ''spatial'']' ⍝   Convert to grid[31]  [32]   →(~'roadchange'≡⊃csb[K;csb_ COL 'type'])/L2                    ⍝   If roadchange,[33]   R←MV≠READBLOCK (⊂pathS PATH GRIDNAME 'roads'),T←(FINDCELL O),⍴G⍝      Read roads grid[34]   G←G×R∨MV≠READBLOCK (⊂pathS PATH GRIDNAME 'trains'),T           ⍝      and trains and intersect with grid[35]   changed[J;7]←changed[J;7]+0.000621371×21×+/,G                  ⍝      approximate miles of road change (typical road cell = 20 m of road)[36]  [37]  L2:→(~'landcover'≡⊃csb[K;csb_ COL 'type'])/L3                   ⍝   If landcover change,[38]   R←READBLOCK (⊂pathG PATH GRIDNAME 'lands'),T←(FINDCELL O),⍴G   ⍝      Read landcover + strams grid[39]   G←G×~R∊LOOKUP 0,[1.5]'roads' 'dam'                             ⍝      Don't change anything on roads or dams[40]   G←G×1≠READBLOCK (⊂pathS PATH GRIDNAME 'streams'),T             ⍝      Also don't change stream centerlines[41]   changed[J;8]←changed[J;8]+0.000247105×+/,G×cellsize*2          ⍝      Acres of landcover change (from m*2)[42]   changed[J;9]←⊂,UNIQUENZ (⊃changed[J;9]),⎕FI⊃csb[K;csb_ COL 'value1']⍝      to type(s) *Landcover type is value1; we ignore control table here[43]  [44]  L3:→reportonly/L1                                               ⍝   If reportonly, all we're doing is updating changed and exiting[45]   T←S[1;]≡¨csb[K;csb_ COL 'type']                                ⍝   Pick out type[46]   T←T^(S[2;]≡¨⊂'')∨S[2;]≡¨'new' 'mod' 'del'[1++/(⍳2)×csb[K;csb_ COL 'altered deleted']≡¨⊂,'y']  ⍝   and subtype[47]   T←2 0↓S[;1,((¯2↓T),1 1)/⍳1↓⍴S]                                 ⍝   Subtable of settings, for this feature (and grid paths)[48]   D[K]←⊂(~T[;2]≡¨⊂'')⌿T                                          ⍝   drop landcover/settings grids we won't be changing[49]  [50]  [51]   L←0[52]  L4:→((1↑⍴K⊃D)<L←L+1)/L1                                         ⍝---For each landcover/settings grid to modify,[53]   BREAKCHECK[54]  [55]   →(L5,L6,L6,L7)[(,'T') 'value1' 'value2'⍳(K⊃D)[L;2]]            ⍝      Case table, value1, value2, landcover class or settings value[56]  L5:T←⊃csb[K;csb_ COL 'value',⍕1+~'landcover'≡⊃csb[K;csb_ COL 'type']][57]   Q←smeans[smeans[;1]⍳P2L ⎕FI T;smeans_ MATIOTA ⊃(K⊃D)[L;1]]     ⍝      Look up landcover class in table[58]   →L9[59]  [60]  L6:Q←⎕FI⊃csb[K;csb_ COL (K⊃D)[L;2]]                             ⍝      Use value1 or value2[61]  [62]   Q←(⊃(K⊃D)[L;1]) FOR_ABARRIERS Q                                ⍝      Special case: go from aquatic crossing score to barriers score[63]  [64]   :if ((K⊃D)[L;1])∊'land' 'lands'                                ⍝      If this is land or lands,[65]      Q←P2L Q[66]   :end[67]  [68]   :if (⊃(K⊃D)[L;1])≡'land'                                       ⍝      If this is landcover grid,[69]      (MVREP (G×~Q∊dev) (~G)) WRITEBLOCK (⊂P,'grids\include'),(FINDCELL O),(⍴G),0,1 ⍝         Write developed/not in footprint to include grid[70]      :if ~Q∊dev                                                  ⍝         If mitigation,[71]         T←NUM ⊃csb[K;csb_ COL 'value2']                          ⍝            mitigation discount[72]         changed[J;10]←⊂(⊃changed[J;10]),T                        ⍝            save for reporting[73]         (MVREP ((⍴G)⍴1-T÷100) (~G)) WRITEBLOCK (⊂P,'grids\mitigate'),(FINDCELL O),(⍴G),0,1  ⍝            factor to multiply IEI by for mitigation in SCENARIOS[74]      :end[75]   :end[76]   →L9[77]  [78]  L7:→(~(K⊃D)[L;1]∊landgrids)/L8                                  ⍝      Class or settings value: If a landcover type,[79]   Q←LOOK ⊃(K⊃D)[L;2]                                             ⍝      Look up class and return it[80]   →L9[81]  L8:Q←⎕FI ⊃(K⊃D)[L;2]                                            ⍝      Else, it's numeric for a settings variable[82]   →L9[83]  [84]  L9:[85]   :if ((⊃(K⊃D)[L;1])≡'land')^'roadchange'≡⊃csb[K;csb_ COL 'type']⍝      If road change of land grid,[86]      G←G^~(READBLOCK (⊂pathG PATH GRIDNAME 'land'),(FINDCELL O),(⍴G))∊⊃,/LOOK¨'Bridge/culvert' 'Dam'   ⍝         Don't replace culverts or dams[87]   :end[88]  [89]   Q←Q MVREP ((⍴G)⍴MV) G                                          ⍝      Set feature to value[90]  [91]   :if ((K⊃D)[L;1])∊'lands' 'postland'                            ⍝      If lands or postland,[92]      T←READBLOCK (⊂pathS PATH GRIDNAME 'streams'),(FINDCELL O),(⍴G)[93]      Q←MVREP Q (T=1)                                             ⍝         don't write on top of streams[94]   :end[95]   Q WRITEBLOCK (⊂P,⊃,/(K⊃D)[L;4 1]),(FINDCELL O),(⍴G),0,1        ⍝      and write the grid out transparently[96]   →L4[97]  [98]  L10:→reportonly/0[99]   K←1 1 2 0['crossing' 'wildlife' 'tr'⍳csb[;csb_ COL 'type']]                            ⍝Which table is modified: 1 = crossing, 2 = TR[100]  D←UNIQUENZ K[101]  D←D,(1∊D)/3                                                                            ⍝When doing crossings table, also have to do bankcrossings[102]  L←0[103] L11:→((⍴D)<L←L+1)/0                                                                     ⍝For each table to modify,[104]  Q R ← CSETABLE D[L]⊃'crossings' 'trpoints' 'bankcrossings'                             ⍝   Get table[105] ⍝Optionally, could clip to MER of buffer.  No great advantage.[106]  B←(K=D[L])∨(K=1)^D[L]=3                                                                ⍝   Targets for this table[107]  W←↑FINDCELL¨↓⊃⍪/B/csb[;csb_ COL 'spatial']                                             ⍝   Target cells for this table[108]  N←⊃,/^/~csb[B/⍳⍴B;csb_ COL 'altered deleted']='y'                                      ⍝   New rows to add[109]  →(^/N=0)/L12                                                                           ⍝   If any new rows,[110]  T←((+/N),1↓⍴Q)⍴0                                                                       ⍝      Empty new rows to add[111]  T[;⌈⌿2 2⍴R COL 'x-coord y-coord x.coord y.coord']←⊃⍪/N/B/csb[;csb_ COL 'spatial']      ⍝      x and y points[112]  T[;R COL 'cellrow cellcol']←N⌿W                                                        ⍝      rows and columns[113]  ⍝I THINK THAT'S ALL THE COLUMNS WE NEED[114]  Q←Q⍪T                                                                                  ⍝      add the new rows to the table[115] [116] L12:G←⊃,/(csb[B/⍳⍴B;csb_ COL 'altered']='y')∨^/csb[B/⍳⍴B;csb_ COL 'altered' 'deleted']='n'[117]  N←(↓Q[;R COL 'cellrow cellcol'])⍳↓G⌿W                                                  ⍝   Rows to modify (and rows we just added)[118]  T←'crossing' 'wildlife' 'tr'⍳csb[G⌿B⌿⍳1↑⍴csb;csb_ COL 'type']                          ⍝   Index into type of change[119]  H←R COL 'aquatic' 'terrestrial' 'tr'[T]                                                ⍝   Column that gets value1 (crossings: aquatic, wildlife: terrestrial, tr: tr)[120]  Q←Q SCATR_A (C⌿N,[1.5]H) ((C←H≠0)⌿⊃¨⎕FI¨csb[G/B/⍳⍴B;csb_ COL 'value1'])                ⍝   modified value (but no aquatic in bankcrossings)[121]  H←R COL 'terrestrial' '' 'tr'[T][122]  Q[(T=1)/N;R COL 'terrestrial']←⎕FI¨⍕¨csb[(T=1)/G/B/⍳⍴B;csb_ COL 'value2']              ⍝   terrestrial is value2[123]  Q←(~(⍳1↑⍴Q)∊(↓Q[;R COL 'cellrow cellcol'])⍳↓(G←⊃,/csb[B/⍳⍴B;csb_ COL 'deleted']='y')⌿W)⌿Q   ⍝   Remove deleted rows[124]  head←1↓⎕TCHT MTOV R[125]  Q TMATOUT P,'tables\',(D[L]⊃'crossings' 'trpoints' 'bankcrossings'),'.txt'             ⍝   Write table out[126]  →L11    ∇