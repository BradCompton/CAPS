    ∇ A MANYLINKS S;C;B;N;U;D;V;I;head;iterations;targets;alter;proximity;J;T;Q;pd;E;W;R;K;M;P;Y;units;bandwidth;O;inflate;new;justcount;Z[1]   ⍝Do second part of CAPS Critical Linkages II analysis in graphland: units in conjunction[2]   ⍝B. Compton, 17 Dec 2012[3]   ⍝1 Apr 2013: call FLOYDP before PC[4]   [5]   [6]   [7]    READPARS ME[8]   [9]    N←0 1 TABLE pathQ,'tables\nodes.txt'           ⍝List of all nodes[10]   T←0 1 TABLE pathQ,'tables\nodevalues.txt'      ⍝and get IEI-weighted size of each node[11]   N[;5]←T[T[;4]⍳N[;1];5]                         ⍝which we'll use for node importance[12]   U←0 1 TABLE pathQ,'tables\liveunits.txt'       ⍝List of units we're using[13]   W←MATIN pathQ,'tables\unitindex.txt'           ⍝Unit-internode index[14]   U←(U[;1]∊W[;1])⌿U                              ⍝We can't say anything about units not on paths, so drop them--they'll get nodata[15]   P←(+/¨P≠MV)↑¨P←↓0 1↓MATIN pathQ,'tables\manylinks.txt'  ⍝Read manylinks results so far--we'll use these to minimize duplicates[16]   C←D←MATIN pathQ,'tables\distance',(⊃KNAMES bandwidth←bandwidth×1000),'.txt'    ⍝Read distance matrix[17]   V←N[;1 5] PC FLOYD D                           ⍝Fill out probability matrix and calculate P(C) for unmodified landscape[18]   pd←(0=1↑0⍴proximity)+(2×proximity≡'pair')+(3×proximity≡'group')+4×proximity≡'path'   ⍝Proximity rule[19]   pd←pd,(alter≥1)+(2×alter<0)+3×(alter>0)^alter<1⍝Alteration rule[20]   ⍎(pd[1]=3)/'U←(0 4⌈⍴U)↑U,1'                    ⍝If proximity rule = 'group', make sure there's a group column in units[21]  [22]   Z←Y←0 2⍴0[23]  ⍝ Z←((1↑⍴U),2)⍴0[24]   I←0[25]  L1:→(iterations<I←I+1)/L9                       ⍝For each iteration,[26]   BREAKCHECK[27]   J←U[T←?1↑⍴U;1]                                 ⍝   pick a random unit[28]  [29]   →(L2,L3,L4,L8)[pd[1]]                          ⍝   Case proximity rule[30]  [31]  L2:Q←(((+/(U[;2 3]-((1↑⍴U),2)⍴U[T;2 3])*2)*.5)≤proximity×1000)/U[;1]     ⍝   Distance: units within proximity of first--these are our candidates[32]   →L5[33]  [34]  L3:T←(W[;1]=J)⌿W[;2 3]                          ⍝      Pair: node pairs for first unit[35]   Q←(∨/(W[;2]∘.=T[;1])^W[;3]∘.=T[;2])⌿W[;1]      ⍝         list of units between nodes for first unit[36]   →L5[37]  [38]  L4:Q←(U[;4]=U[U[;1]⍳J;4])/U[;1]                 ⍝      Group: units in same group as first unit[39]   →L5[40]  [41]  L8:O←(W[;1]=J)⌿W[;2 3]                          ⍝      Path: node pairs for first unit[42]   Q←⍳0[43]   K←0[44]  L20:→((1↑⍴O)<K←K+1)/L21                         ⍝         For each of these node pairs,[45]   M←MATIN pathQ,'tables\',(⍕O[K;1]),'-',(⍕O[K;2]),'edges.txt'[46]   Q←Q,(M[;1]∊(M[;2]=J)/M[;1])/M[;2]              ⍝            List of units on the same path as J[47]   →L20[48]  L21:Q←UNIQUENZ Q                                ⍝         These are the nodes that share a path[49]   →L5[50]  [51]  L5:Q←Q~J                                        ⍝   Make sure 1st unit isn't in our list--we already have it[52]   E←alter (0⌈(⍴Q)-alter) (⌊.5+alter×⍴Q)[pd[2]]   ⍝   Alteration rule[53]   →(E=0)/L1                                      ⍝   If no units to alter, skip out[54]   DOT[55]  [56]   →justcount/L11[57]   J←J,Q[((⍴Q)⌊?E-1)?⍴Q]                          ⍝   These are the units to alter (randomly: at least 1, no more than E)[58]   →((⊂J←J[⍋J])∊P)/L1                             ⍝   If this set of units has already been done by a previous thread, bail out now[59]   Q←(W[;1]∊J)⌿W[;2 3]                            ⍝   internodes affected[60]  ⍝⍝⍝⍝ →(0∊⍴Q)/L1                                     ⍝   If no paths affected on these units, move on  WON'T HAPPEN NOW[61]   Q←Q[⍋Q;][62]   Q←(∨/Q≠0⍪¯1 0↓Q)⌿Q                             ⍝   unique internodes[63]   R←C                                            ⍝   original probability matrix[64]   K←0[65]  L6:→((1↑⍴Q)<K←K+1)/L7                           ⍝   For each internode,[66]   M←MATIN pathQ,'tables\',(⍕Q[K;1]),'-',(⍕Q[K;2]),'edges.txt' ⍝      read edges file[67]   →(~units≡'passages')/L10                       ⍝      If units are passages,[68]   B←M[;1]≠0,¯1↓M[;1][69]   R[N[;1]⍳Q[K;1];N[;1]⍳Q[K;2]]←5 ROUND MEAN bandwidth GAUSS (B/M[;3])-B pSUM M[;4]×M[;2]∊J  ⍝         shorten distance by additional passage (round as in LINKTABLES)[70]  [71]   →L6                                            ⍝      Else, units are development,[72]  L10:R[N[;1]⍳Q[K;1];N[;1]⍳Q[K;2]]←5 ROUND MEAN bandwidth GAUSS (M[;1]≠0,¯1↓M[;1])/M[;3]×~M[;2]∊J  ⍝         pay the piper: (+/not dropped)÷⍴all[73]   →L6[74]  [75]  L7:→(R≡C)/L1                                    ⍝   If we've actually changed something,[76]   Q←-inflate×(÷V)×V-N[;1 5] PC FLOYD R           ⍝      normalized delta P(C) × inflate for these nodes[77]   Y←Y⍪Q,⊂J                                       ⍝      cost and sorted list of units[78]  ⍝ Z[U[;1]⍳J;]←Z[U[;1]⍳J;]+((⍴J),2)⍴Q,1           ⍝   sum of costs and count for each unit[79]   →L1[80]  [81]  L11:Z←Z⍪J,1+⍴Q[82]   →L1[83]  [84]  [85]  L9:→justcount/L12[86]   Y LOCKWRITE pathQ,'tables\manylinks',(⊃KNAMES bandwidth),'.txt'[87]  ⍝ Z←(Z[;2]>0)⌿U[;1],Z                           ⍝NOT SURE THAT WE WANT THESE RESULTS[88]  ⍝ Z LOCKWRITE pathR,'nodes\bylink_raw.txt'[89]   ⎕←''[90]   →0[91]  [92]  L12:Z LOCKWRITE pathQ,'tables\candidates',(⊃KNAMES bandwidth),'.txt'[93]   →0[94]  [95]  [96]  what:auxiliary[97]  type:table[98]  init:head←1↓⎕TCHT MTOV MATRIFY 'cost units' ⋄ (0 0⍴'') TMATOUT new/pathQ,'tables\manylinks',(⊃KNAMES bandwidth×1000),'.txt'[99]  iXnXiXt:⍝head←1↓⎕TCHT MTOV MATRIFY 'unit sumcost times' ⋄ (0 0⍴'') TMATOUT new/pathQ,'tables\bylink_raw.txt'[100] info:('') ('') ('') (0)[101] check:CHECKVAR 'targets iterations alter proximity inflate new justcount'    ∇