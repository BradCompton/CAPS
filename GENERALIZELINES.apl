    ∇ Z←P GENERALIZELINES X;Y;B;Q;E;T;V;I;N;K;W;A;J;S;L;M;R;U;C[1]   ⍝Generalize line segments ⍵ (x1,y1,x2,y2), removing excess points in straight segments given straightness tolerance ⍺[2]   ⍝⍺ is in terms of percent maximum deviation from line[3]   ⍝Returns new set of line segments[4]   ⍝NOTE: there is no guarantee that all intersections will have a point in all lines concerned;[5]   ⍝      i.e., in an X intersection, lines may intersect without a point.[6]   ⍝B. Compton, 14 Aug 2015 (from old version of FINDITCHES)[7]   ⍝9 Nov 2015: fix an ugly little bug that swapped x & y sometimes and dropped good segments. Jo got a new job...we'll miss her a lot.[8]   ⍝11-12 Nov 2015: do a second pass to extend lines[9]   [10]  [11]  [12]   ⍎(0=⎕NC'P')/'P←5'                                  ⍝Default straightness tolerance, max percent deviation[13]   Y←((2×1↑⍴X),2)⍴X                                   ⍝List of points[14]   Y←Y[⍋Y;][15]   B←¯1↓∨/(0⍪Y)≠Y⍪0[16]   Q←(1=B pSUM (⍴B)⍴1)⌿B⌿Y                            ⍝Endpoints--these only occur once[17]   E←(E≤1↑⍴X)×E←((↓X[;1 2])⍳↓Q),[1.5](↓X[;3 4])⍳↓Q[18]   E←(T⌽E)[;1],[1.5]2-2×T←E[;2]≠0                     ⍝Endpoint list: row in X, 2 if left point / 0 if right point[19]   B←~V←(1↑⍴X)⍴0                                      ⍝Deletion vector; mark visited segments[20]  [21]   M←0 4⍴0                                            ⍝Replacement line segments[22]   I←0[23]  L1:→((1↑⍴E)<I←I+1)/L4                               ⍝For each endpoint (more may be added to the end of the list),[24]   DOT[25]   N←E[I;]                                            ⍝   List of ditch segments for this endpoint starts with endpoint segment[26]   L←1 2⍴N[1],2-N[2]                                  ⍝   1st segment in ditch list: index into X, starting point[27]   R←0 4⍴0[28]  L2:Q←X[N[1];N[2]+⍳2]                                ⍝   Loop through segments. Other end of current segment,[29]   V[N[1]]←1                                          ⍝      this segment has been visited[30]   K←(((X[;1 2]^.=Q)∨W←X[;3 4]^.=Q)/⍳1↑⍴X)~N[1]       ⍝      next segment(s)[31]   K←(~V[K])/K                                        ⍝      drop segments already visited[32]   →(0∊⍴K)/L3                                         ⍝      If no more segments, finish[33]  [34]   A←ANGLE¨↓((⍴K)⌿X[,N[1];(2-N[2])+⍳2]),((2×W[K])⌽X[K;])[;1 2],((2×W[K])⌽X[K;])[;3 4]  ⍝      find angles[35]   J←(⍋|180-A)[1]                                     ⍝      pick segment that's closest to straight[36]   E←E⍪K[(⍳⍴K)~J],[1.5]2×W[(⍳⍴K)~J]                   ⍝      at junctures, save all but straightest path as new endpoints to do later[37]  [38]   S←(L[;2]⌽X[L[;1];])[;1 2]⍪X[L[1↑⍴L;1];(2-L[1↑⍴L;2])+⍳2]⍪X[K[J];(2×~W[K[J]])+⍳2]  ⍝      Points in line segments so far, top-to-bottom, left-to-right[39]   :if P STRAIGHT S                                   ⍝      If the line is straight,[40]      B[L[1;1],K[J]]←0                                ⍝         mark both segments (first and current) for deletion[41]      R←X[L[1;1];L[1;2]+⍳2],X[K[J];(2×~W[K[J]])+⍳2]   ⍝         replacement segment[42]      L←L⍪K[J],2×W[K[J]]                              ⍝         finish off this segment: add segment to current path[43]      N←K[J],2×~W[K[J]]                               ⍝         here's our new starting point[44]      →L2                                             ⍝         Next segment[45]   :else                                              ⍝      else, line is curvy,[46]      M←M⍪R                                           ⍝         keep replacement (if any)[47]      E←E⍪K[J],2×W[K[J]]                              ⍝         new endpoint is this segment[48]      →L1                                             ⍝         start over with this segment[49]   :end[50]  [51]  L3:M←M⍪R                                            ⍝       Finish current endpoint...keep replacement (if any)[52]   R←0 4⍴0                                            ⍝       clear replacement[53]   →L1[54]  [55]  L4:Z←M⍪B⌿X[56]  [57]  [58]  ⍝Now, do a second pass, trying to extend lines we've found. This mitigates for missed segements due to the order segments are visited in Pass 1.[59]  [60]   B←(1↑⍴Z)⍴1[61]   I←0[62]  L5:→((1↑⍴M)<I←I+1)/L8                               ⍝For each line we've found,[63]  L6:→(~B[I])/L5                                      ⍝   don't do deleted segments[64]   Q←(Z[;1 2]^.=M[I;1 2]),(Z[;3 4]^.=M[I;1 2]),(Z[;1 2]^.=M[I;3 4]),[1.5]Z[;3 4]^.=M[I;3 4]   ⍝   matching endpoints[65]   Q←((⍴Q)⍴4/B)^Q^(⍴Q)⍴4/I≠⍳1↑⍴Z                      ⍝   but not self, nor deleted segments[66]   J←⍳2                                               ⍝   First, do left end of line[67]  L7:L←(∨/Q[;J])⌿(⍳1↑⍴Q),[1.5]¯2×Q[;J[1]]             ⍝      Segments that meet this end of line, 1 if they need reversing[68]   :if ~0∊⍴L[69]      R←(L[;2]⌽Z[L[;1];])[;⍳2]                        ⍝      Here are points at other end of these segments[70]      C←(((1↑⍴R),4)⍴(2×J[1]=1)⌽M[I;]),R               ⍝      Candidate lines (far point of current segment, point at this end, far end of candidate segments)[71]      A←ANGLE¨↓C[72]      K←(⍋|180-A)[1]                                  ⍝      Pick the straightest segment[73]      :if P STRAIGHT 3 2⍴C[K;]                        ⍝      If original segment + candidate is straight enough,[74]         M[I;]←Z[I;]←C[K;1 2 5 6]                     ⍝         replace original segment with new longer one[75]         B[L[K;1]]←0                                  ⍝         and delete candidate we've used[76]         →L6                                          ⍝         and start over with this new expanded segment[77]      :end[78]   :end[79]   →(3 4≡J←J+2)/L7                                    ⍝   Now do right end[80]   →L5[81]  [82]  L8:Z←B⌿Z                                            ⍝Get rid of deleted segments                          ∇