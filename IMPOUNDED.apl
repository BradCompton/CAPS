    ∇ A IMPOUNDED S;buffer;targets;transparent;block;maskv;lrpars;dem;dams;result;M;I;W;X;Z;strflow;KK;P[1]   ⍝CAPS impounded metric[2]   ⍝⍺ = usual metric left arguments[3]   ⍝⍵ = (start-item number-of-items) (systems)[4]   ⍝B. Compton, 1-2 Jun 2011 from TR and WATERSHED[5]   ⍝Works just fine, but Scott and I decided to drop this metric.  It's too vulnerable to data[6]   ⍝errors (in DEM, dam locations).[7]   ⍝7 Aug 2012: push a few lines into MER2CELLS[8]   [9]   ⍝When data is better, revive this perhaps.[10]  ⍝Changes to make:[11]  ⍝  Look up two cells from dam[12]  ⍝  Pass lotic cells through FOCALMIN[13]  ⍝  Finish IMPOUNDEDB[14]  [15]  [16]  [17]   READPARS ME[18]   buffer←4⊃A[19]   M←0 1 1 TABLE pathT PATH targets               ⍝Read watershed table[20]   M←tinywatershed BIGWATERSHEDS M                ⍝Drop subwatersheds and tiny watersheds[21]   M←(M[;1]∊(⊃⊃S)+¯1+⍳2⊃⊃S)⌿M                     ⍝Items we're doing[22]  [23]  [24]   transparent←1[25]   I←0[26]  L1:→((1↑⍴M)<I←I+1)/0                            ⍝For each watershed,[27]   BREAKCHECK                                     ⍝   Do a single watershed[28]   W←M[I;][29]   W[6 7 8 9]←MER2CELLS W[6 7 8 9]                ⍝Convert MER to cells[30]   W[4 5]←buffer+1+(FINDCELL W[4 5])-W[6 7]       ⍝   Watershed outflow in terms of grid[31]   block←¯1,W[6 7 8 9],buffer                     ⍝   set block to our current window[32]  [33]   X←READ 1⊃1⊃A                                   ⍝   Landcover[34]   dams←X=LOOK 'dam'[35]   →(~1∊dams)/L1                                  ⍝   Bail if no dams[36]   maskv←S←1=READ 2⊃1⊃A                           ⍝   Stream centerlines[37]   →(0∊⍴'*' INCLUDE X)/0                          ⍝   Which cells to run metrics for?  Bail if all masked out; otherwise ignore.[38]   strflow←MVREP (S×READ 3⊃1⊃A) (X=MV)            ⍝   D8 flow grid for centerline cells only[39]   dem←READ 4⊃1⊃A                                 ⍝   DEM[40]  [41]  [42]   ⎕←'Watershed ',(⍕W[2]),'...' ⋄ FLUSH[43]   result←(⍴X)⍴MV[44]   IMPOUND W[4 5]                                 ⍝   Call common recursive subroutine with IMPOUNDEDB to do the do[45]  [46]   KK←8 2⍴¯1 0 1 0 0 ¯1 0 1 ¯1 ¯1 1 1 ¯1 1 1 ¯1   ⍝   Flow direction grid[47]   P←FINDPATCH X=LOOK 'Water (lentic)'            ⍝   Find lakes and ponds[48]   Z←'MIN' ZONAL result P                         ⍝   Take zonal min across each lake or pond[49]  [50]  ⍝ ASDF[51]  ⍝⍝⍝ Z←MVREP (lrpars LOGISTIC 0 MVREP result) (X=MV)  ⍝   Do logistic transformation[52]  ⍝Z←result[53]   Z WRITE pathR PATH 3⊃A                         ⍝   Write results transparently[54]   →L1[55]  [56]  [57]  [58]  what:other (experimental)[59]  type:table[60]  repsfn:tinywatershed 'BIGWATERSHEDS'            ⍝Used by TABLEREPS to drop tiny watersheds[61]  info:((⊂'land'),(⊂pathS) PATH¨'streams' 'flow' 'dem') ('') ('impounded') (1)   ⍝Metric-specific source grids, settings table, result grid, and buffer size[62]  check:CHECKVAR 'lrpars'[63]  check:pathT CHECKFILE targets[64]  init:⍝⍝⍝⍝ TEMP FOR TESTING ⍝⍝⍝⍝ (pathS PATH 'zeros') GRIDCOPY pathR PATH 'impounded'               ⍝Copy grid of zeros to result so we don't have MVs in watersheds without dams    ∇