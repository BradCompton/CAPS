    ∇ Z←L GETCACHEDIR G;C;P;maxsize;minfree;head;T;cachepath;Q;A;nbins;deletesize[1]   ⍝Get a lock and fetch the grid caching directory for grid or index number ⍵.  Release lock if ⍺.[2]   ⍝Must call GETCACHECONFIG 1st[3]   ⍝Results:[4]   ⍝   Z[1]   (cache directory) (header)[5]   ⍝   Z[2]   1 if holding lock[6]   ⍝   Z[3]   UNLOCKFILE parameters (only returned if ⍵ = 0)[7]   ⍝   Z[4]   timer for cachewait[8]   ⍝B. Compton, 12 Sep 2013[9]   ⍝30 Sep 2013: lock computer name + path to prevent collisions[10]  ⍝1 Oct 2013: convert maxsize and minfree to MB; add computer name to cache path[11]  ⍝6 Feb 2014: if keeping lock, return RETURNLOCK parameters[12]  ⍝Jul 2014: use <computer> cache as the lock name[13]  ⍝21 Nov 2014: add cachewait[14]  ⍝16 May 2016: add nbins and deletesize for new hashed caching; code moved to GETCACHECONFIG; now find correct individual index[15]  ⍝17 May 2016: also take index number as an argument[16]  ⍝19 May 2016: don't call GETCACHECONFIG--this happens earlier[17]  [18]  [19]  [20]   ⍎(0=⎕NC'L')/'L←1'[21]   A←⎕AI[2]                                   ⍝Start cachewait timer[22]   P←GETCACHEPATH G[23]   Q←LOCKFILE GETNAME,' ',P                   ⍝Lock (computer name) 'cache'[24]   Z←(GETTABLE P) 0                           ⍝Read grid cache diretory[25]   :if ~Z[2]←~L                               ⍝If return lock,[26]      UNLOCKFILE Q[27]      CACHEWAIT A[28]   :else                                      ⍝Else[29]      Z←Z,Q A                                 ⍝   Lock is held and ⎕ELX is set to release it. These are UNLOCKFILE pars and cachewait timer[30]   :end    ∇