    ∇ B MOVEPOINTS F;Q;P;I;L;W;Y;M;B;J;C;O;D;K;H;Z;head;T;V;E;landcover;X[1]   ⍝Move points in text file ⍵ to nearest cell in communities listed in okpoints.txt, up to ⍺ cells[2]   ⍝Be sure to assess moved points.[3]   ⍝Input file (⍵.txt):[4]   ⍝   should have columns x and y (or x-coord and y-coord)[5]   ⍝Output file (⍵_new.txt):[6]   ⍝   (input data), old-x, old-y, moved, distance, oldtype, newtype[7]   ⍝   moved flag = 0 if unmoved, 1 if moved, and 2 if unable to move[8]   ⍝Also writes line coverage of vectors for moved points.[9]   ⍝B. Compton 14-17 Aug 2009, from 3turtles MOVEPOINT in RMLANDS workspace[10]  ⍝25 Aug 2009: a couple of small fixes[11]  [12]  ⍝TEST RUN:[13]  ⍝    MOVEPOINTS 'D:\EmyGIS\locs\nests.txt'[14]  [15]  [16]   ⍎(0=⎕NC'B')/'B←5'                          ⍝Buffer for landscape - this is the maximum distance (in cells) to move a point[17]  [18]   SETPATHS[19]   INIT[20]  [21]   P←(1,⎕TCHT) MATIN PATH F                   ⍝Read x,y file[22]   V←⎕TCHT MATRIFY head[23]   L←⌈⌿2 2⍴(TOLOWER V) MATIOTA MATRIFY 'x y x-coord y-coord'[24]  [25]   landcover←TABLE landcoverpar[26]   E←,0 ¯1↓LOOKUP 1,0 0 TABLE 'OKPOINTS.TXT'  ⍝List of okay cover types[27]  [28]   P←(^/P[;L]≠¯9999)⌿P                        ⍝Delete points with missing locations[29]   M←(⌊⌿P[;L]),⌈⌿P[;L][30]   Q←Q,1+(FINDCELL M[3 2])-Q←FINDCELL M[1 4]  ⍝Study area boundaries, in cells[31]   Z←((1↑⍴P),6)⍴0[32]  [33]   I←0[34]  L1:→((1↑⍴P)<I←I+1)/L2                                       ⍝For each point,[35]   J←FINDCELL P[I;L]                                          ⍝   Point location in cells[36]   X←READBLOCK (⊂1 GRIDNAME 'land'),(J-B),2⍴1+B×2             ⍝   read cell and neighbors[37]   →((Z[I;5]←Z[I;6]←X[K;K←B+1])∊E)/L1                         ⍝If point needs to be moved,[38]  [39]   O←(CELLSIZE|P[I;L]-WINDOW[3 4])-CELLSIZE÷2                 ⍝      Offset from cell center[40]   D←⊖⍉(((O[1]-D)*2)∘.+(O[2]-D←CELLSIZE×H←(-⌽⍳B),0,⍳B)*2)*.5  ⍝      Distances to neighboring cell centers[41]   D←D×X∊E                                                    ⍝      Only interested in cells in the right cover type[42]   M←D=⌊/(,D≠0)/,D[43]   Z[I;6]←1↑(,M)/,X                                           ⍝      New cover type[44]  [45]   T←0=Z[I;4]←1↑(,M)/,D ⋄ Z[I;4]←1 ROUND Z[I;4]               ⍝      Distance moved (0 if not possible to move)[46]   Z[I;1 2]←(~T)×P[I;L]+(CELLSIZE×⌽⊃1↑(,M)/,⊖H∘.,H)-O         ⍝      New location[47]   Z[I;3]←1+T                                                 ⍝      Moved flag (1=moved, 2=unable to move)[48]   →L1[49]  L2:Q←P[;L] ⋄ P[T;L]←Z[T←(Z[;3]=1)/⍳1↑⍴P;1 2] ⋄ Z[;1 2]←Q    ⍝Swap new & old points[50]   head←(1↓⎕TCHT MTOV V),⎕TCHT MTOV MATRIFY 'old-x old-y moved distance oldtype newtype'[51]   F←(Q←(^\F≠'.')/F),'_new.txt'[52]   (P,Z) TMATOUT PATH F[53]   ⎕←(⍕1↑⍴P),' points processed; ',(⍕+/Z[;3]=1),' were moved and ',(⍕+/Z[;3]=2),' couldn''t be moved.'[54]   ⎕←'Results written to ',F[55]  [56]   P←(Z[;3]=1)⌿P ⋄ Z←(Z[;3]=1)⌿Z[57]   Z←'. .' TEXTREPL HITOLOW 1↓MTOV DEB LJUST((⍕((1↑⍴Z),1)⍴⍳1↑⍴Z),⎕TCNL),((⍕Z[;,1]),',',⍕Z[;,2]),⎕TCNL,⍕((⍕P[;,L[1]]),',',⍕P[;,L[2]]),⊂⎕TCNL,'END'[58]   Z←Z,⎕TCNL,'END'[59]   Q←(⌽(^\⌽Q≠'\')/⌽Q),'_d'[60]   Z NWRITE PATH 'zztemp.txt'       ⍝Write lines file[61]   Z←'/* movepoints.aml⋄/* automatically generated by MOVEPOINTS, ',NOW,'⋄'[62]   Z←Z,'generate ',Q,'⋄input zztemp.txt⋄lines⋄q⋄build ',Q,' lines'[63]   Z←1↓MTOV'⋄' MATRIFY Z[64]   Z NWRITE PATH 'movepoints.aml'[65]   ⎕←'Create coverage of movement vectors (',Q,') with '[66]   ⎕←'   &r movepoints.aml'    ∇