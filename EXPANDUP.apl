    ∇ Z←Z EXPANDUP PO2;T;Q;B;J;P;O2[1]   ⍝Expand cores upstream; a recursive subroutine of MAKECORES, for lots of arguments ⍵[2]   ⍝Global: O X2 E2 W2 H2 sg2 lentic dams[3]   ⍝B. Compton, 8 Aug 2014[4]   ⍝27-28 Aug 2014: use global variables instead of passing them--it was blowing out memory[5]   ⍝29 Aug 2014: make sure we're only expanding into centerlines![6]   ⍝9-10 Oct 2014: add updownsize[7]   ⍝15 Oct 2014: use RESIST to allow logistic resistance[8]   ⍝16 Oct 2014: add lakeresist[9]   [10]  [11]  [12]   P O2 ← PO2[13]   T←Q←O2[14]   P←P-(Z[T[1];T[2]]=0) × (1+expandmult≠0)⊃1 (expandmult RESIST 1-X2[T[1];T[2]])    ⍝Repeat: subtract 1 or resistance, depending on expandmult, but only if no longer within seed[15]  L10:P←P-(1+expandmult≠0)⊃1 (expandmult RESIST 1-X2[T[1];T[2]])    ⍝      Repeat: subtract 1 or resistance, depending on expandmult[16]   P←P-lakeresist×lentic=W2[T[1];T[2]]            ⍝            subtract additional resistance for lakes[17]   →(P<0)/0                                       ⍝   If we haven't gone too far yet,[18]   T←E2 FLOWINTO Q                                ⍝      list of stream cells that flow into this cell[19]  [20]   →(0∊⍴T)/0                                      ⍝      bail out if no cells flow into this one[21]   B←(1↑⍴T)⍴1[22]   B←B^sg2 SCATI T[23]   B←B^(W2 SCATI T)≠dams                          ⍝      or dams[24]   B←B^(~updownsize[1])∨~(⍟H2 SCATI T)<¯1+⍟H2[O2[1];O2[2]]         ⍝      or smaller rivers (unless ~updownsize)[25]   T←(,B)⌿T[26]   J←0[27]  L1:→((1↑⍴T)<J←J+1)/0                            ⍝      For each inflowing stream,[28]   Z[T[J;1];T[J;2]]←Z[T[J;1];T[J;2]]⌈1            ⍝      include this cell in core[29]   Z←Z⌈Z EXPANDUP P (T[J;])                       ⍝      and expand up from here[30]   →L1    ∇