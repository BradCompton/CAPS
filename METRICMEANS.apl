    ∇ A METRICMEANS S;T;X;Q;I;Z;T;D;R;noread;loop;test;grids;ffile;M;landcover;J;B;C;H;L;Y;V;head;scenarios;include;compare;names;blocksize;block;source;grid;postmetrics;weights;badnames;index;prettymodel;scenarios_[1]   ⍝Calculate mean value for each metric by community (preprocess for SCENARIOS)[2]   ⍝Metrics are in model\post.par[3]   ⍝⍺ and ⍵ are dummies - systems are ignored[4]   ⍝Parameters:[5]   ⍝   blocksize   Block size to use (DON'T set block size in metrics.par--this must be 0)[6]   ⍝   scenarios   Scenarios file[7]   ⍝   include     Metrics to include (include all if include='')[8]   ⍝   compare     Comparison type: 1st (='base'), in time-step pairs ('paired'), or all against all ('full')[9]   ⍝Writes (path with postland)\metricmeans[scenario].csv[10]  ⍝Note that METRICMEANS ignores metric weightings (weights.par), so weights can be changed after this is run[11]  ⍝B. Compton, 28-31 Aug and 1-9 Sep 2009, from SCENARIOS and BENCH[12]  ⍝3 Jan 2012: update to work with new SCENARIOS scheme/CAPS 3.0[13]  ⍝13 Feb 2012: continue updating in conjunction with new SCENARIOS & SCENARIODELTAS[14]  ⍝20 Feb 2012: some debugging[15]  ⍝29 Mar 2012: dropped in favor of new logistic rescaling[16]  [17]  [18]  NOT USED ANY MORE[19]  [20]  [21]   READPARS 'scenarios'[22]   CHECK_SCENARIOS[23]   POSTSOURCE 'scenarios'[24]  [25]   M←MIX⊃¨(STRIP grid) MAKENAMES scenarios[;scenarios_ COL 'land']    ⍝Landcover grid names for each scenario[26]   R←(↓MATRIFY include),(0∊⍴include)/postmetrics                      ⍝Only need to deal with metrics involved in scenarios--others won't change[27]   H←↑R MAKENAMES scenarios[;scenarios_ COL 'results']                ⍝Scenario × metric table[28]  [29]  ⍝Comparisons can be base: 1st against each other, paired: paired time steps, or full: all against all[30]   compare←TOLOWER compare[31]   B←(⍳1↑⍴M)∘.<⍳1↑⍴M                              ⍝Upper triangle[32]   T←(1,[1.5]1↓⍳1↑⍴M) ((¯1↓⍳1↑⍴M),[1.5]1↓⍳1↑⍴M) ((,B)⌿(,⍉T),[1.5],T←(2⍴1↑⍴M)⍴⍳1↑⍴M)[33]   C←('base' 'paired' 'full'⍳⊂compare)⊃T          ⍝Comparisons (base, paired, or full)[34]   D←scenarios[C[;1];scenarios_ COL 'name'][35]   D←D[C←((C⍳C)=⍳⍴C)/C←C[;1]]                     ⍝Base scenarios to process[36]   M←M[C;][37]  [38]   landcover←TABLE landcoverpar[39]   S←(LOOKUP 1,[1.5]names)[;1]                    ⍝full list of communities[40]   I←0[41]  L1:→((⍴C)<I←I+1)/L10                            ⍝For each base scenario,[42]   LOG 'Scenario ',I⊃D[43]   loop←test←noread←0 ⋄ grids←0 0⍴''              ⍝   Silly junk for BLOCK, etc.[44]   ffile←'METRICMEANS: ',⍕I⊃D[45]   BLOCK 2⍴blocksize[46]   SETTILE[47]  [48]   Y←(⍴S)⍴0                                       ⍝   number of cells in each community[49]   Z←((1↓⍴H),⍴S)⍴0                                ⍝   sum of metric values for each community [metric × community][50]  ⍝For each tile,[51]  L2:LOG '   Tile ',(⍕block[4]),',',(⍕block[5]),' of ',(⍕block[6]),',',(⍕block[7]),' (',(⍕ROUND 100×(+/(block[4 5]-1,0)×block[7],1)÷×/block[6 7]),'%)'[52]   X←READ pathG PATH M[I;]                        ⍝   For each block: read landcover[53]   BREAKCHECK[54]   →(0∊⍴mask)/L3                                  ⍝      If mask grid supplied,[55]   X←MVREP X (1≠READ mask)                        ⍝         read it & mask out cells in landcover[56]  L3:→(^/,X=MV)/L8                                ⍝      If anything non-missing,[57]  [58]   L←0[59]  L4:→((⍴S)<L←L+1)/L5                             ⍝         For each community,[60]   Y[L]←Y[L]++/,X=S[L]                            ⍝            Cumulative sum of cells in this community[61]   →L4[62]  [63]  L5:J←0[64]  L6:→((1↓⍴H)<J←J+1)/L8                           ⍝      For each metric,[65]   A←READ (PATH source) PATH ⊃H[C[I];J]           ⍝         Metric for base scenario[66]  [67]   L←0[68]  L7:→((⍴S)<L←L+1)/L6                             ⍝         For each community,[69]   Z[J;L]←Z[J;L]++/0 MVREP (,X=S[L])/,A           ⍝            Cumulative sum of this metric for this community[70]   →L7[71]  [72]  L8:→(0≠NEXTBLOCK)/L2                            ⍝   Until no more blocks[73]  [74]  L9:Z←Z DIV (⍴Z)⍴Y                               ⍝   Mean for each metric and community across landscape[75]   head←'metric',⊃,/',',¨⍕¨S[76]   (R,6 ROUND Z) CMATOUT T←(STRIPPATH M[I;]),'metricmeans.csv'[77]   LOG 'Results written to ',T ⋄ FLUSH[78]   →L1                                            ⍝Next scenario[79]  [80]  L10:LOG 'METRICMEANS is done.'[81]   →0[82]  [83]  [84]  what:auxiliary[85]  type:exclusive                                  ⍝Don't allow any other metrics to run[86]  info:('') ('') ('') (0) 'luwet'                 ⍝Source grid, settings table, result grid, and buffer size[87]  check:READPARS 'scenarios'                      ⍝Parameters come from [scenarios], not [metricmeans][88]  check:CHECKVAR 'blocksize scenarios include compare'[89]  check:CHECKVALUES 'compare base paired full'    ⍝Check for legal values of compare[90]  check:CHECKBLOCK 1                              ⍝Make sure block setting in metrics.par is 0 with no scenarios - must run as a single process    ∇