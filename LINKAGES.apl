    ∇ A LINKAGES S;B;buffer;bandwidth;search;M;head;Z;C;I;P;Q;X;result;Y;scaleby;L;J;K;N;link_example;E;iei;override_pars;split;ty;cross;crossings;linkages;linkgrids;G;uncertainty;score;V1;V2;bankcross;D;O;scores;V;cross_;W;U;T2;dams;H;T;dam;res;R;aa;t;fd;ss;which;crossB;W2;aquaticcol;ext;damcols;cold;coldgrid;cw;ex;lg;F[1]   ⍝Critical linkages Phase I scenario analysis, version 2.0. Crossings & dams version (roads are now in ROADLINKAGES).[2]   ⍝Runs as a block metric[3]   ⍝⍵ = groups[4]   ⍝⍺ = (landcover grid) (settings) (result grid) (buffer) (include grid)[5]   ⍝Parameters:[6]   ⍝   which     - which critical linkage analysis, 'crossings' or 'dams'[7]   ⍝   ext       - text to append to result filename, primarily for CL50% runs[8]   ⍝   scores    - name of .par file with formulas for modifying settings variables at focal cells to simulate upgrading culverts,[9]   ⍝               or removing dams.  The format is the same as that used in CROSSINGSMOD (crossscores.par).  There should be a scores[10]  ⍝               file for each type of analysis.[11]  ⍝   scales    - file with settings variable, raw-min, raw-max to use for rescaling settings variables. Created by MAKESETTINGS/GETRANGES[12]  ⍝               as part of settings variable creation.[13]  ⍝   crossings - name of crossings file (typically tables\crossings.txt).  Required when which='crossings' or when doing uncertainty analysis.[14]  ⍝   dams      - name of dams file.[15]  ⍝   aquaticcol- name of column in crossings file with aquatic score, typically 'aquatic'. Used for CL50% analysis.[16]  ⍝   uncertainty - use yes to do best-case analysis; default is best estimate.[17]  ⍝   iei       - name of IEI grid for weighting results (use '' if unavailable)[18]  ⍝   scaleby   - 1 to return raw deltas, or landscape-wide mean connectedness/aquatic connectedness to give scaled deltas[19]  ⍝   split     - table of group names and landcover types to split out results[20]  ⍝   damcols   - names of columns in dams.txt[21]  ⍝   cold      - threshold for coldwater linkages project (use 0 for normal run)[22]  ⍝   coldgrid  - coldwater linkages grid[23]  ⍝   Uses AQCONNECT parameters (multiplier, bandwidth, search, resist), but can override by providing as [linkages] parameters[24]  ⍝Result:[25]  ⍝   link_<ext><which> - text file with ID, x, y, base neighborhood connect, alternative neightborhood connect, delta, effect, ln effect and[26]  ⍝      all input columns.[27]  ⍝   *** To rescale effect_ln from 0 to 1, run finish_link_crossings.R when this is done.[28]  ⍝Notes:[29]  ⍝   1. Crossings within a certain distance of each other (see CROSSINGGROUPS) are treated as a single crossing; results are returned for the centroid.[30]  ⍝   2. Crossings that overlap dams are dropped from the analysis.  This may include crossings that are as far as two cells from a dam, because[31]  ⍝      dams and crossings may be expanded 1 cell to fill centerlines.[32]  ⍝   3. To do examples, use [linkages] link_example to specify crossing/dam/road points.  Results are link<n> (delta), link<n>ln (log delta), link<n>v1[33]  ⍝      (before) and link<n>v2 (after).  To see kernels for specific points, also set [caps] example to focal points--this will give kernels for focal[34]  ⍝      points for specified crossings/dams/roads.[35]  ⍝   4. Use mask to screen points[36]  ⍝   5. All original columns from crossings.txt are preserved, and duplicated for grouped crossings[37]  ⍝B. Compton, 26 Jul-29 Aug 2011, from LINKAGES (renamed LINAKGESV1, 21-25 May 2010)  Willow the mellow kitten comes home to us (July 21).[38]  ⍝22 Sep 2011: don't widen culverts and dams; pass flow grid to AQCONNECT[39]  ⍝29 Sep 2011: get masking right[40]  ⍝30 Sep 2011: for linkages/roads, only build kernels for even cells for 4x speedup[41]  ⍝3 Oct 2011: for crossings and dams, only visit stream cells that are hydrologcally nearby, and do every other cell[42]  ⍝4 Oct 2011: revisions to crossings and dams--we were looking too far when search was <3. And prettier time estimates.[43]  ⍝13 Oct 2011: replace dams with crossings, but no longer worry about adjacency; do every 5th cell for dams and crossings[44]  ⍝18 Oct 2011: do roads for every 4th cell[45]  ⍝24 Oct 2011: bug in dropping crossings that lap dams[46]  ⍝11 Nov 2011: don't mask out grouped crossings that don't fall on centerlines[47]  ⍝4-5 Dec 2011: add uncertainty to roads, and fix grievous bug in roads best estimate[48]  ⍝25 Jan 2012: oh!  roads uncertainty isn't really best case, because of crossings in parallel roads.  Call roads uncertainty 'u' instead of 'bc'[49]  ⍝17 Jun 2013: take worst-case crossing in group[50]  ⍝28 Jun 2013: don't fail when there are no crossing in window[51]  ⍝3 Jul 2013: don't use centroid for groups--it sometimes misses centerline. Use west/north-most crossing instead[52]  ⍝22 Nov 2013: don't use LOAD[53]  ⍝4 Dec 2013: pass header of crossings table and score column to SETTINGS   *** UNTESTED CODE (roads only)![54]  ⍝27 Jun 2014: make sure all members of a group are treated in the same tile[55]  ⍝30 Jun 2014: replace crossing scores for neighbors whether uncertainty or not, in case of rounding errors/abarriers differences; don't take ⌊.99 for obsolete REPADJ[56]  ⍝2 Jul 2014: when replacing crossings with UCI for uncertainty, get those in buffer too![57]  ⍝18 Jul 2014: also return ln(effect+0.5)[58]  ⍝1 Sep 2014: a couple of changes to work with LCC data[59]  ⍝23 Oct 2014: drop all roads stuff--it's now in ROADLINKAGES[60]  ⍝3 Nov 2014: add crossingcol and ext for CL 50% analysis, and join entire crossings table back to results[61]  ⍝9 Jan 2014: oops: screwed up writing for dams when I made Nov 3 changes[62]  ⍝28 Apr 2016: change impact to effect per email from Andrew (18 Feb 2016)[63]  ⍝             move more columns we care about to the front of the list (record_id crosscode no_cross aqua_oob bridge_oob mean_aqua moved oldx oldy)[64]  ⍝             and mess with dam columns; add damcols parameter[65]  ⍝6 May 2016: Use 0.5 for nodata in IEI, as this is the expected value.  It's necessary for effect for crossings in or near Estuarine Subtidal Sheltered, e.g., the lower Hudson[66]  ⍝19-26 Aug 2016: add code for Coldwater CL I project - streams with temperature ≤ threshold are 'cold' - build kernels only for these cells, and keep results only for these cells[67]  ⍝30 Aug 2016: enforce extension on result file[68]  ⍝27 Mar 2018: update treatment of X so Gaussian scaling is done right in AQCONNECT (X is landcover for centerlines, 0 for off+centerlines, and MV outside of landscape)[69]  [70]  [71]  [72]   READPARS ME                                        ⍝Get which parameter[73]   ty←'crossings' 'dams'⍳⊂which[74]   P←GETINFO 'aqconnect'                              ⍝Construct call to AQCONNECT & read AQCONNECT's parameters[75]   READPARS 'aqconnect'[76]   READPARS ME                                        ⍝Uses connectedness parameters by default, but can override them in [linkages][77]   override_pars←'[aqconnect]',⎕TCNL,(T⍳⎕TCNL)↓T←1↓EXTRACTPARS ME     ⍝Override AQCONNECT parameters with those set for LINKAGES[78]   P[1]←⊂GRIDNAME 1⊃P[79]   P[4]←B←buffer←⌈bandwidth×search÷cellsize[80]   block[3]←buffer                                    ⍝Can't set this from info because it may come from AQCONNECT, so set it here[81]   Q←0 1 1 TABLE T←pathT PATH dams                    ⍝Read dams file[82]   :if 'row'≡⊃H←FRDBL¨↓',' MATRIFY head               ⍝in case column headers don't conform[83]      H[1]←⊂'damid'[84]   :end[85]   Q←Q[;H COL damcols][86]   W←(4⍴1 ¯1×cellsize÷2)+(1 FINDPOINT 2⍴B),1 FINDPOINT THISBLOCK[3 4]+B   ⍝Corners for current block[87]   M←((^/Q[;2 3]≥((1↑⍴Q),2)⍴W[1 4])^^/Q[;2 3]≤((1↑⍴Q),2)⍴W[3 2])⌿Q        ⍝clip dams for current block[88]   M←M[;⍳3],0 1↓M                                     ⍝duplicate x,y[89]   M[;2 3]←↑1 FINDCELL¨↓M[;2 3]                       ⍝convert to cells[90]  ⍝ M[;6 8]←(⊂'.''.') TEXTREPL¨M[;6 8]                 ⍝drop enclosing quotes from Arc   ⍝DEPENDS ON DATASET--FAILS FOR DSL DATA[91]   dam←M[92]  [93]   C←0 1 1 TABLE T←pathT PATH crossings               ⍝Read crossings file[94]   T←(cross_←',' MATRIFY head) COL 'x-coord y-coord'[95]   :if ~0∊⍴C[96]      C←(~(1 FINDCELL¨↓C[;T])∊↓dam[;damcols COL 'x-coord y-coord'])⌿C           ⍝   drop crossings that overlap dams[97]   :end[98]   W←(4⍴1 ¯1×cellsize÷2)+(1 FINDPOINT 2⍴B),1 FINDPOINT THISBLOCK[3 4]+B   ⍝Corners for current block[99]   cross←((^/C[;T]≥((1↑⍴C),2)⍴W[1 4])^^/C[;T]≤((1↑⍴C),2)⍴W[3 2])⌿C        ⍝Clip crossings for current block[100]  cross←(C[;cross_ COL 'group']∊cross[;cross_ COL 'group'])⌿C            ⍝Include all members of groups that occur in our tile![101]  W2←W+¯1 1 1 ¯1×B×CELLSIZE                                              ⍝Corners for current block + buffer[102]  crossB←((^/C[;T]≥((1↑⍴C),2)⍴W2[1 4])^^/C[;T]≤((1↑⍴C),2)⍴W2[3 2])⌿C     ⍝Clip crossings for block + buffer for uncertainty[103] [104] [105]  →(1 2=ty)/L1,L2                                    ⍝CASE which ----------------------[106] [107] L1:→(0∊⍴cross)/0                                    ⍝   = crossings[108]  C←cross[⍋cross[;cross_ COL 'group x-coord y-coord'];][109]  Q←C[;cross_ COL 'x-coord y-coord'][110]  T←T≠0,¯1↓T←C[;cross_ COL 'group']                  ⍝   west (and south, for ties)-most crossing in each group[111]  Q←T⌿C[;cross_ COL 'x-coord y-coord']               ⍝   use one crossing for each group[112]  U←(T2←(^/Q≥((1↑⍴Q),2)⍴W[1 4])^^/Q≤((1↑⍴Q),2)⍴W[3 2])/T/C[;cross_ COL 'group']  ⍝Unique groups with 1st point in window[113]  M←U,T2⌿Q,Q                                         ⍝   group number, X,Y of focal cell[114]  M←M,T2/T pMIN C[;cross_ COL aquaticcol]            ⍝   4th col is min aquatic crossing score (do worst case in group)[115]  M←M,T2/T pMAX C[;cross_ COL 'surveyed']            ⍝   5th col is 1 if any culverts in group were surveyed[116]  M[;2 3]←↑1 FINDCELL¨↓M[;2 3]                       ⍝   convert to cells[117]  H←'crossingid x y aqscore anysurveyed'             ⍝   crossings-specific columns in result table[118]  →L3[119] [120] L2:M←dam                                            ⍝   = dams - use dam points[121]  H←damcols[122]  →L3[123] [124] L3:→(0∊⍴M)/0                                        ⍝If no items, bail out[125]  score←TABLE pathM PATH scores                      ⍝Get linkage scores[126]  ss←MATIN pathT PATH scales                         ⍝Get original settings variable scales[127]  L←LOOKUP split                                     ⍝Read group table[128]  N←((Q⍳Q)=⍳⍴Q)/Q←L[;2]                              ⍝Group names[129]  L←(↓[1]L[;2]∘.≡N) SLASHEACH (⍴N)⍴⊂L[;1]            ⍝Cover types in split[130] [131]  fd←(2*¯1+⍳8),8 2⍴0 1 1 1 1 0 1 ¯1 0 ¯1 ¯1 ¯1 ¯1 0 ¯1 1[132]  X←READ 1⊃1⊃A                                       ⍝Read lands (streams on top)[133]  T←READ 2⊃1⊃A                                       ⍝Read stream centerlines[134]  X←MVREP (X×T=1) (X=MV)                             ⍝treat all off-centerline land as zero, preserving missing[135]  R←(T=1)×READ 4⊃1⊃A                                 ⍝Read flow grid (want it for centerlines only)[136] [137]  ex←example ⋄ example←⍳0                            ⍝We don't want example doing anything here[138]  →(0∊⍴Y←S '' INCLUDE (⍴X)⍴1)/0                      ⍝Get mask, all cells included[139]  example←ex[140]  M←(~(Y SCATI M[;2 3])∊0,MV)⌿M                      ⍝Drop masked crossings/dams (remember that grouped crossings in M don't fall on centerlines)[141]  →(0∊⍴M)/0[142]  →(0∊⍴Y←S '' INCLUDE X)/0                           ⍝Get mask, centerlines only (that's all we'll run for)[143]  Y←(0∊⍴example)∨EXAMPLEINIT 0                       ⍝If running example, mask example cells, otherwise no mask[144]  →(0=⎕NC'exclude')/L4                               ⍝If any cover types are excluded,[145]  →(0∊⍴exclude)/L4[146]  Y←Y^~X∊⊃,/LOOK¨FRDBL¨↓','MATRIFY exclude           ⍝   exclude them[147] [148] L4:→(0∊⍴link_example)/L5                            ⍝If doing linkage example,[149]  M←((↓M[;2 3])∊1 FINDCELL¨↓((.5×⍴link_example),2)⍴link_example)⌿M[150]  →(0∊⍴M)/0[151] [152] L5:[153]  :if cold≠0                                         ⍝If doing coldwater linkages run,[154]     cw←1E5 MVREP READ 5⊃1⊃A                         ⍝   read coldwater streams grid[155]     cw←cw≤cold                                      ⍝   1's for coldwater segments[156]  :end[157]  [158]  E←0.5 MVREP READ 3⊃1⊃A                             ⍝Read IEI.  Use exp(IEI) for missing data.[159]  :if uncertainty                                    ⍝   If uncertainty, replace crossings in abarriers with aquaticUCI, using formula in crossscores_aq[160]     Q←(crossB[;cross_ COL 'x-coord y-coord aquaticUCI']) (MATRIFY 'x-coord y-coord aquaticUCI') 'aquaticUCI'[161]  :else                                              ⍝   else, replace ABARRIERS aquatic with same value from crossings, so we don't get burned by rounding[162]     Q←(crossB[;cross_ COL 'x-coord y-coord ',aquaticcol]) (MATRIFY 'x-coord y-coord aquatic') 'aquatic'[163]  :end[164]  G←(1 2⍴('abarriers' crossscores_aq)) Q SETTINGS (2⊃A) 'aquatic' 'resist dist'[165] [166]  D←(DIST 1+2×B)≤⌊B                                  ⍝Circle for mask variable[167]  O←(⍳1+2×B)-B+1                                     ⍝Maximum radius possible to travel[168]  Z←(1+⍴L)⌿(M[;1],(0,1+2×ty∊1 2)↓M),((1↑⍴M),6)⍴0     ⍝Result table: id/crossinggroup, x, y, linkgroup, base, alt, delta, effect, ln effect[169]  V←score (2⍴B+1) ((2⊃G)[;1]) ss ((2⊃G)[;3])         ⍝Parameters for LINKAGEMOD[170]  linkages←1                                         ⍝Prevent AQCONNECT from edge correction and reading or writing grids[171] [172]  I←0[173] L6:→((1↑⍴M)<I←I+1)/L12                             ⍝For each point,   -------------------------------------------[174] aa←⎕AI[2] ⋄ ⍞←'[',which,ext,'] #',(⍕I),'/',(⍕1↑⍴M),'...' ⋄ FLUSH[175]  BREAKCHECK[176]  T←(MV×~D)+D×X[M[I;2]+O;M[I;3]+O]                   ⍝   Clip landcover to circle[177]  →(^/,X∊0,MV)/L6                                    ⍝   If clipped landcover is all missing and off-centerline, skip this point[178]  Q←D×Y[M[I;2]+O;M[I;3]+O]                           ⍝   And mask[179]  T←~X[M[I;2]+O;M[I;3]+O]∊0,MV                       ⍝   stream centerlines[180]  A←WETSPREAD (bandwidth×search÷cellsize) (B+1) (B+1) T (R[M[I;2]+O;M[I;3]+O])  ⍝   available stream cells[181]  Q←Q×A>0                                            ⍝   only want cells we can actually get to via stream network[182]  →(~0∊⍴example)/L7                                  ⍝   If not doing example,[183]  Q←Q×(⌊.2×A+1)=.2×A+1                               ⍝      do every Nth cell[184]  :if cold≠0                                         ⍝      If doing coldwater linkages run,  [185]     Q←Q^cw[M[I;2]+O;M[I;3]+O]                       ⍝         only run for coldwater cells[186]  :end[187] L7:linkgrids ← (T Q) 0                              ⍝   linkgrids is ((clipped X) (clipped Y)) ((clipped sr) (srt) (clipped sd) (sdt))[188]  Q←(1⊃G)[;M[I;2]+O;M[I;3]+O]                        ⍝   Clip resistance settings variables[189]  T←(3⊃G)[;M[I;2]+O;M[I;3]+O]                        ⍝   Clip distance settings variables[190]  linkgrids[2]←⊂Q (2⊃G) T (4⊃G)                      ⍝   these will get passed to AQCONNECT so they won't have to go to disk[191] [192]  →(ty≠1)/L8                                         ⍝   If crossings,[193]  V[2]←⊂2⍴B+1                                        ⍝      Center cell, for only 1 crossing in group[194]  →(1=+/T←cross[;cross_ COL 'group']=M[I;1])/L8      ⍝      If more than one crossings in our group,[195]  V[2]←⊂(B+1)+↑(1 FINDCELL¨↓T⌿cross[;cross_ COL 'x-coord y-coord'])-⊂M[I;2 3] ⍝      Coordinates in terms of window[196] L8:linkgrids←linkgrids,⊂R[M[I;2]+O;M[I;3]+O]×A>0    ⍝      Also pass streamflow grid[197]  →(~(ty=1)^uncertainty)/L9                          ⍝      If crossings and uncertainty,[198]  T←⌊/cross[(cross[;cross_ COL 'group']=M[I;1])/⍳1↑⍴cross;cross_ COL 'aquaticLCI']  ⍝         Take min LCI in group[199]  T←(⊂((1⊃V)[;,1],(⊂crossscores_aq)),⊂T),1↓V         ⍝         use LCI for this crossing[200]  linkgrids[2]←⊂(⊂T LINKAGEMOD Q),1↓2⊃linkgrids      ⍝         modify focal crossing (or group) to use LCI[201] [202] L9:lg←linkgrids                                     ⍝      Now, build a single kernel from our upgraded focal culvert--these are cells we can reach[203]  F←(2⍴⍴O)⍴0 ⋄ F[⌈.5×⍴O;⌈.5×⍴O]←1                    ⍝      here's the focal cell[204]  linkgrids[1]←⊂(1⊃linkgrids)[1],⊂F                           [205]  linkgrids[2]←⊂(⊂V LINKAGEMOD Q),1↓2⊃linkgrids      ⍝      upgrade the culvert[206]  P AQCONNECT S                                      ⍝      and run for the focal cell[207]  linkgrids←lg                                       ⍝      back to original mask[208] ⍝ linkgrids[1]←⊂(res>0) ((res>0)^2⊃1⊃linkgrids)      ⍝      now landscape and mask are only cells in kernel[209]  linkgrids[1]←⊂(⊂MVREP (res>0) (res≤0)),(1⊃linkgrids)[2]      ⍝      now landscape and mask are only cells in kernel[210] [211]  P AQCONNECT S                                      ⍝      call aquatic connectedness for base scenario[212]  V1←0 MVREP res                                     ⍝      capture result[213]  linkgrids[2]←⊂(⊂V LINKAGEMOD Q),1↓2⊃linkgrids      ⍝      modify settings values of focal cell[214]  P AQCONNECT S                                      ⍝      call aquatic connectedness for alternative scenario[215]  V2←0 MVREP res                                     ⍝   capture alternative result[216] [217]  :if cold≠0                                         ⍝   If doing coldwater linkages run,  [218]     V1←V1×cw[M[I;2]+O;M[I;3]+O][219]     V2←V2×cw[M[I;2]+O;M[I;3]+O][220]  :end[221] [222]  Z[J←(I×1+⍴L)-⍴L;(¯6+⍳6)+1↓⍴Z]←(⊂'all'),6 ROUND (+/,V1),(+/,V2),((+/,V2-V1)÷scaleby),T,⍟1+T←(+/,E[M[I;2]+O;M[I;3]+O]×V2-V1)÷scaleby   ⍝   Result is base, alt, delta, effect (IEI-weighted delta), and ln effect[223] [224]  →(0∊⍴L)/L11                                        ⍝   If any grouped landcover types,[225]  K←0[226] L10:→((⍴L)<K←K+1)/L11                               ⍝      For each group of landcover types,[227]  Q←((⊃⊃linkgrids)∊K⊃L)×V2 ⋄ T←((⊃⊃linkgrids)∊K⊃L)×V1⍝         Select only landcover types in group[228]  Z[J+K;(¯6+⍳6)+1↓⍴Z]←N[K],6 ROUND (+/,T),(+/,Q),((+/,Q-T)÷scaleby),T2,⍟1+T2←(+/,E[M[I;2]+O;M[I;3]+O]×Q-T)÷scaleby ⍝         Result just for these types[229]  →L10[230] [231] L11:t←⎕AI[2]-aa ⋄ ⎕←(⍕⌊.5+t),' s (est. ',(TIME t×''⍴⍴M),' h:m:s for this tile)' ⋄ FLUSH[232] [233]  →(0∊⍴link_example)/L6                              ⍝   If link example,[234]  Q←(⍴X)⍴MV ⋄ Q[M[I;2]+O;M[I;3]+O]←1E6×V2-V1[235]  Q WRITE T←pathR PATH 'link',⍕Z[J;1]                ⍝      write delta[236]  (LN Q) WRITE pathR PATH 'link',(⍕Z[J;1]),'ln'      ⍝      and log version[237]  Q←(⍴X)⍴MV ⋄ Q[M[I;2]+O;M[I;3]+O]←V1[238]  Q WRITE pathR PATH 'link',(⍕Z[J;1]),'v1'           ⍝      write before[239]  Q←(⍴X)⍴MV ⋄ Q[M[I;2]+O;M[I;3]+O]←V2[240]  Q WRITE pathR PATH 'link',(⍕Z[J;1]),'v2'           ⍝      write after[241]  LOG '⊢[linkages] Examples at item #',(,⍕Z[J;1]),' (point ',(¯1↓⊃,/(⍕¨Z[J;2 3]),¨','),') delta =',(,4⍕Z[J;¯1+1↓⍴Z]÷1E3),'  (written to grids ',T,'...)'[242]  →L6[243] [244] L12:H←H,' linkgroup base alt delta effect effect_ln'[245]  :if ty=1                                           ⍝If crossings,[246]     Z←(Z⍪0)[Z[;H COL 'crossingid']⍳cross[;cross_ COL 'group'];],cross[247]     Z←(Z[;H COL 'crossingid']≠0)⌿Z                  ⍝   Join in original crossings data, but only keep groups we have results for[248]     H←(MATRIFY H) OVER cross_[249]     H←(B←0=(MATRIFY 'x y aqscore row crossingid') MATIOTA H)⌿H ⍝Drop redundant and junky columns[250]     Z←B/Z[251]     Q←H COL 'id x-coord y-coord group groupsize anysurveyed surveyed record_id crosscode no_cross aqua_oob bridge_oob mean_aqua moved oldx oldy'[252]     Z←Z[;Q],Z[;(⍳1↓⍴Z)~Q]                           ⍝   Reorder columns more nicely[253]     H←H[Q,(⍳1↓⍴Z)~Q;][254]  :else                                              ⍝Else, dams[255]     B←0=(MATRIFY H) MATIOTA MATRIFY damcols         ⍝   Get dam columns we don't already have[256]     H←(MATRIFY H) OVER B⌿MATRIFY damcols[257]     Z←Z,dam[;H COL B⌿MATRIFY damcols][258]  :end[259]  head←1↓⎕TCHT MTOV MATRIFY H[260]  T←result,(0=⍴result)/'link_',which,ext,uncertainty/'_bc'[261]  Z LOCKWRITE pathR PATH T,(~'.'∊T)/'.txt'           ⍝Write results to table[262]  →0[263] [264] [265] [266] what:auxiliary[267] type:standard[268] init:NDROP pathR PATH result,(0=⍴result)/'link_',which,ext,(uncertainty/'_bc'),'.txt'           ⍝Erase old result table[269] info:('lands' (pathS PATH 'streams') iei (pathS PATH 'flow') coldgrid) ('settings') ('') (0) 'luwet'     ⍝Source grids, settings table, result grid, and (dummy) buffer size[270] check:CHECKVAR 'which scores scales scaleby crossings aquaticcol dams split uncertainty crossscores_aq link_example result ext damcols cold coldgrid'[271] check:pathT CHECKFILE crossings[272] check:pathT CHECKFILE dams[273] check:pathM CHECKFILE scores[274] check:pathT CHECKFILE scales[275] check:CHECKVALUES 'which crossings dams'[276] check:CHECKCOVER 'split'    ∇