    ∇ Z←O LINEGRID X;Y;Q;I;N;U;T;M;W;V[1]   ⍝Convert points ⍵ to lines in grid; force orthogonal corners if ⍺[2]   ⍝⍵ is list of x,y points representing one line[3]   ⍝Orthogonal corners are guaranteed, even for perfect diagonals[4]   ⍝Globals: cellsize[5]   ⍝Result: (binary grid) (x,y of cell 1,1)[6]   ⍝Use:[7]   ⍝   Q R ← 1 LINEGRID XY[8]   ⍝   Q WRITEBLOCK (⊂resultgrid),(FINDCELL R),⍴Q[9]   ⍝B. Compton, 25-26 Jun 2012[10]  [11]  [12]  [13]   ⍎(0=⎕NC'O')/'O←1'                              ⍝Force orthogonal corners by default[14]   M←(⌊⌿X)-cellsize|(⌊⌿X)-WINDOW[3 4]-cellsize÷2  ⍝Origin we'll use (min of X, but aligned to cells)[15]   Y←⌽(X-(⍴X)⍴M)÷cellsize                         ⍝Points in terms of result grid[16]   Y[;1]←(⌈⌈/Y[;1])-Y[;1]                         ⍝Flip Y-axis[17]   Y←Y+1                                          ⍝Origin is 1,1[18]   Y←(∨/Y≠¯1⍪¯1 0↓Y)⌿Y                            ⍝Drop successive duplicate points[19]  [20]   Q←0 2⍴0                                        ⍝Now densify points[21]   I←0[22]  L1:→((¯1+1↑⍴Y)<I←I+1)/L2                        ⍝For each segment,[23]   N←(1⌈O×100)×(+/(-⌿Y[I+0 1;])*2)*.5             ⍝   Number of densified points in segment (100/cell if orthogonal corners, 1/cell otherwise)[24]   Q←Q⍪(((⌊N),2)⍴Y[I;])-(⍳⌊N)∘.×(-⌿Y[I+0 1;])÷N   ⍝   Densify[25]   →L1[26]  [27]  L2:[28]  [29]  ⍝TEST CODE:[30]  ⍝ T←Y-1 ⋄ T[;1]←(⌈⌈/T[;1])-T[;1] ⋄ T←((⍴T)⍴M)+⌽T×cellsize ⋄ head←'x-coord',⎕TCHT,'y-coord' ⋄ T TMATOUT 'D:\CAPS\WORKING\Y.TXT'[31]  ⍝ T←Q-1 ⋄ T[;1]←(⌈⌈/T[;1])-T[;1] ⋄ T←((⍴T)⍴M)+⌽T×cellsize ⋄ head←'x-coord',⎕TCHT,'y-coord' ⋄ T TMATOUT 'D:\CAPS\WORKING\B1.TXT'   ⍝UNROUNDED[32]  ⍝ T←(⌊Q)-1 ⋄ T[;1]←(⌈⌈/T[;1])-T[;1] ⋄ T←((⍴T)⍴M)+⌽T×cellsize ⋄ head←'x-coord',⎕TCHT,'y-coord' ⋄ T TMATOUT 'D:\CAPS\WORKING\B2.TXT'   ⍝FLOORED[33]  ⍝ T←(⌊.5+Q)-1 ⋄ T[;1]←(⌈⌈/T[;1])-T[;1] ⋄ T←((⍴T)⍴M)+⌽T×cellsize ⋄ head←'x-coord',⎕TCHT,'y-coord' ⋄ T TMATOUT 'D:\CAPS\WORKING\B3.TXT'   ⍝ROUNDED[34]  [35]   Q←(∨/Q≠1 0↓Q⍪0)⌿Q←⌊.5+Q                        ⍝Round and remove duplicate cells[36]   Z←((⌈⌈⌿Y)⍴0) SCATR ((⌊.5+Y)⍪Q) 1               ⍝Make grid[37]  [38]  ⍝MORE TEST CODE:[39]  ⍝ T←Q-1 ⋄ T[;1]←(⌈⌈/T[;1])-T[;1] ⋄ T←((⍴T)⍴M)+⌽T×cellsize ⋄ head←'x-coord',⎕TCHT,'y-coord' ⋄ T TMATOUT 'D:\CAPS\WORKING\A1.TXT'[40]  [41]  ⍝Now fix stray non-orthogonals[42]   →(~O)/L3                                       ⍝If forcing orthogonal corners,[43]   Q←4 FINDPATCH Z                                ⍝   Find patches in lines with 4-neighbor rule[44]   →(1=⌈/,Q)/L3                                   ⍝   If missing orthogonals (a good line will be 1 patch),[45]  [46]   T←(,1⌽Q),(,¯1⌽Q),(,1⊖Q),[1.5],¯1⊖Q             ⍝   Four neighbors of each cell[47]   W←(2≤⊃,/⍴¨V)/V←UNIQUENZ¨↓T                     ⍝   Unique focal varieties[48]   Z←,Z[49]   Z[UNIQUENZ V⍳W]←1                              ⍝   Fill to make orthogonal lines[50]   Z←(⍴Q)⍴Z[51]  [52]  L3:U←M+0,cellsize×¯1+1↑⍴Z                       ⍝Point at center of upper left corner cell[53]   Z ← Z U    ∇