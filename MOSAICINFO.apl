    ∇ Z←H MOSAICINFO M;T;∆set;N;name;type;timestamp;source;sourcetimestamp;extent;rowsize;colsize;rows;cols;panemap;Q;X;L;I[1]   ⍝Return (info) (header) from mosaic ⍵ if it exists, otherwise (⍳0) (⍳0)[2]   ⍝Gets a lock and returns it unless ⍺[1][3]   ⍝If ⍺[2], suppress local gridinfo caching[4]   ⍝B. Compton, 7 Oct 2013, from PANEMAP[5]   ⍝16 Dec 2013: get a lock; check for mosaic and return ⍳0 if it doesn't exist[6]   ⍝28 Jan 2014: return not found for empty mosaic![7]   ⍝28 Apr 2014: add local gridinfo caching; ⍺[2] now suppresses this[8]   ⍝21 Nov 2014: lowercase names in gridinfo[9]   [10]  [11]  [12]   ⍎(0=⎕NC'H')/'H←0'[13]   H←2↑H[14]   Z←2⍴⊂⍳0[15]   →(0∊⍴M)/0[16]  [17]   N←'name type timestamp source sourcetimestamp extent rowsize colsize rows cols panemap'[18]   :if (~H[2])^~0≡Z←⊃(gridinfo[;3],0)[gridinfo[;1]⍳⊂TOLOWER M]  ⍝If grid is in local gridinfo cache and caching isn't suppressed,[19]      Z←Z ((1+0∊⍴Z)⊃(MATRIFY N) (⍳0))                   ⍝    return info (header only if info is non-empty)[20]      →0[21]   :end[22]  [23]   :if ~H[1][24]      L←LOCKFILE M                                ⍝Get a lock[25]   :end[26]   :if IFEXISTS Q←(FRDBL M),'\mosaicdescrip.txt'  ⍝if the mosaic exists,[27]      X←NREAD Q                                   ⍝   read info[28]      :if ~H[1][29]         UNLOCKFILE L                             ⍝   return the lock[30]      :end[31]      SETPARS X                                   ⍝   get variables[32]      Z←(⍎N) (MATRIFY N)                          ⍝   and return them[33]      T←⎕EX ∆set                                  ⍝   Clear variables we set (they should all be local)[34]   :else                                          ⍝else, it doesn't exist,[35]      :if ~H[1][36]         UNLOCKFILE L                             ⍝   return the lock[37]      :end[38]      Z←2⍴⊂⍳0                                     ⍝   and empty vectors[39]   :end[40]  [41]   I←gridinfo[;1]⍳⊂TOLOWER M                              ⍝Save info in local gridinfo cache[42]   :if I>1↑⍴gridinfo[43]      gridinfo←gridinfo⍪(TOLOWER M) 0 0[44]   :end[45]   gridinfo[I;3]←Z[1]    ∇