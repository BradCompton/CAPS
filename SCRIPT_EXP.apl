    ∇ R SCRIPT_EXP G;X;M;block;loop;test;grids;noread;E;N;tilemapinclude;dot;skiptilemap;ffile;Z;I;mask;buffer;altmask;A;V;a;b;c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z;Q[1]   ⍝Cell-by-cell expression ⍵[1], applied to grids ⍵, tilesize 2⊃⍺; part of the LCD scripting system[2]   ⍝Arguments:[3]   ⍝   ⍺[1]            name of result grid[4]   ⍝   ⍺[2]            tilesize[5]   ⍝   ⍵[1]            expression, with grids represented by a, b, c, ...[6]   ⍝   ⍵[2...n]        names of input grids[7]   ⍝   ⍵[⍴⍵]           name of mask grid[8]   ⍝Launched by SCRIPT_LAUNCH[9]   ⍝B. Compton, 29-30 Sep 2014 (from SCRIPT_ADD)[10]  [11]  [12]  [13]  ⍝Function replacement (this line must be set in PARSEEXP too)[14]   Q←'.*.×./.DIVIDE.^.*.ln.⍟.<>.≠.>=.≥.<=.≤.in.∊.|.∨.¦.∨.&.^.min.⌊.max.⌈.round.ROUND.floor.⌊.ceiling.⌈.abs.|.mod.|.isnull.ISNULL.setnull.SETNULL.if.IF'[15]  [16]   SCRIPTSETUP 'EXP'                              ⍝Set up and set several local variables[17]   A←1⊃X ⋄ X←1↓X                                  ⍝Expression, grids[18]   A←Q WORDREPL LOWTOHIX A[19]  L1:→(~E[N←N+1])/L4                              ⍝Repeat: read tile (skip if not in tilemap)    --- For each tile ---[20]   BREAKCHECK ⋄ DOT[21]   V←'abcdefghijklmnopqrstuvwxyz'                 ⍝Variable names...26 seems like more than enough![22]   I←0[23]  L2:→((⍴X)<I←I+1)/L3                             ⍝   For each input grid,[24]   Q←READ I⊃X                                     ⍝      Read source grid[25]   ⍎V[I],'←Q'                                     ⍝      and assign it to proper variable[26]   →L2[27]  L3:⍎'Z←',A                                      ⍝   execute expression[28]   :if ~0∊⍴mask                                   ⍝   If mask grid supplied,[29]      Z←MVREP Z ((READ mask)∊0,MV)                ⍝      read mask & apply it[30]   :end[31]   Z WRITE 1⊃R                                    ⍝   write results[32]  L4:→(0≠NEXTBLOCK)/L1                            ⍝Until no more tiles[33]   ⎕←''    ∇