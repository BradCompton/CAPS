    ∇ A WATERSHEDB S;I;lc;V;I;Z;Q;extra;resist;lc;flow;buffer;transparent;maskv;imperv;inf;suminf;mininf;size;metrics;T;whabloss_s;whabloss_v;whabloss_iv;salt_s;salt_v;salt_iv;sediment_s;sediment_v;sediment_iv;nutrients_s;nutrients_v;nutrients_iv;imperv_s;imperv_v;imperv_iv;impound_s;impound_v;impound_iv;roadx_s;roadx_v;roadx_iv;damint_s;damint_v;damint_iv;iv;v;B;subw;tinywatersheds;M;ocean;C;bigwatersheds;head;fd;compact_s;compact_v;compact_iv;tmax_s;tmax_v;tmax_iv;humidity_s;humidity_v;humidity_iv;ppt_dec_s;ppt_dec_v;ppt_dec_iv;sand_s;sand_v;sand_iv;eastness_s;eastness_v;eastness_iv;impervi_s;impervi_v;impervi_iv;damstore_s;damstore_v;damstore_iv;withdraw_s;withdraw_v;withdraw_iv;discharge_s;discharge_v;discharge_iv;V1;V2;streams;tmin_s;tmin_v;tmin_iv;precip_s;precip_v;precip_iv;impervini_s;impervini_v;impervini_iv;dischargeni_s;dischargeni_v;dischargeni_iv;septic_s;septic_v;septic_iv;cropland_s;cropland_v;cropland_iv;cranberry_s;cranberry_v;cranberry_iv;forest_s;forest_v;forest_iv;fowet_s;fowet_v;fowet_iv;deepmarsh_s;deepmarsh_v;deepmarsh_iv;urbanopen_s;urbanopen_v;urbanopen_iv;lowland_s;lowland_v;lowland_iv;J;capeless[1]   ⍝CAPS 3.0 watershed metrics, block version to do tiny watersheds[2]   ⍝⍺ = (landcover grid) (settings) (result grid) (buffer)[3]   ⍝Global watershedcall set by WATERSHEDRUN to list of metric, group, result grids and metric-specific input grids[4]   ⍝Parameter buffer should be as least as large as the longest N-S or E-W length of a tiny watershed in the[5]   ⍝study area.  With default tinywatershed threshold of 100 km^2 (findwatersheds.aml and buildwatershedtable.aml),[6]   ⍝25000 is a good size for Massachusetts.  Check this by opening wpoly in a GIS viewer, and coloring it based on[7]   ⍝the column tiny, then measure the longest orthogonal axis.[8]   ⍝Note: flow must be clipped to mask![9]   ⍝B. Compton, 24 Feb 2011, from WATERSHED.[10]  ⍝Pass watershedcall via override_pars so things work with Anthill[11]  ⍝23-24 May 2012: new version reads tinywatersheds.txt, and looks for possible subwatersheds (which seems highly[12]  ⍝   unlikely).  It does not allow tiny watersheds to be subwatersheds, because they're always in bigwatersheds.txt,[13]  ⍝   nor can tiny watersheds have subwatersheds, because big, tiny, and subs are all based on data size, not river size.[14]  ⍝4 Jun 2012: exclude ocean cells and drop tiny watershed numbers[15]  ⍝30 Apr 2013: Call to INCLUDE asks to treat maskv as binary[16]  ⍝23 May 2013: respect mask[17]  ⍝4 Jun 2013: allow multiple classes in exclude, comma-separated[18]  ⍝29 Oct 2013: allow tinywatersheds to be a vector mosaic[19]  ⍝7 Mar 2014: generate tiny watershed outflows here, and remove big watersheds from list[20]  ⍝   (No need to worry about bad outflows below ocean, as they'll just generate small watersheds)[21]  ⍝13 Mar 2014: a couple of small bugs and another bigger one[22]  ⍝18 Mar 2014: ignore the mask and landcover--don't call include.  It screws us up when outflows are at culverts, bridges, and in masked areas.[23]  ⍝21 Mar 2014: set fd for DOWNFLOW.  How did this work before?  I have no idea.[24]  ⍝6 Aug 2014: treat all missing cells in flow as 0 for robustness[25]  ⍝4 May 2015: if metric has a part 2, call it to finish up results in Pass 3 (for HA and NPK) + query metric for variable list and allow multiple variables per metric[26]  ⍝   and pass flattened metric variables lists to QSHED[27]  ⍝12 May 2015: save streams grid for HA (caught 6-8 shad at the Rock Dam today - 40,000/day lifted at Holyoke the past couple of days)[28]  ⍝19 May 2015: Make sure nodata cells in landcover are propagated[29]  ⍝21 May 2015: fix bug in reading streams[30]  ⍝4 Jun 2015: work with metrics that have multiple results (NPK)[31]  [32]  [33]  [34]   READPARS 'watershed'                           ⍝We may need name of big watersheds file[35]   READPARS ME                                    ⍝Get override_pars for this metric[36]   buffer←B←4⊃A[37]   C←(block[1 2]+2×B)⍴1                           ⍝Make core mask for finding outflows[38]   C[(⍳B),(1+1↑⍴C)-⍳B;]←0 ⋄ C[;(⍳B),(1+1↓⍴C)-⍳B]←0[39]  [40]  [41]  ⍝Read grids for this block[42]   lc←READ pathG PATH 1⊃1⊃A                       ⍝Read landcover[43]   lc←MVREP lc (lc∊⊃,/LOOK¨FRDBL¨↓','MATRIFY ocean) ⍝Ocean cells → MV; this will blank ocean out of flow & prevent errors when outflows cross islands & capes[44]   streams←1=READ pathG PATH 2⊃1⊃A                ⍝Read streams grid...we'll run for stream centerlines...[45]   maskv←streams∨0<READ pathG PATH 3⊃1⊃A          ⍝and nonzero/missing cells in mixwater[46]   flow←0 MVREP READ pathG PATH 4⊃1⊃A             ⍝Flow (set MV → 0)[47]   flow←0 MVREP flow (lc=MV)                      ⍝if it's not in landcover, we don't want to flow through it![48]   resist←0 MVREP READ pathG PATH 5⊃1⊃A           ⍝Resistance (missing → zero for robustness)[49]  [50]   :if 0∊⍴tinywatersheds                          ⍝If tinywatersheds file not supplied, generate them[51]      fd←(2*¯1+⍳8),8 2⍴0 1 1 1 1 0 1 ¯1 0 ¯1 ¯1 ¯1 ¯1 0 ¯1 1[52]      M←flow DOWNFLOW flow=0                      ⍝   Find outflows[53]      M←M^(⍴M)↑C                                  ⍝   Don't want any in buffer[54]      M←((,M)/,⍉(⌽⍴M)⍴⍳1↑⍴M),[1.5](,M)/,(⍴M)⍴⍳1↓⍴M⍝      Convert outflows to points[55]      Q←0 1 TABLE pathT PATH bigwatersheds        ⍝   Read big watershed table[56]      Q←Q[;(',' MATRIFY head) COL 'x-coord y-coord'][57]      Q←↑1 FINDCELL¨↓Q                            ⍝   Convert them to cells[58]      M←(~(↓M)∊↓Q)⌿M                              ⍝   and remove these from our list[59]   :else                                          ⍝else, read existing tinywatersheds table[60]      M←0 1↓⊃0 READVEC tinywatersheds             ⍝   Read tinywatersheds without buffer; drop watershed #s, as they're only used in TRPOINTS[61]      M←↑1 FINDCELL¨↓M                            ⍝   Convert outflows to cells[62]   :end[63]   subw←⍳0[64]  [65]   V←watershedcall                                ⍝Matrix of metric, system, result grids, metric-specific input grids (global, set by WATERSHEDRUN)[66]   transparent←1[67]   metrics←WMETRICVARS V[;1][68]  [69]  ⍝Build metric source values for each cell[70]   I←0[71]  L1:→((1↑⍴V)<I←I+1)/L2                           ⍝   For each metric,[72]   ⍎⍕(⊃V[I;1]),' ''',(⊃V[I;4]),''''               ⍝      Call metric to set metric_s to metric source values[73]   →L1[74]  [75]  L2:T←⍎¨(FLATTEN metrics[;3 4]),¨⊂'←(⍴lc)⍴MV'    ⍝Intermediate results all get MV[76]   inf←suminf←mininf←size←(⍴lc)⍴MV[77]   V1←(FLATTEN metrics[;2]),[1.5]FLATTEN metrics[;3]  ⍝Make variable lists for QSHED [78]   V2←(FLATTEN T/metrics[;2]),[1.5]FLATTEN (T←⊃,/⍴¨metrics[;4])/metrics[;4][79]  [80]   I←0[81]  L3:→((1↑⍴M)<I←I+1)/L4                           ⍝For each watershed,[82]   BREAKCHECK[83]   QSHED M[I;],0                                  ⍝   Build resistant watershed from watershed outflow cell[84]   →L3[85]  [86]  ⍝Get metric results and save metrics[87]  L4:size←MVREP size (lc=MV)                      ⍝Make sure nodata cells in landcover are propagated[88]   inf←MVREP inf (lc=MV)[89]  [90]   I←0[91]  L5:→((1↑⍴V)<I←I+1)/0                            ⍝   For each metric[92]   :if 3=⎕NC T←TOUPPER (⊃metrics[I;1]),'2'        ⍝   If there's a part 2 for this metric,[93]      ⍎'Z←',T                                     ⍝      Call part 2 to finish up metric[94]   :else                                          ⍝   Else, we just have to calculate the standard results,[95]      ⍎'v iv ←',⍕(metrics[I;3 4])                 ⍝      Cumulative metric value and cumulative influenced metric value[96]      Z←(iv-mininf×v) DIV suminf-mininf×size[97]   :end[98]   [99]   :if 1<≡Q←⊃V[I;3]                               ⍝      If multiple results,[100]     :for J :in ⍳⍴Q                              ⍝         For each result,[101]        (MVREP (J⊃Z) (inf=MV)) WRITE pathR PATH J⊃Q ⍝            write result grid    [102]     :end [103]  :else                                          ⍝      Else, single result[104]     (MVREP Z (inf=MV)) WRITE pathR PATH Q       ⍝         Write result grid[105]  :end[106]  →L5[107] [108] what:CAPS watershed[109] type:standard[110] info:((⊂'land'),((⊂pathS) PATH¨'streams' 'mixwater' 'flow'),⊂'wresist') ('') ('') (⌈1000×buffer÷cellsize) 'include'      ⍝Source grid, settings table, result grid, buffer size, and include grid[111] check:CHECKVAR 'watershedcall tinywatersheds ocean bigwatersheds'[112] check:1 CHECKCOVER 'ocean'[113] check:pathT CHECKFILE tinywatersheds    ∇