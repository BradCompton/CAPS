    ∇ S POSTSCALE N;F;M;W;I;X;Z;J;Y;loop;noread;test;ffile;grids;Q;B;E;missing;V;K;L;G;O;C;a;U;buffer;R;T;D;dot;P;H;A;head[1]   ⍝Do benchmark-based post-processing in tiles (size ⍵) for target communties in scenario 2⊃⍺[2]   ⍝Parameters:[3]   ⍝   ⍵[1]    block size (default = 1000)[4]   ⍝   ⍵[2]    1 if using zero-pushed quantiles (default = 1 if running for metrics, 0 for iei or other indices)[5]   ⍝[6]   ⍝   ⍺[1]    1 for metrics, 2 for iei, 3 for iei_i[7]   ⍝   ⍺[2]    scenario name[8]   ⍝Globals:[9]   ⍝   grid        name of landcover[10]  ⍝   postmetrics names of metrics, corresponds to columns of weights (except 1st)[11]  ⍝   weights     table of grid code, community weights[12]  ⍝   names       names of community classes, corresponds to rows of weights[13]  ⍝   gradient    yes if doing gradient post-processing[14]  ⍝   source      path to raw metrics; default = pathR[15]  ⍝   results     path to post results (default = pathE,'scaled\')[16]  ⍝   index       vector of result index names corresponding to postmetrics[17]  ⍝   savescaled  if yes, write scaled metrics to disk[18]  ⍝Source:[19]  ⍝   landcover, metrics (or iei/other indices)[20]  ⍝Results:[21]  ⍝   scaled metrics/indices[22]  ⍝   aspatial.txt    aspatial summaries by community (phase 2 only)[23]  ⍝[24]  ⍝Results are placed in results + optional scenario name[25]  ⍝This function replaces the older POST function in the HOUSA workspace[26]  ⍝B. Compton, 30 Sep-7 Oct 2008[27]  ⍝17 Apr 2009: weights.txt uses cover type/synonym names, not cover classes[28]  ⍝19 May 2009: big speed-ups; unexpected missing always←0; zero-weighted communities in metric←MV[29]  ⍝19 Jan 2010: add lumping[30]  ⍝7 Jul 2010: Bug: ignore case in weights.txt[31]  ⍝25 Mar 2011: name change from POST[32]  ⍝4-7 Apr 2011: revise to new POST scheme[33]  ⍝21-22 Nov 2011: use _g for .csv and iei if gradient; only report top 10 missing communities;[34]  ⍝   revise missing behavior (←1 for stressor metrics, ←0 for integrity metrics)[35]  ⍝20 Dec 2011: allow multiple indices, instead of just IEI[36]  ⍝10 Feb 2012: write aspatial summaries; 28 Feb: but not for gradient rescaling[37]  ⍝19 Feb 2012: use benchpath if supplied[38]  ⍝19 Sep 2012: masking[39]  ⍝27 Jan 2014: use SETTILE instead of noread←1 nonsense[40]  ⍝22 Apr 2014: add savescaled[41]  ⍝20 Feb 2015: use inputs_metrics.par for metric name replacement (can't use inputs.par thanks to collisions)[42]  [43]  [44]  [45]   E S←2↑S,⊂''[46]   N←2↑N,(⍴,N)↓1000,E≤1                           ⍝Use zero-pushing on metrics phase[47]   a←⎕AI[2][48]   buffer←0[49]   F←grid,⍕S                                      ⍝Source landcover[50]   R←results,((~0∊⍴⍕S)/(⍕S),'\')[51]   T←benchpath,(0∊⍴benchpath)/pathE[52]   C←MATIN T PATH 'benchmark',(⍕E),(gradient/'g'),'.csv'     ⍝Read benchmark file[53]   P←((P⍳P)=⍳⍴P)/P←index[54]   A←(E=2)/weights[;1],((1↑⍴weights),2×⍴P)⍴0      ⍝Aspatial summaries: ncells and sum(index) for each community and index[55]  [56]   H←0[57]  L0:→((⍴P)<H←H+1)/L5                             ⍝For each index,[58]   W←(E⌊2)⊃((1,index≡¨P[H])/weights) (weights[;,1],1)                     ⍝   Weights for metrics (E=1) or IEI (otherwise)[59]   M←,E⊃((index≡¨P[H])/postmetrics) (⊂(H⊃P),(gradient/'_g')) (⊂'iei_i')   ⍝If E=1, do metrics, if E=2, do IEI, if E=3, do IEI-i[60]  [61]   LOG 'Post-processing ',(E⊃(((1≠⍴P)/(H⊃P),' '),'metrics') (H⊃P) 'IEI_i'),' for ',(⍕⍴names),' target communities',((~0∊⍴S)/' (scenario=',(⍕S),')'),':'[62]   T←(100⌊⍴names)↑names[63]   Q←' ',' ',' ',(⎕PW-3) TELPRINT MIX T[64]   Q←Q OVER ((⍴T)≠⍴names)/'   (',(⍕(⍴names)-⍴T),' communities omitted)'[65]   LOG Q[66]  [67]   loop←test←noread←0                             ⍝   Silly junk for BLOCK, etc.[68]   grids←0 0⍴''[69]   ffile←'POSTSCALE ',⍕S[70]   BLOCK 2⍴N[1][71]   SETTILE[72]   D←TILEMAP (pathG PATH F) (N[1]) 0[73]  [74]   LOG 'Processing ',(⍕+/D),' tiles (',(⍕block[6]),'x',(⍕block[7]),')'[75]   I←0[76]   missing←0 3⍴'' '' 0[77]  L1:→(~D[I←I+1])/L4                              ⍝   Skip block if not in block map[78]   X←READ pathG PATH F                            ⍝   While we have blocks, read block of landcover[79]   DOT[80]   →(0∊⍴T←'*' INCLUDE X)/L4                       ⍝      apply mask and exclude[81]   X←X×T                                          ⍝      set masked cells to 0[82]   Z←(+/G←,X∊W[;1])⍴0                             ⍝      Result, target community cells only[83]   J←0[84]  L2:→((⍴M)<J←J+1)/L3                             ⍝      For each metric,[85]   BREAKCHECK[86]   K←(L←,X∊(O←O\((O←0≠W[;J+1])/W[;1])∊X)/W[;1])/,X⍝         run only for cells we have to[87]   →(0∊⍴K)/L2                                     ⍝         If no communities in this tile for this metric, bail out[88]  [89]   Q←E⊃(source,J⊃M) (R,'raw',(H⊃P),gradient/'_g') (R,'raw',(H⊃P),'_i')   ⍝      Metric file, raw iei, or raw iei_i[90]   U←⊃(⊃,/IFGRIDEXISTS¨U)/U←(⊂Q),¨S ''            ⍝         Take scenario metric if it exists, otherwise just base name[91]   Y←0 'inputs_metrics' GRIDNAME L/,READ U        ⍝         Read block of metric result or IEI[92]   V←'negative'≡GETDIRECTION J⊃M                  ⍝         Reverse metric?[93]   Y←RESCALE_METRICS K Y (O/W[;1]) (((TOUPPER C[;2])≡¨TOUPPER¨M[J])⌿C) V (N[2])   ⍝      rescale it[94]   A←A POST_SUM K Y E H                           ⍝         Build aspatial summaries[95]   :if savescaled∨E=2                             ⍝         If saving scaled metrics or this is IEI,[96]      ((⍴X)⍴(MV×~L)+L\Y) WRITE R PATH (J⊃M),⍕S    ⍝            write scaled metric[97]   :end[98]   →(E≥2)/L2                                      ⍝         If doing metrics,[99]   Z←Z+(G/L)\Y×W[W[;1]⍳K;J+1]                     ⍝            weight metric and add to running IEI[100]  →L2[101] [102] L3:→(E≥2)/L4                                    ⍝      If doing metrics,[103]  Z←(⍴X)⍴(MV×~G)+G\Z                             ⍝         expand to full grid[104]  Z WRITE R PATH 'raw',(H⊃P),(gradient/'_g'),S   ⍝         write raw index[105] L4:→(0≠NEXTBLOCK)/L1                            ⍝   Until out of blocks[106]  ⎕←''[107]  →L0                                            ⍝Next index[108] [109] [110] L5:→(gradient∨E≠2)/L7                           ⍝If in phase 2 & doing community rescaling, write aspatial summaries[111]  head←'community',⊃,/⎕TCHT,¨(2/P),¨(2×⍴P)⍴'_n' '_sum'[112]  (landcover[landcover[;1]⍳A[;1];2],0 1↓A) TMATOUT R PATH 'aspatial.txt'[113] L7:Q←(missing[;3]≠0)⌿missing[114]  →(0∊⍴Q)/L6                                     ⍝If any missing values for target metrics,[115]  Q[;2]←names[W[;1]⍳Q[;2]][116]  Q←Q[⎕AV⍋(MIX Q[;1]),MIX Q[;2];][117]  B←∨/~Q[;1 2]≡¨¯1⊖Q[;1 2][118]  LOG ''[119]  LOG '> > >  Missing metric values for target communities (top 10 for each shown):'[120]  Q←(B⌿Q[;1 2]),B pSUM Q[;3]                     ⍝Metrics, communities, # missing[121]  Q←Q[⍒Q[;3];][122]  Q←Q[⎕AV⍋MIX Q[;1];][123]  B←~Q[;1]≡¨¯1↓(⊂''),Q[;1][124]  Q←(10≥⊃,/⍳¨B pSUM (⍴B)⍴1)⌿Q[125]  LOG FRDBL⍕Q[126]  LOG '      Missing values set to 0 for integrity metrics, 1 (no stressor) for stressor metrics'[127] L6:LOG 'POSTSCALE ',(⍕E),' is done.  Time = ',TIME ⎕AI[2]-a    ∇