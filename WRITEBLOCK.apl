    ∇ X WRITEBLOCK G;E;C;M;M_;L;R;K;T;I;P;Rx;Ry;Px;Py;ROL;Xr;Yr;O;H;V;N;U;W;Q;A[1]   ⍝Write data ⍺ to block 1↓⍵ of grid (1⊃⍵), potentially using mosaics[2]   ⍝Read block 1↓⍵ from grid 1⊃⍵[3]   ⍝   ⍵[1]    grid path & name[4]   ⍝   ⍵[2 3]  starting row & column[5]   ⍝   ⍵[4 5]  nrows & ncols[6]   ⍝   ⍵[6]    buffer in cells (default = 0)[7]   ⍝   ⍵[7]    if 1, write MVs transparently (i.e., existing data shows through MVs); if 2, matrix is added to existing grid; if[8]   ⍝           3, the max of matrix and the existing grid are written (default = 0)[9]   ⍝   ⍵[8]    force floating point (default = 0)[10]  ⍝   ⍵[9]    grid is a mosaic (default = global writemosaics; 0 if it doesn't exist)[11]  ⍝Don't write grid data for all-missing blocks in C mode[12]  ⍝B. Compton, 10 Oct 2013[13]  ⍝17 Oct 2013: get grid description after creating grid. Government opens today after Republican surrender.[14]  ⍝5 Nov 2013: use global writemosaics as default[15]  ⍝14 Nov 2013: now use FINDCONNECTION, thanks to mosaics + drives[16]  ⍝17 Dec 2013: don't try to write a mosaic if mosaics=0[17]  ⍝3 Jan 2014: use LOCKFILE/UNLOCKFILE[18]  ⍝28 Apr 2014: suppress local gridinfo caching on calls[19]  ⍝21 Nov 2014: don't suppress writing MVs unless transparent!  Remove grid from gridinfo.[20]  ⍝31 Aug 2016: pass mosaic name to WRITEMOSAICINFO to keep from breaking renamed/copied mosaics[21]  [22]  [23]  [24]   ⍎((T←0)≠⎕NC'writemosaics')/'T←writemosaics'[25]   G←(8↑G,3⍴0),1↑(8↓G),T              ⍝Defaults[26]   G[9]←G[9]^mosaics                  ⍝If mosaics isn't true, can't write mosaics[27]   X←(¯2↑1 1,⍴X)⍴X[28]   X←(2⍴G[6])↓(-2⍴G[6])↓X             ⍝Drop data in the buffer[29]   →((G[7]∊⍳3)^^/,X=MV)/0             ⍝If transparent and all nodata, no need to write anything![30]   :if ∨/G[2 3]≤0                     ⍝If writing beyond orgin,[31]      W←0⌈1-G[2 3]                    ⍝   drop this part of grid[32]      G[2 3] ← 1⌈G[2 3][33]      G[4 5] ← G[4 5]-W[34]      X←W↓X[35]   :endif[36]   ⎕ERROR (∨/(G[4 5])≠⍴X)/'WRITEBLOCK: Wrong size matrix'[37]  [38]   E←0 1 1 GRIDDESCRIBE 1⊃G[39]   SETCACHE 0                         ⍝Turn off caching for write[40]   :if G[9]^0∊⍴E                      ⍝If grid is a mosaic and doesn't exist,[41]      T←(1+645=⎕DR X)⌈2×G[8]          ⍝   grid type: 1 = integer, 2 = floating point[42]      T NEWMOSAIC 1⊃G                 ⍝   create mosaic[43]      E←0 1 1 GRIDDESCRIBE 1⊃G[44]   :else                              ⍝Else,[45]      G[9]←(12↑E)[12]                 ⍝   set mosaic flag[46]   :end[47]  [48]   :if ~G[9]                          ⍝If it's a normal grid (not a mosaic),[49]      E←(1+0∊⍴E)⊃E referencewindow    ⍝   If it's a new grid, use reference window[50]      ⎕ERROR (MV=C←FINDCONNECTION (5↑E) (1⊃G))/'Error: There is no connection for grid ',TOLOWER 1⊃G[51]      SETCONNECTION C                 ⍝   Find & set the connection[52]      ACTIVATECONNECTION[53]      TRACK '   [WRITEBLOCK writing to grid ',(1⊃G),']'[54]      X ∆WRITEBLOCK G[⍳8]             ⍝  Write the block to a normal grid[55]      →L9[56]  [57]   :end                               ⍝Else, it's a mosaic,[58]  [59]   ⎕ERROR (0=⎕NC'mosaicwindow')/'Error: Mosaics not initialized - use MOSAICINIT'[60]   ⎕ERROR (~(5↑E)≡mosaicwindow)/'Error: Mosaic grid doesn''t conform to mosaic window'[61]  [62]   M M_ ← 0 1 MOSAICINFO 1⊃G[63]   ⎕ERROR (∨/M[M_ COL 'rowsize colsize']≠mosaic[mosaic_ COL 'rowsize colsize'])/'Mosaic grid''s rowsize and colsize don''t match the scheme defined by MOSAICINIT'[64]  [65]   L←(E[3]+E[5]×G[3]-1),E[4]+E[5]×E[2]-G[4]+G[2]-1        ⍝Lower left corner (xll, yll) of block we're reading[66]   R←G[5 4],L,E[5]                                        ⍝Extent of result (ncol, nrow, xll, yll, cellsize)[67]  [68]   K←N/⍳⍴N←⎕FI((2×⍴N)⍴1 0)\N←⊃mosaic[mosaic_ COL 'panemap']⍝Available panes in mosaic[69]   N←(⍴N)⍴0                                               ⍝Newly changed panes[70]   T←⎕DEF 'Z←A ROL B' OVER 'Z←(A[1]⌈B[1])≤A[2]⌊B[2]'      ⍝Define range overlap function[71]  [72]   I←0[73]  L1:→((⍴K)<I←I+1)/L2                                     ⍝For each nonempty pane,[74]   P←⊃mosaicwindow PANEWINDOW mosaic[mosaic_ COL 'rowsize colsize'],K[I] ⍝   window of pane[75]  [76]   Rx Ry ← (R CELL2POINT R[2],1),¨R CELL2POINT 1,R[1]     ⍝   x & y ranges of result[77]   Px Py ← (P CELL2POINT P[2],1),¨P CELL2POINT 1,P[1]     ⍝   x & y ranges of pane[78]  [79]   →((~Rx ROL Px)∨~Ry ROL Py)/L1                          ⍝   If no overlap, skip tile[80]  [81]   Xr←(Rx[1]⌈Px[1]),Rx[2]⌊Px[2]                           ⍝   Range of overlaps[82]   Yr←(Ry[1]⌈Py[1]),Ry[2]⌊Py[2][83]  [84]   O←(P POINT2CELL Xr[1],Yr[2]),P POINT2CELL Xr[2],Yr[1]  ⍝   Overlap of pane and result, in cells[85]   O←O[1 2],O[3 4]-O[1 2]-1                               ⍝   starting row, col, nrows, ncols[86]  [87]   SETCONNECTION FINDCONNECTION (-K[I]) (1⊃G)             ⍝   find and set matching connection[88]   ACTIVATECONNECTION[89]  [90]   H←⊂PANEPATH G[1],(⊂STRIP⊃M[M_ COL 'name']),K[I],⍴N     ⍝   Path to mosaic pane[91]   U V ← ↓[1]2 2⍴⊃,/(⊂R) POINT2CELL¨(Xr[1],Yr[2]) (Xr[2],Yr[1])  ⍝   Row range, column range[92]   Q←X[U[1]+0,⍳-/⌽U;V[1]+0,⍳-/⌽V]                         ⍝   Values to write[93]   →((G[7]≥1)^~N[K[I]]←∨/,Q≠MV)/L1                        ⍝   If transparent and no data in pane, don't write anything[94]   :if ~IFEXISTS T←STRIPPATH ⊃H                           ⍝   If pane path doesn't exist yet,[95]      MAKEDIR T                                           ⍝      create it.[96]   :end[97]   Q ∆WRITEBLOCK H,O,0,G[7 8]                             ⍝   Write the block![98]   TRACK '   [WRITEBLOCK writing pane ',(⍕K[I]),' to grid ',(1⊃G),']'[99]   →L1[100] [101] L2:A←LOCKFILE 1⊃G                                       ⍝Get a lock on the mosaic path[102]  M M_ ← 1 1 MOSAICINFO 1⊃G[103]  N←N∨⎕FI((2×⍴T)⍴1 0)\T←⊃M[M_ COL 'panemap']             ⍝   or our panesmap with existing one[104]  (1⊃G) WRITEMOSAICINFO M[M_ COL 'name type source sourcetimestamp extent rowsize colsize rows cols'],⊂N[105]  UNLOCKFILE A[106]  TRACK '   [Data written to grid ',(1⊃G),']'[107] [108] L9:gridinfo←(~(TOLOWER¨gridinfo[;1])∊TOLOWER¨G[1])⌿gridinfo    ⍝Remove grid from gridinfo    ∇