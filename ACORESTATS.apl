    ∇ A ACORESTATS S;buffer;exclude;loop;test;noread;grids;ffile;tilesize;E;Z;N;X;H;R;rangeslice;C;U;tilemapinclude;skiptilemap;range;acores;I;B;Q;head;D;O;V;V2;lookedup;W[1]   ⍝Calculate stats for aquatic cores[2]   ⍝Parameters:[3]   ⍝   acores              name of aquatic ecosystem cores grid[4]   ⍝   range               name of grid to use for loon range[5]   ⍝   rangeslice          value to slice loon range at (use ≥0.25)[6]   ⍝   tilesize            size of tiles (in cells)[7]   ⍝   targets = '1:1'     needs to be in parameters.par to run a single thread[8]   ⍝Runs as a CAPS metric, but only uses one thread.  It'll be fastest if you set host = 'w00'.[9]   ⍝B. Compton, 13-14 Jun 2016 (from LOONTROUT)[10]  ⍝12-13 Jul 2016: do summary by stream class, too--use new continuous stream class grid; assign[11]  ⍝   cores to lotic or lentic by core type, not underlying class, as some lotic cores spread through lentic[12]  ⍝14 Jul 2016: get this right--lentic is by landcover, but lotic now uses continuous classified stream network[13]  [14]  [15]  [16]   READPARS ME[17]   buffer←4⊃A[18]   exclude←''[19]   loop←test←noread←0 ⋄ grids←0 0⍴''              ⍝Silly junk for BLOCK, etc.[20]   ffile←'ACORESTATS '[21]   BLOCK (2⍴tilesize),buffer[22]   SETTILE[23]  [24]   tilemapinclude←0[25]   skiptilemap←0                                  ⍝Don't let DEBUG sabotage this[26]   E←TILEMAP '' tilesize 0 0                      ⍝Get tilemap, building it if necessary. This will only help if there's mask grid.[27]   ⎕←'Running ACORESTATS on ',(⍕+/E),' tiles' ⋄ FLUSH[28]   Z←0 9⍴0                                        ⍝Running summary: [1] HUC; counts of: [2] cores in lotic, [3] cores in lentic, [4] cores in headwaters,   [29]                                                  ⍝   [5] cores in loon range, [6] lotic, [7] lentic, [8] headwaters, [9] lentic in loon range[30]   V←((⍴LOOK 'lotics'),2)⍴0                       ⍝Running summary by stream class: class×cores,total[31]   V2←lookedup[32]  [33]  [34]   N←0[35]  L1:→(~E[N←N+1])/L2                              ⍝Repeat: read tile (1st time through tiles), skip if not in tilemap    --- For each tile ---[36]   BREAKCHECK [37]   X←READ 1⊃1⊃A                                   ⍝   Read landcover grid [38]   H←0 MVREP READ 2⊃1⊃A                           ⍝   HUC6 grid[39]   R←rangeslice≤READ 3⊃1⊃A                        ⍝   loon range[40]   C←READ 4⊃1⊃A                                   ⍝   and aquatic cores[41]   C←(C∊1 2 10 11 12 13 14)+2×C∊3 20 21           ⍝   reclass aquatic cores: 1 = lotic, 2 = lentic (works for both ecosystem & combo cores)[42]   D←1=READ 5⊃1⊃A                                 ⍝   stream centerlines[43]   O←1=READ 6⊃1⊃A                                 ⍝   read orders grid to get headwater streams[44]   W←READ 7⊃1⊃A                                   ⍝   and read continuous stream class[45]  [46]   V[;1]←V[;1]++⌿(,(C=1)×D×W)∘.=LOOK 'lotics'     ⍝   count of cores × stream class (but only for lotic cores!)[47]   V[;2]←V[;2]++⌿(,D×W)∘.=LOOK 'lotics'           ⍝   count of stream class[48]  [49]   U←UNIQUENZ ,H                                  ⍝   Unique HUCs in tile[50]   I←0[51]  L3:→((⍴U)<I←I+1)/L2                             ⍝   For each HUC in tile,[52]   B←,H∊U[I][53]   Q←9↑U[I][54]   Q[2]←+/B/,(C=1)                                ⍝      sum of lotic cores [55]   Q[3]←+/B/,C=2                                  ⍝      sum of lentic cores [56]   Q[4]←+/B/,(C=1)×O                              ⍝      sum of lotic cores in headwaters[57]   Q[5]←+/B/,(C=2)×R                              ⍝      sum of lentic cores in loon range[58]   Q[6]←+/B/,W∊LOOK 'lotics'                      ⍝      sum of lotic in complete stream network[59]   Q[7]←+/B/,X∊LOOK 'lentics'                     ⍝      sum of lentic[60]   Q[8]←+/B/,O^~X∊LOOK 'lentics'                  ⍝      sum of headwaters[61]   Q[9]←+/B/,R×X∊LOOK 'lentics'                   ⍝      sum of lentic in loon range[62]   ⎕←Q ⋄ FLUSH[63]   Z←Z⍪Q[64]   →L3[65]  [66]  L2:→(0≠NEXTBLOCK)/L1                            ⍝   Until no more tiles[67]   [68]   Z←Z[⍋Z[;1];]                                   ⍝Sort by HUC[69]   B←Z[;1]≠¯1↓0,Z[;1][70]   Z←(B/Z[;1]),⍉↑(⊂B) pSUM¨↓[1]0 1↓Z              ⍝Summarize by HUC[71]   Z←Z⍪(⊂'Total'),1↓+⌿Z                           ⍝Take totals[72]   Z←Z[;1],ROUND 100×Z[;2 3 4 5]÷Z[;6 7 8 9]      ⍝Calculate percentages[73]   head←1↓⎕TCHT MTOV MATRIFY 'HUC Lotic Lentic Headwaters Loonrange'[74]   N←(¯2×'_m'≡TOLOWER ¯2↑acores)↓acores[75]   Z TMATOUT N,'_summary.txt'[76]   [77]   V←V2[;2],V,ROUND (V[;2]≠0)×100×÷/V[78]   head←1↓⎕TCHT MTOV MATRIFY 'class cores total percent'[79]   V TMATOUT N,'_bystream.txt'[80]   [81]    ⎕←''[82]   LOG 'ACORESTATS is done.'[83]   →0[84]  [85]  [86]  what:auxiliary[87]  type:table[88]  info:('dslland' 'huc6' range acores 'streams' 'ordersraw' 'streamclass') ('') ('') 0 ''      ⍝Source grid, settings table, result grid, buffer size, and include grid[89]  check:CHECKVAR 'acores range rangeslice tilesize targets'    ∇