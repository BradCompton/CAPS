    ∇ Z←H CONNECT_RESCALE_SUM X;template;kernel;bench;J;I;Q;S;err[1]   ⍝Return scaled kernel volume for connectedness given bandwidth and search ⍺ and kernel, benchmark and template ⍵[2]   ⍝Runs APL version if aplc=1, or C version if aplc=2[3]   ⍝B. Compton/E. Ene, 19 Dec 2008[4]   ⍝19 Nov 2010: this is the old version[5]   ⍝17 Aug 2015: don't crash if template is floating point (still used in TRAVERSE)[6]   ⍝10 Jan 2017: I dealt with floating point template wrong--it lost missing values![7]   [8]   [9]   [10]   kernel bench template ← X × 1  ⍝Enforce copies of variables so we don't muddy passed variables[11]   template←MVREP ⌊template       ⍝Allow floating point template[12]   H S ← H[13]   →(aplc=1)/L2                   ⍝If C version,[14]   →(3=⎕NC'CONNECT_RESCALE_SUMc')/L1  ⍝   If not loaded,[15]   Q←⎕EX 'CONNECT_RESCALE_SUMc'[16]   ⎕ERROR REPORTC 'DLL I4← CAPS_LIB.connect_rescale_scalar(F8,F8,I4,I4,F8,*F8,*F8,*I4,*F8←)' ⎕NA 'CONNECT_RESCALE_SUMc'[17]  ⍝⎕←'CAPS_LIB.connect_rescale_scalar loaded (return code = ',(⍕Q),')'[18]  [19]  L1:I J ← ⍴kernel[20]   Z←1[21]   err Z←CONNECT_RESCALE_SUMc H S I J MV kernel bench template Z[22]   ⎕ERROR REPORTC err[23]   →0[24]  [25]  L2:Z←(+/,(template≠MV)×(kernel≠0)×ZDENSITY S-kernel÷H)÷+/,bench×MV≠template   ⍝Else, APL version    ∇