    ∇ Z←XMLINDEX P;N;A;V;E;S;X;T;Q[1]   ⍝Recursively parse XML tags given parent string ⍵ (call with ⍵=0)[2]   ⍝Globals:[3]   ⍝   xml     XML string, from XMLREAD[4]   ⍝   tags    Tag names, used by XMLFIND[5]   ⍝   i       index into xml[6]   ⍝Returns xml index:[7]   ⍝   [;1] tag string (tag1.tag2.tag3)[8]   ⍝   [;2] value[9]   ⍝   [;3] start of value string (or next tag)[10]  ⍝   [;4] end of value string + 1 (=[;3] for empty values)[11]  ⍝   [;5] vector of indices into tags[12]  ⍝Note: this fast version doesn't allow tags, values, or white space > 100 chars[13]  ⍝B. Compton, 6-9 Nov 2007[14]  [15]  [16]   →(~P≡0)/L1                             ⍝If ⍵=0, we're starting at the beginning[17]   i←1 ⋄ P←'' (⍳0) ⋄ tags←,¨'*' '→'[18]  ⍝⍎(i≥q←1E5)/'(⍕3 ROUND(÷60)×((⍴xml)÷q)×⎕AI[2]-ai),'' minutes'' ⋄ →' ⍝Time test[19]  L1:P Q←P[20]   S←i[21]   V←''[22]   Z←0 5⍴(2⍴⊂'') 0 0 0[23]  [24]  L2:→(i≥⍴xml)/0                          ⍝If at end, exit[25]   E←i←i++/^\xml[i+0,⍳100⌊(⍴xml)-i]∊' ',⎕TCNL,⎕TCHT    ⍝Drop white space[26]   →(i≥⍴xml)/0                            ⍝check for end again[27]   X←xml[i+0,⍳100⌊(⍴xml)-i]               ⍝Pull out reasonable-sized bite[28]   →('<'≠xml[i])/L4                       ⍝If found new tag,[29]   A←TOLOWER 1↓¯1↓(N←X⍳'>')↑X                     ⍝   Get tag[30]   i←i+N[31]   →('?'=1↑A)/L2                          ⍝   If bogus version tag, just ignore it[32]   →('/'=1↑A)/L3                          ⍝   If new tag,[33]   tags←tags,((1+⍴tags)=T←tags⍳⊂A)/⊂A[34]   Z←Z⍪XMLINDEX (P,((0≠⍴P)/'.'),A) (Q,T)          ⍝      recurse[35]   →L2                                    ⍝   Else,[36]  L3:Z←Z⍪P V S E Q                        ⍝      end tag: return[37]   →0[38]  [39]  L4:V←TOLOWER(N←¯1+X⍳'<')↑X              ⍝Else, get value[40]   i←i+N[41]   →L2    ∇