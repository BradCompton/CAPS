    ∇ A SETTINGSMEANS S;T;X;Q;I;Z;T;D;R;loop;test;grids;ffile;M;J;B;C;H;L;Y;V;head;scenarios;include;compare;names;blocksize;block;source;grid;postmetrics;weights;badnames;index;prettymodel;scenarios_;csedir;E;dev;result;groups;noread[1]   ⍝Calculate mean value for each settings variable by landcover type, landscape-wide[2]   ⍝Preprocessing for CSE, the CAPS Scenario Engine; results also used by LCC's CLIMATE metric[3]   ⍝Only done for settings variable listed with a 'T' in model\cse_settings.par[4]   ⍝⍺ and ⍵ are dummies - systems are ignored[5]   ⍝In GIS data, errors lead to some nonzero anthropogenic settings for natural communities--this is bogus.[6]   ⍝Force all natural commmunity means to zero for anthropogenic settings.[7]   ⍝Parameters:[8]   ⍝   blocksize   Block size to use (DON'T set block size in metrics.par--this must be 0)[9]   ⍝   result      partial path and name of result (should be 'model\settingsmeans.txt') -- need this to avoid using temporary model path[10]  ⍝   groups      name of file listing groups to use (default = '': use all landcover types)[11]  ⍝Writes model\settingsmeans.txt, rows are landcover types, and columns are settings variables[12]  ⍝*** NOTE: after running, copy mode\settingsmeans.txt to \csb\model\ ***[13]  ⍝B. Compton, 29 Jun and 2-3 Jul 2012, from METRICMEANS[14]  ⍝8 Jul 2013: do all settings variables, so I can use it for CLIMATE too, and write 0's to anthro settings for natural cells[15]  ⍝2 Aug 2013: use SUBNAME for reading settings grids to make it work better for LCC[16]  ⍝26-7 Aug 2013: add groups option (Entergy announces they will shut down Vermont Yankee!)[17]  ⍝27 Jan 2014: use SETTILE instead of noread←1 nonsense[18]  [19]  [20]  [21]   READPARS ME[22]   V←TABLE pathI PATH 'settings.par'              ⍝Read settings control table[23]   E←~'natural' MATIOTA TOLOWER MIX V[;(TOLOWER ',' MATRIFY head) MATIOTA 'group']        ⍝Mark anthropogenic settings variables to zero out for natural communities[24]   dev←(0=⍴groups)/(0 'groups.par' LOOKUP 1 2⍴0,'developed')[;1],⊃,/LOOK¨FRDBL¨↓','MATRIFY exclude    ⍝Developed communities (use only if no groups)[25]   loop←test←noread←0 ⋄ grids←0 0⍴''              ⍝Silly junk for BLOCK, etc.[26]   ffile←'SETTINGSMEANS'[27]   BLOCK 2⍴blocksize[28]   SETTILE[29]  [30]   L←landcover[31]   :if 0≠⍴groups                                  ⍝If groups is supplied,[32]      L←TABLE pathI PATH groups                   ⍝   Read groups file[33]      L←(⍳1↑⍴L),L                                 ⍝   and assign pseudo-landcover classes to groups for internal use[34]   :end[35]  [36]   Z←((1↑⍴L),(1↑⍴V),2)⍴0                          ⍝n and sum for each landcover type and settings variable[37]  [38]  [39]  ⍝For each tile,[40]  L1:LOG '   Tile ',(⍕block[4]),',',(⍕block[5]),' of ',(⍕block[6]),',',(⍕block[7]),' (',(⍕ROUND 100×(+/(block[4 5]-1,0)×block[7],1)÷×/block[6 7]),'%)'[41]   BREAKCHECK[42]   X←READ pathG PATH 1⊃A                          ⍝For each tile: read landcover[43]   →(^/,X=MV)/L3[44]   :if 0≠⍴groups                                  ⍝If groups is supplied,[45]      Q←LOOK¨L[;2]                                ⍝   remap landcover classes to group #s[46]      Q←(⊃,/Q),[1.5](⊃,/⍴¨Q)/L[;1][47]      X←(Q[;2],MV)[Q[;1]⍳X]                       ⍝   communities not in any groups go to missing[48]   :end[49]   B←,X≠MV[50]  [51]   J←0[52]  L2:→((1↑⍴V)<J←J+1)/L3                           ⍝   For each settings variable,[53]   Y←READ pathN SUBNAME ⊃V[J;1]                   ⍝      Read settings variable[54]   Q←(Q[;2]≠MV)⌿Q←(B/,X),[1.5]B/,Y                ⍝      landcover, settings variable[55]   Q←Q[⍋Q;][56]   C←Q[;1]≠¯1,¯1↓Q[;1][57]   Q←(C/Q[;1]),(C pSUM (⍴C)⍴1),[1.5]C pSUM Q[;2]  ⍝      Landcover, n, sum[58]   Z[T;J;]←Z[T←L[;1]⍳Q[;1];J;]+Q[;2 3]            ⍝      add to result[59]   →L2[60]  [61]  L3:→(0≠NEXTBLOCK)/L1                            ⍝Next tile[62]   Z←(B←∨/0≠Z[;;1])⌿Z                             ⍝Drop communities that never occur[63]   Z←Z[;;2] DIV Z[;;1]                            ⍝Take mean of settings variables for each community[64]   Q←~(⊃,/LOOK¨(B/L[;2]))∊dev                     ⍝Natural communities[65]   Z[Q/⍳⍴Q;E/⍳⍴E]←0[66]   head←'community',⊃,/⎕TCHT,¨V[;1][67]   ((B/L[;2]),6 ROUND Z) TMATOUT T←path PATH result[68]   LOG 'Results written to ',T ⋄ FLUSH[69]   →0[70]  [71]  [72]  what:data prep[73]  type:exclusive                                  ⍝Don't allow any other metrics to run[74]  info:('land') ('') ('') (0) 'luwet'             ⍝Source grid, settings table, result grid, and buffer size[75]  CHECKVAR 'blocksize result groups'[76]  check:CHECKBLOCK 1                              ⍝Make sure block setting in metrics.par is 0 with no scenarios - must run as a single process    ∇