    ∇ Z←N INTERPOLATE X;I;J;P;S;M;B;Q;D;C;T;L[1]   ⍝Interpolate within patch among ⍺[1] sampled points in grids ⍵, using power ⍺[2] for distances[2]   ⍝Sister function to SAMPLES for speeding up Habit@ funs.  See SAMPLES for details.[3]   ⍝⍺[1], number of sampled points, MUST be ≤ minimum set by SAMPLES, or this will crash and you'll deserve it![4]   ⍝Globals set by SAMPLES: patches, samples[5]   ⍝Argument is a single grid or vector of grids[6]   ⍝**** NOTE: If you set ⍵[5]=1 in SAMPLES (don't stratify), and you have a fairly low sampling density (e.g., [7]   ⍝   SAMPLES (esmplus MASKWITH lrmask extramask) density 3 0 1[8]   ⍝this function will take bloody forever! ****    (update: 1/3 of forever now)[9]   ⍝B. Compton, 30 Aug 2012[10]  ⍝4 Sep 2012: if sampling all cells, don't bother; disclose single argument at end[11]  ⍝7 Sep 2012: dumb bug[12]  ⍝12 Sep 2012: speed up (a bit over 2x) by indexing sample database[13]  ⍝21 Feb 2014: speed way up (ca. 6x) in big patches by only looking within a window[14]  ⍝25 Feb 2014: take more samples if ties[15]  ⍝17 Apr 2014: Skip unsampled patches, use 5 points instead of 3--3 leads to discontinuities! And finally drop missing samples.[16]  ⍝18 Apr 2014: it's now possible for samples to be all 0--check for that[17]  ⍝28 Apr 2014: go to inverse distance squared (default) for weighting, with power as ⍺[2][18]  ⍝29 Oct 2014: save interppts for buffer report in HABRUN[19]  ⍝18 Dec 2015: use indexing to get a decent speedup; drop samples that are missing for any variable and pull this out of loop, final speedup = 2.8x for one-patch situation (the slowest)[20]  ⍝21 Dec 2015: bail out if no samples in tile.  Solstice...all the candles are lit.[21]  ⍝25 May 2017: oh shit...between Dec 17-21, 2015, I did a keyboard flub that set J←E, where E was global and undefined. No trouble, because I'd set it to 0 unlocalized in ∆GRIDINIT. Two fuckups do make a right.[22]  [23]  [24]  [25]   ⍎(0=⎕NC'N')/'N←5'          ⍝Default: interpolate among 5 points[26]   N←2↑N,2[27]   interppts←N[1][28]   →(~patches≡1)/L0           ⍝If we didn't sample,[29]   Z←X                        ⍝   there's nothing to do[30]   →0[31]  [32]  L0:⍎(C←1=≡X)/'X←,⊂X'        ⍝Treat single matrix as vector of matrices[33]   Z←X←↑X[34]   S P ← samples patches      ⍝Globals from SAMPLES[35]   →((S≡P)∨(^/,S=0)∨^/,P=0)/L9⍝Bail if all cells were sampled or no cells were sampled or everything is missing or developed[36]   M←(B/,P),(B/,⍉(⌽⍴P)⍴⍳1↑⍴P),(B/,(⍴P)⍴⍳1↓⍴P),⍉(B←,S≠0)/((1↑⍴X),×/1↓⍴X)⍴X   ⍝Patch number, row, column, and values for all samples[37]   M←(^/MV≠0 3↓M)⌿M           ⍝drop samples that are missing for any variable[38]   →(0∊⍴M)/L9                 ⍝bail out if no samples in tile[39]   M←M[⍋M[;1];]               ⍝Sort samples and build index[40]   B←M[;1]≠¯1,¯1↓M[;1][41]   D←(B/M[;1]),(¯1++\1,¯1↓D),[1.5]D←B pSUM (⍴B)⍴1[42]  [43]   I←0[44]  L1:→((1↑⍴P)<I←I+1)/L9                   ⍝For each row,[45]   BREAKCHECK[46]   DOT[47]   →(^/P[I;]=0)/L1[48]   J←0[49]  L2:→((1↓⍴P)<J←J+1)/L1                   ⍝   For each column,[50]   →((S[I;J]≠0)∨(P[I;J]=0)∨~P[I;J]∊D[;1])/L2   ⍝      skip if cell was sampled, if there's no patch here, or if patch wasn't sampled[51]   Q←D[T;2]+⍳D[T←D[;1]⍳P[I;J];3]          ⍝      index into samples for our patch[52]   :if 100<⍴Q                             ⍝      If we're in a big patch,[53]      L←⍉I J∘.+¯1 1×density×3             ⍝         window around potential samples[54]      Q←(M[Q;2]≥L[1;1])/Q                 ⍝         whittle down list of neighbors[55]      Q←(M[Q;3]≥L[1;2])/Q[56]      Q←(M[Q;2]≤L[2;1])/Q[57]      Q←(M[Q;3]≤L[2;2])/Q[58]   :end[59]   Q←M[Q;][60]   Q[;1]←(+/(Q[;2 3]-((1↑⍴Q),2)⍴I,J)*2)*.5⍝      distance to each sample[61]   :if N[1]<1↑⍴Q                          ⍝      if more than N samples,[62]      Q←(Q[;1]≤Q[(⍋Q)[N[1]];1])⌿Q         ⍝         pick n closest samples (or more if ties)[63]   :end[64]   Q[;1]←Q[;1]÷+/Q[;1]←÷Q[;1]*N[2]        ⍝      weights: inverse distance squared[65]   Z[;I;J]←+⌿Q[;3↓⍳1↓⍴Q]×⍉(⌽0 ¯3+⍴Q)⍴Q[;1]⍝      interpolate for each variable[66]   →L2[67]  [68]  L9:Z←⊂[2 3]Z[69]   ⍎C/'Z←⊃Z'    ∇