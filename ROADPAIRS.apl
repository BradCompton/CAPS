    ∇ Z←M ROADPAIRS X;I;U;J;Q;A;D;C;N;V;B;L;R;Y[1]   ⍝Find pairs of opposite travel lanes on divided expressways for CL I roads from road blobs ⍵, max distance ⍺ (in cells)[2]   ⍝B. Compton, 10 and 14-16 Oct 2014 (from old ROADPAIRS, the half-finished metric version)[3]   ⍝20-21 Oct 2014: write diagnostic roadpairs.txt[4]   [5]   [6]   [7]    X←0,(0⍪(Z←X)⍪0),0[8]    U←((,X≠0)/,X),INDICES X[9]    B←U[;1]≠¯1↓0,(U←U[⍋U;])[;1][10]   U←(B⌿U[;,1]),B pMEAN U[;2 3]               ⍝Unique blobs and their centroids[11]   →(0∊⍴U)/0[12]   D←(+/¨((↓U[;2 3])∘.-↓U[;2 3])*2)*.5        ⍝Distances among blobs[13]   D←(D≤M)×D←D×(⍳1↑⍴D)∘.>⍳1↑⍴D                ⍝Just want lower triangle of distances, only those that are close enough[14]   D←U[INDICES D;1],(,D≠0)/,D                 ⍝Pairs of nearby blobs and distances between them[15]  [16]   Q←(1⌽X)⍪(¯1⌽X)⍪(1⊖X),[.5]¯1⊖X              ⍝Find adjacencies[17]   A←(X≠0)^∨⌿(Q≠(⍴Q)⍴X)^Q≠0[18]   A←UNIQUEUNZ¨(,A)/,↓[1]X⍪Q[19]   →(0∊⍴A)/0[20]   A←↑(⌈/⊃,/⍴¨A)↑¨A                           ⍝List of blobs (1st column) and blobs adjacent to each (subsequent columns)[21]   A←A[⍋A;][22]   A←(∨/A≠0⍪¯1 0↓A)⌿A                         ⍝Unique blobs[23]  [24]  [25]  ⍝Now look for adjacenct blobs (never paired) and 2nd-order adjacencies (paired if V-shaped, not if I-shaped)[26]   B←(1↑⍴D)⍴0[27]   I←0[28]  L1:→((1↑⍴D)<I←I+1)/L2                       ⍝For each pair,[29]   FLUSH[30]   Q←0 1↓(A[;1]∊D[I;1])⌿A                     ⍝   Blobs adjacent to #1[31]   →(~B[I]←~D[I;2]∊Q)/L1                      ⍝   Deselect if #1 is adjacent to #2[32]   R←0 1↓(A[;1]∊D[I;2])⌿A                     ⍝   Blobs adjacent to #2[33]   L←(,(Q≠0)^Q∊R)/,Q                          ⍝   Intermediate blob when 2nd order adjacency[34]   →(0∊⍴L)/L1                                 ⍝   If second order adjacncy,[35]   L←((I≠⍳1↑⍴D)^2=+/D[;1 2]∊D[I;1 2],L)/D[;3] ⍝   Legs including intermediate: AB and BC[36]   B[I]←D[I;3]<⌊/L                            ⍝   If AC<AB and AC<BC, configuration is a V-shaped and we pair them[37]   →L1[38]  [39]  L2:D←B⌿D                                    ⍝Remove adjacent blobs and I-shaped 2nd order adjacents[40]   D←D[⍋D[;3];]                               ⍝Sort by distance to put closest pairs first[41]   Y←0 4⍴0[42]  [43]  L3:→(0∊⍴D)/L9                               ⍝Until we run out of pairs (favor closest pairs),[44]   Z←D[1;1] MVREP Z (Z=D[1;2])                ⍝   Set cells of 2nd blob in pair to 1st[45]   Y←Y⍪D[1;1],(U[U[;1]⍳D[1;1 2];2 3]),D[1;3]  ⍝   Centroids of pair & distance[46]   D←(~∨/D[;1 2]∊D[1;1 2])⌿D                  ⍝   Remove other potential pairs involving either of these blobs[47]   →L3[48]  [49]  L9:Y[;2 3]←Y[;2 3]-1[50]   Y←((^/Y[;2 3]≥block[3])^^/Y[;2 3]≤((1↑⍴Y),2)⍴block[1 2]+block[3]+1)⌿Y[51]   Y[;2 3]←↑1 FINDPOINT¨↓Y[;2 3][52]   Y[;4]←Y[;4]×cellsize[53]   Y LOCKWRITE pathW,'roadpairs.txt'    ∇