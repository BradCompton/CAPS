    ∇ REGIONALPOST;blocksize;mixmetrics;samples;qtiles;I;postby;X;T;override_metrics;source;results;a;threshold;badnames;landcover;checkland;grid;names;weights;warn;alt;block;ifchat;pstmetrics;logfile;prettymodel;head;usebench;benchpath;M;postmetrics;refgrid;mask;buffer;landcover;P;L;regionalpost;R;R_;B;regionmaps;Q;override_pars;O;mixonly;pass1bench;J[1]   ⍝CAPS post-processing by regions for huge landscapes[2]   ⍝Parameters are all in parameters.par, under [post][3]   ⍝Parameters:[4]   ⍝   (all of the usual parameters for POST)[5]   ⍝   regionpath      shared path to regionmaps[6]   ⍝   regionmaps      list region maps used for regional post-processing[7]   ⍝                   ('full' means do full extent; no regionmap needed for it)[8]   ⍝   pass1bench      if yes, use existing benchmarks for the 1st pass only; overrides usebench (for Yinan)[9]   ⍝Note: POST uses inputs_metrics.par, not inputs.par, and doesn't use results.par[10]  ⍝Note: must run REGIONTILE after creating regions and if region grids change[11]  ⍝B. Compton, 17-22 Mar 2014 (from POST)[12]  ⍝28 Mar 2014: deal with regionmap(postfix)[13]  ⍝8 Jan 2014: don't init when called from CAPS[14]  ⍝20 May 2015: add pass1bench[15]  ⍝27 May 2015: frisk properly[16]  ⍝11 Jun 2015: still need [callbench], even if pass1bench; use existing project name as prefix[17]  ⍝6 Feb 2018: don't make subpaths for benchmark files, as we don't use them[18]  [19]  [20]  [21]   regionalpost←1                             ⍝This is regional POST[22]   :if 0=⎕NC 'calledfromcaps'[23]   :orif ~calledfromcaps[24]      INIT                                    ⍝Only do this if called manually[25]   :end[26]  [27]   →(1↑L←1 POSTFRISK 'post')/L9[28]   regionmaps←(~T∨¯1⌽T←≠\regionmaps∊'()')/regionmaps  ⍝Strip (postfix) from regionmaps - we'll get it back in CALLBENCH/CALLSCALE[29]  [30]   head←2⊃prettymodel[31]   (3⊃prettymodel) CMATOUT 1⊃prettymodel      ⍝Write model.csv[32]   LOG 'Community model written to ',1⊃prettymodel[33]   M←1[34]  [35]  ⍝Do mixwater on metrics that need it[36]   :if mixmetrics[37]      MIXMETRICS blocksize[38]      →mixonly/0                              ⍝If mixonly, we're all done[39]      M←0[40]   :end[41]  [42]  ⍝Post-process metrics[43]   R←1 ⎕TCHT MATIN pathT,'regiontilemap',(⍕blocksize),'.txt'      ⍝Read the region tile map (created by REGIONTILE)[44]   R_←FRDBL¨↓⎕TCHT MATRIFY head[45]   R[;T]←⎕FI¨(⊂'.,. ') TEXTREPL¨1↓¨R[;T←R_ COL 'regions']         ⍝Unpack regions for each tile[46]   M←(TOLOWER¨FRDBL¨↓MATRIFY regionmaps),[1.5]⊂,1                 ⍝Names of regionmaps and column for list of regions[47]  [48]   B←1[49]   :if 0≠⎕NC'usebench'                        ⍝If usebench supplied,[50]   :andif ~0∊⍴usebench[51]      B←⍎'.←.=' TEXTREPL ⍕usebench            ⍝   if expression is true, create benchmark; otherwise, we'll use previously generated one[52]   :end[53]  [54]   J←'REGIONALPOST'[55]   :if 0≠⎕NC'project'[56]      J←project,((0≠⍴project)/'-'),J[57]   :end[58]   O←'[caps]|project = ''',J,'''|[callscale]|'[59]   X←0 4⍴0[60]   :if B                                      ⍝If creating benchmarks,[61]      :for I :in ⍳1↑⍴M                        ⍝   For each regionmap,[62]         :if 'full'≡FRDBL ⊃M[I;1][63]            :continue[64]         :end[65]         Q←⊃,/(R[;1]≡¨M[I;1])⌿R[;4]           ⍝      All regions in regionmap[66]         Q←((Q⍳Q)=⍳⍴Q)/Q[67]         M[I;2]←⊂Q[⍋Q][68]      :end[69]  [70]      Q←((⊃,/⍴¨M[;2])/M[;1]),[1.5]⊃,/M[;2]    ⍝   Table arguments: regionmap, region[71]      head←1↓⎕TCHT MTOV MATRIFY 'id regionmap region'[72]      P←FRDBL,'ZI2' ⎕FMT 1↓¯1↓⎕TS             ⍝   Date stamp on benchmark table[73]      ((⍳1↑⍴Q),Q) TMATOUT T←pathP,'benchtable',P,'.txt'[74]      O←O,'[callbench]|targets = ''',T,'''|'  ⍝   need to pass name of benchmark table[75]      :if ~pass1bench                         ⍝   Unless pass1bench is set,[76]         X←1 4⍴'CALLBENCH' 'yes' '1' 1        ⍝      a sleazy trick: I'm passing pass # (and regionmap for CALLSCALE in the groups column)[77]         X←X⍪'@wait' '' '' 0[78]      :end[79]   :end[80]  [81]   X←X⍪(((1↑⍴M)⌿1 2⍴'CALLSCALE' 'yes'),(⊂'1 '),¨M[;1],¨' '),blocksize[82]  [83]   X←X⍪'@wait' '' '' 0[84]  [85]   :if B                                      ⍝If creating benchmarks, second pass,[86]      X←X⍪'CALLBENCH' 'yes' '2' 1[87]      X←X⍪'@wait' '' '' 0[88]   :end[89]  [90]   X←X⍪(((1↑⍴M)⌿1 2⍴'CALLSCALE' 'yes'),(⊂'2 '),¨M[;1],¨' '),blocksize[91]   override_metrics←X[92]   override_pars←('.|.',⎕TCNL) TEXTREPL O[93]  [94]   MAKEDIR T←pathE PATH benchpath             ⍝Make sure we have a benchmark path[95]  [96]   CAPSx[97]   ⎕←'REGIONALPOST launched.'[98]   →0[99]  [100] L9:⎕ERROR 'Errors launching POST (See ',logfile,', line ',(⍕L[2]),' for details)'[101] [102] [103] [104] info:('') ('') ('') (0)         ⍝Need for include[105] check:CHECKVAR 'postland landtypes source results model mixmetDrics postby posti checkland friskonly threshold qtiles samples blocksize alt resultpath pass1bench usebench benchpath mixonly regionpath regionmaps futuregrids'    ∇