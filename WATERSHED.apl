    ∇ WATERSHED P;M;W;lc;V;I;Z;resist;lc;flow;buffer;block;transparent;maskv;imperv;inf;suminf;mininf;size;metrics;T;whabloss_s;whabloss_v;whabloss_iv;salt_s;salt_v;salt_iv;sediment_s;sediment_v;sediment_iv;nutrients_s;nutrients_v;nutrients_iv;imperv_s;imperv_v;imperv_iv;impound_s;impound_v;impound_iv;roadx_s;roadx_v;roadx_iv;damint_s;damint_v;damint_iv;iv;v;progress;S;head;U;subw;bigwatersheds;ocean;compact_s;compact_v;compact_iv;tmax_s;tmax_v;tmax_iv;humidity_s;humidity_v;humidity_iv;ppt_dec_s;ppt_dec_v;ppt_dec_iv;sand_s;sand_v;sand_iv;eastness_s;eastness_v;eastness_iv;impervi_s;impervi_v;impervi_iv;damstore_s;damstore_v;damstore_iv;withdraw_s;withdraw_v;withdraw_iv;discharge_s;discharge_v;discharge_iv;V1;V2;testW;teststation;streams;tmin_s;tmin_v;tmin_iv;precip_s;precip_v;precip_iv;impervini_s;impervini_v;impervini_iv;dischargeni_s;dischargeni_v;dischargeni_iv;septic_s;septic_v;septic_iv;cropland_s;cropland_v;cropland_iv;cranberry_s;cranberry_v;cranberry_iv;forest_s;forest_v;forest_iv;fowet_s;fowet_v;fowet_iv;deepmarsh_s;deepmarsh_v;deepmarsh_iv;urbanopen_s;urbanopen_v;urbanopen_iv;lowland_s;lowland_v;lowland_iv;J;Q;capeless[1]   ⍝CAPS 3.0 watershed metrics[2]   ⍝Call consists of (1) Watershed #, (2) full or subwatershed, (3) scenario name,[3]   ⍝   (4) common input grids, (5) settings grids, (6) repeating 4-element list of[4]   ⍝   metric, group, result grids and metric-specific input grids[5]   ⍝Tiny watersheds are done in companion metric WATERSHEDB - see comments there on tinywatershed parameters![6]   ⍝Subwatersheds are run separately.  Warning: single-thread runs may hang up on nested subwatersheds.[7]   ⍝B. Compton, 13-18 Aug 2009[8]   ⍝18-22 Feb 2011: completely rewrite for CAPS 3.0, using QSHED and D8 flow. Protestors retake Pearl Roundabout in Bahrain after government massacres...revolution in Libya[9]   ⍝24 Feb 2011: minor changes; don't do tiny watersheds[10]  ⍝27 Jan 2012: adjust if we're against the north or west edge of the grid[11]  ⍝17-23 May 2012: implement subwatersheds[12]  ⍝4 Jun 2012: exclude ocean cells[13]  ⍝14 Jun 2012: initialize subwatersheds.txt so we don't get burned by old values[14]  ⍝7 Aug 2012: push a few lines into MER2CELLS[15]  ⍝30 Apr 2013: Call to INCLUDE asks to treat maskv as binary[16]  ⍝4 Jun 2013: allow multiple classes in exclude, comma-separated[17]  ⍝12-13 Jun 2013: if subwatershed is excluded, write zeros to subwatershed file so parent watershed doesn't wait forever[18]  ⍝2 Mar 2015: if metric has a part 2, call it to finish up results in Pass 3 (for HA and NPK) + query metric for variable list and allow multiple variables per metric[19]  ⍝19 Mar 2015: pass flattened metric variables lists to QSHED[20]  ⍝19 May 2015: Make sure nodata cells in landcover are propagated[21]  ⍝4 Jun 2015: work with metrics that have multiple results (NPK)[22]  [23]  [24]  [25]  ⍝*** Important note: if you stop a watershed run in the middle, threads waiting for a subwatershed will keep waiting forever and need to be killed.[26]  ⍝*** Another note: if you use Anthill to RERUN this metric, you may be burned by old values in subwatersheds.txt--delete it first![27]  [28]  [29]  [30]   READPARS ME[31]   buffer←1[32]   M←0 1 TABLE pathT PATH bigwatersheds           ⍝Read big watershed table[33]   W←U←M[(↓M[;1 2])⍳⊂P[1 2];]                     ⍝Watershed table just for current watershed # and watershed/subwatershed[34]   M←((M[;2]=2)^(M[;3 4]^.≥W[5 6]-cellsize)^M[;5 6]^.≤W[7 8]+cellsize)⌿M      ⍝Subwatersheds that fall within this watershed's box[35]   M←(M[;1 2]∨.≠W[1 2])⌿M                         ⍝Exclude this watershed, though[36]   subw←M[;1],(↑FINDCELL¨↓M[;3 4]),M[;3 4]        ⍝Subwatersheds (potentially) in this watershed: watershed#, cell and point locations[37]  [38]   V←(((¯5+⍴P)÷4),4)⍴5↓P                          ⍝Matrix of metric, system, result grids, metric-specific input grids[39]   transparent←1[40]   metrics←WMETRICVARS V[;1][41]  [42]   BREAKCHECK[43]   W[5 6 7 8]←MER2CELLS W[5 6 7 8]                ⍝Convert MER to cells[44]   W[3 4]←buffer+1+(FINDCELL W[3 4])-W[5 6]       ⍝Watershed outflow in terms of grid[45]   block←¯1,W[5 6 7 8],buffer                     ⍝set block to our current window[46]   subw[;2 3]←buffer+1+subw[;2 3]-((1↑⍴subw),2)⍴W[5 6]     ⍝subwatersheds in terms of current window[47]  [48]  [49]  ⍝First: read input data & check mask[50]   lc←READ pathG PATH 1⊃4⊃P                       ⍝Read landcover[51]   lc←MVREP lc (lc∊⊃,/LOOK¨FRDBL¨↓','MATRIFY ocean) ⍝Ocean cells → MV; this will blank ocean out of flow & prevent errors when outflows cross islands & capes[52]  [53]   streams←1=READ pathG PATH 2⊃4⊃P                ⍝Read streams grid...we'll run for stream centerlines...[54]   maskv←streams∨0<READ pathG PATH 3⊃4⊃P          ⍝and nonzero/missing cells in mixwater[55]   →(0∊⍴('*',0 0 0 1) INCLUDE lc)/L8              ⍝Which cells to run metrics for? Pretty much all of them, including developed!  Bail if all masked out; otherwise ignore mask[56]   flow←READ pathG PATH 4⊃4⊃P                     ⍝Flow[57]   flow←0 MVREP flow (lc=MV)                      ⍝if it's not in landcover, we don't want to flow through it![58]   resist←0 MVREP READ pathG PATH 5⊃4⊃P           ⍝Resistance (missing → zero for robustness)[59]  [60]  [61]  ⍝Pass 1: Build metric source values for each cell[62]  ⍝Note: if I run out of memory for huge watersheds, we'll do Passes 1-3 for each metric[63]   I←0[64]  L1:→((1↑⍴V)<I←I+1)/L2                           ⍝For each metric,[65]   ⍎(⊃V[I;1]),' ''',(⍕⊃V[I;4]),''''               ⍝   Call metric to set metric_s to metric source values[66]   →L1[67]  [68]  [69]  ⍝Pass 2: build one-time watershed influence/metrics grids (QSHED)[70]  L2:⍝⎕←(W[2]⊃'Watershed ' 'Subwatershed '),(⍕W[1]),'...' ⋄ FLUSH[71]   BREAKCHECK[72]   T←⍎¨(FLATTEN metrics[;3 4]),¨⊂'←(⍴lc)⍴MV'      ⍝Intermediate results all get MV[73]   inf←suminf←mininf←size←(⍴lc)⍴MV[74]   V1←(FLATTEN metrics[;2]),[1.5]FLATTEN metrics[;3]  ⍝Make variable lists for QSHED [75]   V2←(FLATTEN T/metrics[;2]),[1.5]FLATTEN (T←⊃,/⍴¨metrics[;4])/metrics[;4][76]  [77]   QSHED W[3 4],0                                 ⍝Build resistant watershed from watershed outflow cell[78]  [79]   size←MVREP size (lc=MV)                        ⍝Make sure nodata cells in landcover are propagated[80]   inf←MVREP inf (lc=MV)[81]  [82]   T←⎕EX¨FLATTEN metrics[;2]                      ⍝We're done with source values, so okay to delete them[83]  [84]   →(P[2]≠2)/L5                                   ⍝If this is a subwatershed,[85]   S←P[1],U[3 4],suminf[W[3];W[4]],mininf[W[3];W[4]],size[W[3];W[4]]  ⍝   shared values for outflow cell[86]   I←0[87]  L3:→((1↑⍴V)<I←I+1)/L4                           ⍝   For each metric, get metric-specific values for outflow cell[88]   ⍎'S←S,',⍕'(',¨(FLATTEN metrics[I;3 4]),¨⊂'[',(⍕W[3]),';',(⍕W[4]),'])'[89]   →L3[90]  L4:head←''[91]   S LOCKWRITE pathI PATH 'subwatersheds.txt'     ⍝      Write intermediate results for outflow cell to subwatersheds file[92]  [93]  [94]  [95]  ⍝Pass 3: for each metric, calculate result from QSHED's intermediate results[96]  L5:I←0[97]  L6:→((1↑⍴V)<I←I+1)/0                            ⍝For each metric[98]   :if 3=⎕NC T←TOUPPER (⊃metrics[I;1]),'2'        ⍝   If there's a part 2 for this metric,[99]      ⍎'Z←',T                                     ⍝      Call part 2 to finish up metric[100]  :else                                          ⍝   Else, we just have to calculate the standard results,[101]     ⍎'v iv ←',⍕(metrics[I;3 4])                 ⍝      Cumulative metric value and cumulative influenced metric value[102]     Z←(iv-mininf×v) DIV suminf-mininf×size[103]  :end[104]  :if 1<≡Q←⊃V[I;3]                               ⍝   If multiple results,[105]     :for J :in ⍳⍴Q                              ⍝      For each result,[106]        (MVREP (J⊃Z) (inf=MV)) WRITE pathR PATH J⊃Q ⍝         write result grid    [107]     :end [108]  :else                                          ⍝   Else, single result[109]     (MVREP Z (inf=MV)) WRITE pathR PATH Q       ⍝      Write result grid[110]  :end[111]  →L6[112] [113] L8:→(P[2]≠2)/0                                  ⍝Watershed is all masked, so bail out.  If this is a subwatershed,[114]  S←S←P[1],(⌊1 FINDPOINT W[3 4]),(3+2×1↑⍴V)⍴0    ⍝   we'll write all zeros to the subwatershed file[115]  head←''[116]  S LOCKWRITE pathI PATH 'subwatersheds.txt'[117]  →0[118] [119] [120] [121] what:CAPS watershed[122] info:((⊂'land'),((⊂pathS) PATH¨'streams' 'mixwater' 'flow'),⊂'wresist') ('') ('') (1) 'include'      ⍝Source grid, settings table, result grid, buffer size, and include grid[123] check:CHECKVAR 'bigwatersheds ocean'[124] check:1 CHECKCOVER 'ocean'[125] check:pathT CHECKFILE bigwatersheds[126] init:pathI PATH 'subwatersheds.txt'    ∇