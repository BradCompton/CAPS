    ∇ IJ DIGDITCHES F;Q;P;kernel;curvature;threshold;invert;clip;rcodepath;show;R;X;Z;clockpars;S;linepars;ditchpars;P2;amlpath;modifier;T;finalpath;ref;tile;W;L;maxiter;edgedrop;filter;dropponds[1]   ⍝Do entire salt marsh ditch-finding process for geoTIFF ⍵, tile row and column ⍺[2]   ⍝Called by metric DODITCHES for a particular tile[3]   ⍝Tons of parameters are set within code, below[4]   ⍝B. Compton, 5-13 Dec 2016[5]   ⍝16 Dec 2016: write nodata outside of salt marshes; deal properly for tiles with no ditches, or ditches only in buffer[6]   ⍝22 Dec 2016: use tile#, not IJ, for shapefile--it makes debugging easier; push tile shapefiles to subdirectory b/c arc sucks[7]   ⍝   and set maxiter to 5, so we don't get bogus lines in big open water that's mapped as salt marsh[8]   ⍝3-6 Jan 2016: add edgedrop and filter and dropponds[9]   [10]  [11]   [12]   INIT[13]   CONFIG[14]   amlpath←'x:\aml\'[15]   [16]   modifier←''                ⍝add to result name (for multiple test runs in same directory)[17]  ⍝ finalpath←'d:\LCC\ditches2\newtest4\'    [18]   finalpath←'Y:\LCC\GIS\Work\MarshLiDAR\results\'                 ⍝Where to put final vector & grid results[19]   ref←'z:\LCC\GIS\Work\Landcover\ESMplus\ner_phase3\esmplus_es'   ⍝Reference grid (not mosaic!)[20]   tile←100                   ⍝tiles are 100×100 30 m cells    [21]  [22]   W←((4⍴¯15 15)+(FINDPOINT 1+tile×IJ-1),FINDPOINT 1+tile×IJ)[1 4 3 2][23]   P←STRIPPATH F[24]   MAKEDIR finalpath,'shapefiles\'[25]   [26]  ⍝Step 0. Kill old results.[27]  [28]   ⎕←'Killing leftover results from any previous runs...' ⋄ FLUSH[29]   [30]   Q←'&amlpath ',amlpath[31]   Q←Q OVER '&r kill lidar_1 lidar_2 lidar_3 lidar_4 lidar_5 lidar_6 lidar_7 lidar_8 lidar_9 streams lines '[32]   Q←Q OVER 'del ',finalpath,'shapefiles\D',(STRIP ¯1↓P),'.*'[33]   Q←Q OVER 'del ',finalpath,'kern.tif filter.tif'[34]   (MTOV Q) ARC P[35]  [36]   [37]  ⍝Step 1. Use skeletonize() in R to make skeleton from TIFF[38]  [39]   ⎕←'Calling skeletonize() in R...' ⋄ FLUSH[40]  [41]   kernel←'TRUE'              ⍝Use kernel approach to highlight ditches?[42]   curvature←'FALSE'          ⍝Use total curvature approach (not implemented)?[43]  ⍝ threshold←0.5              ⍝Threshold for binarizing. Original--captures a lot, but too many errors of omission, it seems[44]   threshold←0.1              ⍝Threshold for binarizing[45]   invert←'TRUE'              ⍝If true, ditches are low values[46]   clip←'numeric()'           ⍝Clip to test area?[47]  ⍝ clip←'c(100,100,1400,1400)' [48]   show←'FALSE'               ⍝Show images during process (this slows things way down)[49]   maxiter←10                 ⍝Limit iterations to prevent creating bogus lines through large areas of open water mapped as salt marsh[50]                              ⍝Setting this too small prevents identifying wide ditches; too high results in bogus edge ditches next to nodata thx to misalignment[51]   edgedrop←10                ⍝Drop n cells from nodata edges to prevent bogus ditches in open water at stream and pond edges[52]   filter←'c(20,0.2,20)'      ⍝Filter the results: if circlular focal mean (radius of 20) ≥ 0.20, drop cells within 20 m--it must be noise.[53]   dropponds←'c(1,5000)'      ⍝Drop ponds ≥ 5000 m*2, using 1 digit[54]  [55]   [56]  ⍝ rcodepath←'g:\R\'[57]   rcodepath←'x:\rpackages\'[58]  [59]   P2←'.\./' TEXTREPL P[60]   F←(STRIP F),'.',STRIPEXT F[61]   S←(((⍴T)⌊13-2+⍴,modifier)↑T←STRIP F),modifier   ⍝Make sure result names aren't too long[62]   Q←F,' ',(S,'_1'),' ',P2,' ',kernel,' ',curvature,' ',(⍕threshold),' ',invert,' ',clip,' ',show,' ',(⍕maxiter),' ',(⍕edgedrop),' ',filter,' ',dropponds[63]   1 ⎕CMD rpath,' ',rcodepath,'do.skeletonize.RData --sdi --args ',Q      ⍝Call skeletonize() in R[64]  [65]  [66]  ⍝Step 2. Read grid & clockface[67]  [68]   ⎕←'Clockfacing...' ⋄ FLUSH[69]  [70]  ⍝ clockpars←33               ⍝Clockfacing parameters: window, hit proportion, and cell thresholds. Be more strict....[71]   clockpars←50 0.5 1         ⍝Clockfacing parameters: window, hit proportion, and cell thresholds[72]  [73]   Q←clockpars CLOCKFACE (S,'_1'),' ',(S←P,S),'_2'[74]   →(~Q)/L8                   ⍝Bail out if no ditches[75]  [76]   [77]  ⍝Step 3. Convert to lines in Arc[78]   [79]   ⎕←'Converting to lines...' ⋄ FLUSH[80]   [81]   linepars←3 4               ⍝Line conversion parameters: thickness for gridline, weed tolerance for generalize[82]   ⍝Thickness of 3 or higher crashes in tile 82106[83]   ⍝But 2 crashes in lots of tiles too...ugh[84]   [85]   Q←'&amlpath ',amlpath[86]   Q←Q OVER 'gridline ',(S,'_2'),' ',(S,'_3'),' positive thin nofilter sharp # ',⍕linepars[1][87]   Q←Q OVER 'generalize ',(S,'_3'),' ',(S,'_4'),' ',⍕linepars[2][88]   Q←Q OVER '&r getstreams ',(S,'_4'),' ',S,'_5'[89]   (MTOV Q) ARC P[90]   [91]   [92]  ⍝Step 4. Find ditches[93]  [94]   ⎕←'Finding ditches...' ⋄ FLUSH[95]   [96]  ⍝ ditchpars←25               ⍝Ditch-finding parameters: minimum ditch length, tolerance.  Original, picks up too many curved segments[97]   ditchpars←75 5             ⍝Ditch-finding parameters: minimum ditch length, tolerance. Too short leads to sections of natural streams getting picked up.[98]  [99]   [100]  Q←ditchpars FINDDITCHES S,'_5'[101]  →(~Q)/L8                   ⍝Bail out if no ditches[102]  [103] ⍝Step 5. Convert back to lines[104]  [105]  ⎕←'Converting back to lines & creating final shapefile...' ⋄ FLUSH[106] [107]  Q←'&amlpath ',amlpath[108]  Q←Q OVER '&r ',amlpath,'generatelines ',(S,'_5_lines.txt'),' ','lines'[109]  Q←Q OVER 'arcshape lines line ',finalpath,'shapefiles\D',STRIP ¯1↓P         ⍝Create a shapefile in the final result path[110]  (MTOV Q) ARC P[111]  [112]  [113] ⍝Step 6. Convert to grid & then to 30 m cells[114] [115]  ⎕←'Converting result to grid and to 30 m cells...' ⋄ FLUSH[116]  Q←'grid'[117]  Q←Q OVER 'setwindow lidar_1 ',ref[118]  Q←Q OVER 'setcell 1'[119]  Q←Q OVER S,'_7 = linegrid(lines) <> 0'[120]  Q←Q OVER 'setwindow ',(⍕W),' ',ref[121]  Q←Q OVER S,'_8 = blocksum(',S,'_7, rectangle, 30, 30, data)'[122]  Q←Q OVER S,'_9 = resample(con(isnull(',S,'_8), 0, ',S,'_8), 30, nearest)'[123]  Q←Q OVER 'q'[124]  (MTOV Q) ARC P[125] [126] [127] ⍝Step 7. Write result to regional grid[128] [129]  ⎕←'Writing result to regional grid...' ⋄ FLUSH[130]  [131]  ∆SETWINDOW S,'_9'[132]  X←∆READGRID S,'_9'[133]  →L9[134]  [135] L8:SINK ∆MAKEWINDOW (2⍴tile),W[1 2],cellsize      ⍝If no ditches found, write grid of zeros[136]  X←(2⍴tile)⍴0    [137] [138] L9:INIT                       ⍝Now reset windowey shit to DSL standard[139]  L←READBLOCK (⊂GRIDNAME 'land'),(1+tile×IJ-1),(⍴X),0[140]  X←MVREP X (L≠LOOK 'Estuarine Intertidal Emergent')[141]  X WRITEBLOCK (⊂finalpath,'ditchgrid'),(1+tile×IJ-1),(⍴X),0[142]   [143] [144] [145]  ⎕←⎕TCNL,'DIGDITCHES is done for row,col ',(⍕IJ[1]),',',⍕IJ[2] ⋄ FLUSH        ∇