    ∇ A NODEREP S;A;X;Q;block;loop;test;grids;ffile;noread;tilesize;source;result;targets;Z;buffer;E;N;tilemapinclude;dot;exclude;skiptilemap;density;W;F;head;target;M;fc;fi;I;H;J[1]   ⍝Prepare node natural community representation table for FINDPATHS for CL II[2]   ⍝Runs as a single thread table metric[3]   ⍝New version that loops through tiles instead of nodes[4]   ⍝Inputs[5]   ⍝   nodes           Integer grid with node # for each reserve polygon[6]   ⍝   nodes.txt       List of nodes[7]   ⍝[8]   ⍝Parameters[9]   ⍝   targets         Target nodes[10]  ⍝   communities     Points to text file listing communities to treat separately.  Use synonyms.par to group them.[11]  ⍝   nodesize        Radius of largest node, from centroid, in km.  15 is perfectly safe.[12]  ⍝   representation  Either 'proportional' or 'equal' representation[13]  ⍝[14]  ⍝Results (table results are in pathQ\tables\)[15]  ⍝   noderep.txt     Table with rows for nodes and columns for communities, giving proportional representation for each community.  Rows sum to 1.[16]  ⍝B. Compton, 18 Nov 2013 (from OLD_NODEREP and FINDSLICE)[17]  [18]  [19]  [20]   READPARS ME[21]   buffer←4⊃A[22]   exclude←''[23]   loop←test←noread←0 ⋄ grids←0 0⍴''              ⍝   Silly junk for BLOCK, etc.[24]   ffile←'NODEREP '[25]   BLOCK 2⍴tilesize[26]   SETTILE[27]  [28]   tilemapinclude←0[29]   skiptilemap←0                                  ⍝Don't let DEBUG sabotage this[30]   E←TILEMAP '' tilesize 0 0                      ⍝Get tilemap, building it if necessary. This will only help if there's mask grid.[31]  [32]   M←0 1 TABLE pathQ,'tables\nodes.txt'           ⍝List of all nodes[33]   fc←(LOOK¨fc),fc←1 0 TABLE pathI,communities    ⍝Read focal community table[34]   fc←((⊂'')⍴¨fc[;1]),fc                          ⍝Add 1st column with single class for community group[35]   fi←MV⍪((⊃,/⍴¨fc[;2])/fc[;1]),[1.5]⊃,/fc[;2]    ⍝Community remap index[36]  [37]   Z←((1↑⍴M),1↑⍴fc)⍴0[38]  [39]   ⎕←'Running for ',(⍕+/E),' tiles' ⋄ FLUSH[40]   I←0[41]  L1:→(~E[I←I+1])/L2                              ⍝Repeat: read tile, skip if not in tilemap    --- For each tile ---[42]   BREAKCHECK ⋄ DOT[43]   N←READ 1⊃1⊃A                                   ⍝   Read nodes grid[44]   :if ~0∊⍴mask                                   ⍝   If mask grid supplied,[45]      N←0 MVREP N ((READ mask)∊0,MV)              ⍝      read mask & apply it[46]   :end[47]   →(^/,N=0)/L2[48]   X←READ 2⊃1⊃A                                   ⍝   and landcover[49]   X←(fi[;1],0)[fi[;2]⍳X]                         ⍝   remap landcover to focal community groups[50]  [51]   H←(M[;1]∊N)⌿M[;,1],⍳1↑⍴M                       ⍝   Nodes in this tile and indices into result[52]   J←0[53]  L3:→((1↑⍴H)<J←J+1)/L2                           ⍝   For each node in this tile,[54]   Z[H[J;2];]←Z[H[J;2];]++/(fc[;1])∘.=,X×N=H[J;1] ⍝      count of cells for each focal community[55]   →L3[56]  L2:→(0≠NEXTBLOCK)/L1                            ⍝Until no more tiles[57]  [58]   :if representation≡'proportional'              ⍝If proportional representation,[59]      Z←5 ROUND Z DIV ⍉(⌽⍴Z)⍴+/Z[60]   :else                                          ⍝Else, do equal representation,[61]      Z←5 ROUND (Z≠0) DIV ⍉(⌽⍴Z)⍴+/Z≠0[62]   :end[63]  [64]   ⎕←head←''[65]   Z TMATOUT pathQ,'tables\noderep.txt'[66]   ⎕←'NODEREP is done.' ⋄ FLUSH[67]   →0[68]  [69]  [70]  what:auxiliary[71]  type:table[72]  info:((pathQ,'source\nodes') 'land') '' '' 0 'include'      ⍝Source grid, settings table, result grid, buffer size, and include grid[73]  check:CHECKVAR 'targets communities nodesize representation'[74]  check:CHECKVALUES 'representation proportional equal'    ∇