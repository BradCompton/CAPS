    ∇ CAPSRUN;M;G;C;Z;I;U;T;resultgrids;caps1nt;end;W;P;B;A;blocksize;pathZ;post;finish;backup;head;Q;F[1]   ⍝Generate CAPS run on cluster or local machine[2]   ⍝B. Compton, 21-27 Nov 2007[3]   ⍝15 Jan 2009: Play nicely with gridio DLL[4]   ⍝26 Feb 2009: Change from CAPS; new parameter regime[5]   ⍝12 Aug 2009: Work with new watershed metrics[6]   ⍝21 May 2010: Also allow table-based (as opposed to block-based) metrics[7]   ⍝7 Jul 2010: move INITIALIZE here so it happens afer grids are killed[8]   ⍝10 Sep 2010: Add @wait and @continue directives.  These can be included in metrics file to control cluster runs.[9]   ⍝23 May 2011: Revise to use Anthill for cluster runs[10]  ⍝24 May 2011: change @wait directive to work as in Anthill[11]  ⍝28 Jun 2011: Add finish parameter[12]  ⍝11-12 Aug 2011: when doing a cluster run, copy parameter files to a temporary directory and point to them[13]  ⍝23 Sep 2011: backup result grids if backup\ exists in result folder; 13 Oct 2011: allow 1 result from multiple metrics[14]  ⍝23 Jan 2012: localize path.par as well as model parameter files[15]  ⍝9 Jul 2012: a couple of changes for CSE[16]  ⍝19-20 Sep 2012: don't infinitely regress if post = yes![17]  ⍝28 Sep 2012: allow runs with no metrics (POST only, presumably)[18]  ⍝5 Mar 2013: create result directories if they don't already exist[19]  ⍝11 and 14 Apr 2014: save referencewindow and refgrid in override_pars so each subtask doesn't have to get it[20]  ⍝28-29 Apr 2014: write gridinfo cache[21]  ⍝6 Oct 2014: backup & kill results in subroutine[22]  [23]  [24]  [25]   fileptr←test←loop←block←0[26]   resultgrids←0 0⍴''[27]  [28]   FRISK                                  ⍝Check all parameters to make sure we're good to go[29]   SETBREAK[30]  [31]   M←metrics[32]   G←0 4⍴''                               ⍝Empty metrics template in case there are no metrics[33]   NEWRESULTS                             ⍝Clear out results and working directories & create AMLs[34]   mask←(IFEXISTS mask,'\')/mask←1 GRIDNAME 'mask'                ⍝Mask grid, if it exists[35]  [36]   Z←0 3⍴'' ⋄ A←0⍴''[37]   →((VALUE 'notemp')∨~cluster)/L1        ⍝If doing a cluster run (unless notemp=1), make temporary copies of parameter files and redirect to them[38]   →(IFEXISTS pathP,'temp\')/L0           ⍝   If run\temp\ doesn't exist[39]   MAKEDIR pathP,'temp\'                  ⍝      create it[40]  L0:MAKEDIR pathZ←pathP,'temp\zzpars',(FRDBL 15 0⍕?1E15),'\'[41]   pathI COPYDIR pathZ,'model\'[42]   pathM COPYDIR pathZ,'metrics\'[43]   PATHSDOTPAR NWRITE pathZ,'paths.par'[44]  [45]   Q[;2]←TEXTIFYGI¨(Q←gridinfo)[;2]       ⍝   format grid info[46]   Q[;3]←TEXTIFYMI¨Q[;3]                  ⍝   textify mosiac info[47]   head←1↓⎕TCHT MTOV MATRIFY 'gridname griddescribe mosaicinfo'[48]   Q TMATOUT F←pathZ,'gridinfo.txt'       ⍝   write gridinfo cache so threads can use it[49]  [50]   ⍎(0=⎕NC'override_pars')/'override_pars←'''''[51]   override_pars←override_pars,('.|.',⎕TCNL) TEXTREPL '|[caps]|',('pathI = ''',(pathI←pathZ,'model\'),''''),'|pathM = ''',(pathM←pathZ,'metrics\'),'''|pathdir = ''',(pathZ,'paths.par'),'''|refgrid = ''',refgrid,'''|referencewindow = ',(FRDBL⍕FMTALL referencewindow),'|gridinfofile = ''',F,''''[52]  [53]  L1:→(0∊⍴M)/L9[54]   →('@'≠⊃⊃M[1;1])/L2                     ⍝   Loop for metric groups.  If @ directive,[55]   Z←Z⍪(TOLOWER 1↓⊃M[1;1]) '' ''          ⍝      Add to script[56]   M←1 0↓M                                ⍝      and drop it from metrics[57]  [58]  L2:G←M[⍳¯1+('@'=⊃¨M[;1])⍳1;]            ⍝   Metrics in next group--up to @ directive[59]   M←((1↑⍴G),0)↓M                         ⍝   Remaining metrics[60]  [61]   I←0[62]   A←A,G[;1]←TOUPPER¨G[;1][63]   W←(B←(⊂'watershed')≡¨GETTYPE¨G[;1])⌿G  ⍝   Pick out watershed metrics from type: descriptor[64]   G←(~B)⌿G                               ⍝   Pull out watershed metrics and group under WATERSHED[65]   →(0∊⍴W)/L5                             ⍝   If any watershed metrics,[66]   P←WSCENARIOS W                         ⍝      Disentangle scenarios & metrics[67]   READPARS 'WATERSHEDB'[68]   G←G⍪'WATERSHEDB' 'yes' '#' blocksize '' 0 ⍝      Set up block calls for tiny watersheds (*** Doesn't account for scenerios)[69]  [70]   I←0[71]  L4:→((1↑⍴P)<I←I+1)/L5                   ⍝   For each watershed scenario,[72]   Z←Z⍪(⊃P[I;1]) WATERSHEDRUN ⊃P[I;2]     ⍝      write watershed calls[73]   →L4[74]  [75]  L5:W←(B←(⊂'table')≡¨GETTYPE¨G[;1])⌿G    ⍝   Now pick out table metrics from type: descriptor[76]   G←(~B)⌿G                               ⍝   Pull out table metrics[77]   I←0[78]  L6:→((1↑⍴W)<I←I+1)/L7                   ⍝   For each table metric[79]   Z←Z⍪W[I;3 4 5] TABLERUN ⊃W[I;1]        ⍝      write table calls[80]   →L6[81]  [82]  L7:I←0[83]  L8:→((1↑⍴G)<I←I+1)/L9                   ⍝   For each block metric,[84]   Z←Z⍪G[I;3 4 5] BLOCKRUN ⊃G[I;1]        ⍝      write block calls[85]   →L8[86]  [87]  L9:→(~0∊⍴M)/L1                          ⍝Next group of metrics[88]  [89]   BACKKILL FRDBL¨↓resultgrids            ⍝Back up result grids and kill them[90]   (G[;4],0)[G[;1]⍳A] INITIALIZE¨A        ⍝Do any metric-specific initialization, passing tile size[91]   P←pathdir                              ⍝Protect paths.par[92]   1 READPARS 'caps'[93]   pathdir←P[94]   →((~post)∨∨/⊃,/(⊂,⎕SI) ⎕SS¨(FRDBL¨↓MATRIFY 'POST SCENARIOS MIXMETRICS MAKESETTINGS MAKEMANYSETTINGS ALLPOST CLUSTERS'),¨'[')/L12    ⍝If post = yes and this is a primary call,[95]   Z←Z⍪POSTRUN                            ⍝Run post after a wait[96]  [97]  L12:→(0∊⍴finish)/L10[98]   Z←Z⍪'wait' finish,2 2⍴⊂''              ⍝Run finish after a wait[99]  [100] L10:→cluster/L11                        ⍝If just doing local run,[101]  LOCALRUN Z                             ⍝   Just run it[102]  →0[103] L11:CAPSLAUNCH Z                        ⍝   Launch CAPS project in Anthill[104]  T←⎕EX 'override_pars'    ∇