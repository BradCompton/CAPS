    ∇ FINDCROSS R;B;J;T;S;fl;Q;V;C;A;X;R[1]   ⍝Find all road crossings in road, railroad, or both ⍵[2]   ⍝Incorporates FIXFLOW to avoid spurious crossings where streams flow along roads.[3]   ⍝This version works properly for short streams and cul-de-sacs.[4]   ⍝Stream centerlines that start in road cells don't count as crossings.[5]   ⍝Inputs:[6]   ⍝   R        - grid of roads or railroads (use road+railroad for both)[7]   ⍝   strflow  - stream centerline grid[8]   ⍝Result:[9]   ⍝   cross    - grid with 1 for each stream centerline cell immediately below a road crossing[10]  ⍝[11]  ⍝Algorithm:[12]  ⍝   Mark all cells where centerlines cross roads (including railroads)[13]  ⍝   For each marked cell,[14]  ⍝      Follow flow down from current cell to find the non-road center line that this cell flows into ("target" cell)*[15]  ⍝      Follow flow up from target cell to find all non-road centerline cells that flow into this ("source" cells)*[16]  ⍝      Build patch (8-rule) of road+centerline cells ("cross" cells)[17]  ⍝      Tag (8-rule) cells adjacent to cross cells that DO NOT fall on roads[18]  ⍝      Also tag source and target cells[19]  ⍝      Build patch of tag cells, starting with target cell[20]  ⍝      If any source cells fall outside of patch, set target cell as crossing in result[21]  ⍝      Mark all followed cells (*) as done (i.e., unmark them)[22]  ⍝[23]  ⍝B. Compton, 14-15 Oct 2004[24]  [25]   R←R≠0[26]   cross←(⍴R)⍴0[27]   fl←0,0⍪(strflow⍪0),0[28]   B←C←R^strflow≠0                 ⍝Mark cells where centerlines cross roads[29]  L1:→(~1∊B)/0                     ⍝Until no more marked cells,[30]   T←J←1+(1 0+⍴B)⊤¯1+(,B)⍳1        ⍝   Find first marked cell[31]   B[J[1];J[2]]←0                  ⍝   Cell is done[32]  L2:T←strflow NEXTFLOW2 T          ⍝      Follow flow down to non-road "target" cell[33]   →(T=0)/L1                       ⍝      If flowing out of watershed, this crossing is out[34]   B[T[1];T[2]]←0                  ⍝      Mark cell done[35]   →R[T[1];T[2]]/L2                ⍝   Until cell is off-road[36]   Q←R ⋄ Q[T[1];T[2]]←1[37]   S V←Q FLOW2PATCH T              ⍝   Find all cells that flow into road above target ("source" cells)[38]   B←B SCATR V 0                   ⍝   Mark visited cells as done[39]   X←C FIND1PATCH J                ⍝   "Cross" cells[40]   A←(~R)^BUFFER8 X                ⍝   Adjacent cells (8-rule) not on roads[41]   A←A SCATR (T⍪S) 1               ⍝   Tag these cells[42]   A←A FIND1PATCH T                ⍝   Build patch[43]   cross[T[1];T[2]]←∨/~A SCATI S   ⍝   Crossing if any source cells fall outside of patch[44]   →L1    ∇