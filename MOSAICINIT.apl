    ∇ P MOSAICINIT M;R;G;T;∆set;rowsize;colsize;rows;cols;panemap;W;extent;Q;B;S;C;L;I;U;V;S_;head;Y;D;O;Q_;J;H[1]   ⍝Defines the mosaic scheme used for all grids given ⍵ and ⍺[2]   ⍝Arguments:[3]   ⍝   ⍵[1] is either:[4]   ⍝    - path to a mosaic[5]   ⍝    - path to a reference grid (must also supply rowsize and colsize)[6]   ⍝   ⍵[2] is either:[7]   ⍝    - path to gridservers.txt (default path: pathA)[8]   ⍝    - vectors of (1) server names (empty to use local server), (2) ports, (3) drives, and (4) windows[9]   ⍝   ⍺[1] - rowsize, cell rows in pane (required unless a mosaic is supplied)[10]  ⍝   ⍺[2] - colsize[11]  ⍝   ⍺[3] - panemap, '00101101' (required unless a mosaic is supplied)[12]  ⍝   ⍺[4] - window, xll, yll, nrow, ncol, cellsize[13]  ⍝Sets:[14]  ⍝   mosaic, mosaic_ - definition of current mosaic scheme:[15]  ⍝      rowsize     cells in each pane row[16]  ⍝      colsize     cells in each pane column[17]  ⍝      rows        pane rows in each mosaic[18]  ⍝      cols        pane columns in each mosaic[19]  ⍝      panes       panes in mosaic (rows x cols)[20]  ⍝      lastrowsize number of rows of cells in bottom pane row[21]  ⍝      lastcolsize number of columns of cells in bottom pane column[22]  ⍝      panemap     string with compressed binary vector (e.g.,[23]  ⍝                  '001010') indicating which panes contain data[24]  ⍝   mosaicwindow - virtual reference window of a mosaic[25]  ⍝    - xll, yll, nrow, ncol, cellsize for entire mosaic[26]  ⍝   connections for each pane[27]  ⍝Sample calls:[28]  ⍝   MOSAICINIT 'd:\caps\mosaics\land' 'gridservers.txt'[29]  ⍝   25E10 25E10 panemap window MOSAICINIT 'd:\caps\grids\land' (servers ports)[30]  ⍝B. Compton, 6 and 12 and 30 Sep 2013[31]  ⍝8 Oct 2013: deal with drives[32]  ⍝15 Oct 2013: count panes properly.  Government still shut down, debt ceiling hit this week?[33]  ⍝1 Nov 2013: use MOSAICINFO instead of cowboying it; only include grid servers with windows that match panes in our mosaic[34]  ⍝14-15 Nov 2013: revise for mosaics + drives[35]  ⍝19 Nov 2013: use GETTABLE[36]  ⍝16 Dec 2013: use MOSAICINFO[37]  ⍝3 Feb 2015: work properly when there is more than one grid server for a window[38]  ⍝3-4 Aug 2017: oh boy...this totally didn't work when using grid servers on multiple machines (banding at Fort River this morning...22 GRCAs) + drop inactive servers![39]  [40]  [41]  [42]   ⍎(1=≡M)/'M←M '''''[43]   M G ← M        ⍝Reference (mosaic or grid) and grid server info[44]   ⍎(0=⎕NC'P')/'P←⍳0'[45]   P←4↑P          ⍝rowsize, colsize, panemap, window vector (0 if empty)[46]  [47]   O←⍳0[48]   :if 0≠⎕NC 'mosaic'                         ⍝If there's already a mosaic,[49]   :andif ~0∊⍴mosaic[50]      O ← mosaic mosaicwindow                 ⍝   save it[51]   :end[52]  [53]   Q←'rowsize colsize rows cols panes lastrowsize lastcolsize panemap'[54]   mosaic←(⍴mosaic_←FRDBL¨↓MATRIFY Q)⍴0       ⍝set up mosaic and header[55]  [56]   Q Q_ ← MOSAICINFO M                        ⍝Get lock and read mosaic info[57]   :if ~0∊⍴Q                                  ⍝If reference is a mosaic,[58]      mosaic[mosaic_ COL 'rowsize colsize rows cols panemap'] ← Q[Q_ COL 'rowsize colsize rows cols panemap'][59]      W←⊃Q[Q_ COL 'extent'][60]      :if ∨/P[1 2]≠0[61]         ⎕←'Warning: using rowsize and colsize from mosaic; rowsize/colsize arguments ignored'[62]      :end[63]   :else                                      ⍝Else, reference is a grid[64]      ⎕ERROR (~landscapewide)/'Error: landscapewide = no, but a grid was supplied as the mosaic reference--it must be a mosaic'[65]      W←∆GRIDDESCRIBE M                       ⍝   get window from grid[66]      ⎕ERROR (∨/P[1 2]=0)/'Error: must supply rowsize and colsize when reference is a grid'[67]      Q←⌈W[2 1]÷P[1 2]                        ⍝   pane rows and columns[68]      mosaic[mosaic_ COL 'rowsize colsize rows cols panemap'] ← P[1 2],Q,P[3][69]   :end[70]  [71]   mosaic[mosaic_ COL 'lastrowsize lastcolsize'] ← 1+mosaic[mosaic_ COL 'rowsize colsize']|¯1+W[2 1][72]   mosaic[mosaic_ COL 'panes']←×/mosaic[mosaic_ COL 'rows cols'][73]  [74]   mosaicwindow←5↑W[75]   INITCONNECTIONS                            ⍝create connection variables if they don't exist[76]   :if 0∊⍴referencewindow                     ⍝If reference window isn't set, set it[77]      referencewindow←mosaicwindow[78]      workingresolution←mosaicwindow[5][79]   :end[80]  [81]   :if ~0∊⍴O                                  ⍝If a mosaic already exists,[82]   :andif ~O≡mosaic mosaicwindow              ⍝   check to see if new mosiac matches old one[83]      ⎕ERROR 'Warning: Prior mosaic doesn''t match new mosaic.  Dropping prior mosaic'[84]      Q←0=connections[;connections_ COL 'pane'][85]      connections←Q⌿connections               ⍝   drop old mosaic[86]   :end[87]  [88]   :if ~1⊃Q←CHECKWINDOW mosaicwindow 1        ⍝Check against existing window[89]      T←⎕EX 'mosaic'[90]      ⎕ERROR 'Virtual mosaic window doesn''t match existing windows: ',2⊃Q[91]   :end[92]  [93]  ⍝Now add gridsevers for each pane to connections[94]   :if 0∊⍴G                                   ⍝If gridservers list is empty,[95]      L←1                                     ⍝   use local grid server[96]      U←V←D←Y←⊂''[97]   :elseif 1=≡G                               ⍝else, if no depth, it's a path to gridservers.txt[98]      S S_ ← GETTABLE pathA PATH G            ⍝   read gridservers.txt[99]      S←S[;S_ COL 'active']⌿S                 ⍝   drop the inactive servers![100]     U V ← ↓[1]S[;S_ COL 'server port']      ⍝   servers, ports,[101]     D←S[;S_ COL 'drive']                    ⍝   drives,[102]     Y←S[;S_ COL 'ncol nrow xll yll cellsize']  ⍝   and windows[103]     L←0                                     ⍝   not local[104]  :else                                      ⍝else, it's a vector of[105]     U V D Y ← G                             ⍝   server names, ports, drives, and windows[106]     L←0[107]  :end[108] [109]  B←⎕FI((2×⍴T)⍴1 0)\T←⊃mosaic[mosaic_ COL 'panemap']                         ⍝Expand panemap to bit vector[110]  W←1⊃¨(⊂mosaicwindow) PANEWINDOW¨B/(⊂mosaic[mosaic_ COL 'rowsize colsize']),¨(⍳mosaic[mosaic_ COL 'panes'])   ⍝Window for each pane with data[111]  J←⊃,/H←(⊂0,(↓Y),0,U,((V,[1.5]0),0),D) FINDCONNECTION¨(⊂¨W),¨1              ⍝We only want grid servers that match panes in our mosaics[112]  Y←Y[J;] ⋄ U←U[J] ⋄ V←V[J] ⋄ D←D[J]                                         ⍝Expand these out when multiple servers per pane[113] [114]  :if L                                                                      ⍝If local grid server,[115]     U←V←D←⊂''[116]  :end[117] [118]  C←(0,(↓Y),L,U,V,[1.5]serverlog),((⊃,/⍴¨H)/B/⍳mosaic[mosaic_ COL 'panes']),[1.5]D  ⍝Data for connections[119] [120]  I←(FRDBL¨↓MATRIFY 'set window local server port log pane drive')⍳connections_         ⍝Index columns of connections[121]  connections←connections⍪C[;I]                                              ⍝Add to connections[122] [123]  connections[;connections_ COL 'drive']←TOLOWER¨connections[;connections_ COL 'drive']  ⍝Make sure drives are all in same case![124]  Q←↓connections[;connections_ COL 'window drive'][125]  connections←((Q⍳Q)=⍳⍴Q)⌿connections                                        ⍝Drop duplicates from connections[126] [127]  SETCONNECTION (↓connections[;connections_ COL 'window drive'])⍳⊂C[?''⍴1↑⍴C;connections_ COL 'window drive']  ⍝Set active connection to a random pane in mosaic[128]  SETCACHE 1[129]  ACTIVATECONNECTION    ∇